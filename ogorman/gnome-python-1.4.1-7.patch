diff -Naur gnome-python-1.4.1.old/Makefile.in gnome-python-1.4.1/Makefile.in
--- gnome-python-1.4.1.old/Makefile.in	Mon Apr 23 10:56:22 2001
+++ gnome-python-1.4.1/Makefile.in	Tue Aug  6 21:57:28 2002
@@ -133,7 +133,7 @@
 
 AUTOMAKE_OPTIONS = 1.4a
 
-SUBDIRS = macros pygtk pygnome
+SUBDIRS = macros pygnome
 
 EXTRA_DIST = gnome-python.spec
 subdir = .
diff -Naur gnome-python-1.4.1.old/configure gnome-python-1.4.1/configure
--- gnome-python-1.4.1.old/configure	Mon Apr 23 10:56:24 2001
+++ gnome-python-1.4.1/configure	Tue Aug  6 22:14:13 2002
@@ -1855,6 +1855,7 @@
   ;;
 
 darwin* | rhapsody*)
+  lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
   lt_cv_file_magic_cmd='/usr/bin/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
@@ -3470,8 +3471,11 @@
     ;;
 
   darwin* | rhapsody*)
-    allow_undefined_flag='-undefined suppress'
-    archive_cmds='$CC `test .$module = .yes && echo -bundle || echo -dynamiclib` $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname `test -n "$verstring" -a x$verstring != x0.0 && echo $verstring`'
+    allow_undefined_flag='-flat_namespace -undefined suppress'
+    # FIXME: Relying on posixy $() will cause problems for
+    #        cross-compilation, but unfortunately the echo tests do not
+    #        yet detect zsh echo's removal of \ escapes.
+    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $tmp_verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
@@ -3868,8 +3872,11 @@
   version_type=darwin
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${versuffix}.`test .$module = .yes && echo so || echo dylib` ${libname}${release}${major}.`test .$module = .yes && echo so || echo dylib` ${libname}.`test .$module = .yes && echo so || echo dylib`'
-  soname_spec='${libname}${release}${major}.`test .$module = .yes && echo so || echo dylib`'
+  # FIXME: Relying on posixy $() will cause problems for
+  #        cross-compilation, but unfortunately the echo tests do not
+  #        yet detect zsh echo's removal of \ escapes.
+  library_names_spec='${libname}${release}${versuffix}.$(test .$module = .yes && echo so || echo dylib) ${libname}${release}${major}.$(test .$module = .yes && echo so || echo dylib) ${libname}.$(test .$module = .yes && echo so || echo dylib)'
+  soname_spec='${libname}${release}${major}.$(test .$module = .yes && echo so || echo dylib)'
   shlibpath_overrides_runpath=yes
   shlibpath_var=DYLD_LIBRARY_PATH
   ;;
diff -Naur gnome-python-1.4.1.old/ltmain.sh gnome-python-1.4.1/ltmain.sh
--- gnome-python-1.4.1.old/ltmain.sh	Fri Apr 13 23:47:33 2001
+++ gnome-python-1.4.1/ltmain.sh	Tue Aug  6 21:54:31 2002
@@ -2827,6 +2827,11 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+         if test "x$verstring" = "x0.0"; then
+           tmp_verstring=
+         else
+           tmp_verstring="$verstring"
+         fi	
 	  eval cmds=\"$archive_cmds\"
 	fi
 	IFS="${IFS= 	}"; save_ifs="$IFS"; IFS='~'
