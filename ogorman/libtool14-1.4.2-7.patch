diff -Naur libtool-1.4.2.old/acinclude.m4 libtool-1.4.2/acinclude.m4
--- libtool-1.4.2.old/acinclude.m4	Tue Sep 11 12:16:01 2001
+++ libtool-1.4.2/acinclude.m4	Fri Aug  2 22:59:29 2002
@@ -1580,7 +1580,7 @@
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$nonopt $(test "x$module" = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+    archive_cmds='$nonopt $(test x$module = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test x$module != xyes && echo -install_name $rpath/$soname $verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
diff -Naur libtool-1.4.2.old/libltdl/ltdl.c libtool-1.4.2/libltdl/ltdl.c
--- libtool-1.4.2.old/libltdl/ltdl.c	Tue Sep 11 11:02:07 2001
+++ libtool-1.4.2/libltdl/ltdl.c	Fri Aug  2 23:00:07 2002
@@ -1009,6 +1009,127 @@
 
 #endif /* HAVE_LIBDL */
 
+/* --- NSLINKMODULE() MACOSX INTERFACE LOADER --- */
+
+
+#if HAVE_NSLINKMODULE
+
+#include <mach-o/dyld.h>
+
+#ifndef LT_GLOBAL
+#  define LT_GLOBAL		0
+#endif /* !LT_GLOBAL */
+static char*
+lt_int_dyld_error(othererror)
+	char* othererror;
+{
+	NSLinkEditErrors ler;
+	int lerno;
+	const char* errstr;
+	const char* file;
+	NSLinkEditError(&ler,&lerno,&file,&errstr);	
+	if (!errstr || !strlen(errstr)) errstr = othererror;
+	return errstr;
+}	
+
+static lt_module
+sys_dyld_open (loader_data, filename)
+     lt_user_data loader_data;
+     const char *filename;
+{
+	lt_module   module   = 0;
+	NSObjectFileImage ofi = 0;
+	NSObjectFileImageReturnCode ofirc;
+	
+  	if (!filename) 
+#if HAVE_NSADDLIBRARY
+		return (lt_module)_dyld_get_image_header(0);
+#else  	
+  		return (lt_module)-1;
+#endif
+	ofirc = NSCreateObjectFileImageFromFile(filename, &ofi);
+	switch (ofirc)
+	{
+		case NSObjectFileImageSuccess:
+			module = NSLinkModule(ofi, filename,
+						NSLINKMODULE_OPTION_RETURN_ON_ERROR
+						 | NSLINKMODULE_OPTION_PRIVATE
+						 | NSLINKMODULE_OPTION_BINDNOW);
+			NSDestroyObjectFileImage(ofi);		
+			break;
+#if HAVE_NSADDLIBRARY			
+		case NSObjectFileImageInappropriateFile:	
+			module = (lt_module)NSAddImage(filename, NSADDIMAGE_OPTION_RETURN_ON_ERROR);	
+			break;
+#endif			
+		default:
+			LT_DLMUTEX_SETERROR (LT_DLSTRERROR(CANNOT_OPEN));
+			return 0;
+	}
+	if (!module) LT_DLMUTEX_SETERROR (lt_int_dyld_error(LT_DLSTRERROR(CANNOT_OPEN)));
+  return module;
+}
+
+static int
+sys_dyld_close (loader_data, module)
+     lt_user_data loader_data;
+     lt_module module;
+{
+ return 0;
+}
+
+static lt_ptr
+sys_dyld_sym (loader_data, module, symbol)
+     lt_user_data loader_data;
+     lt_module module;
+     const char *symbol;
+{
+	lt_ptr address = 0;
+  	NSSymbol * nssym = 0;
+#if !HAVE_NSADDLIBRARY
+  	if (module == (lt_module)-1)
+  	{
+			/* Global context, use NSLookupAndBindSymbol */
+			if (NSIsSymbolNameDefined(symbol)) 
+			{
+				nssym = NSLookupAndBindSymbol(symbol);
+			}  	
+  	
+  	}
+#else
+  	if ((((struct mach_header*)module)->magic == MH_MAGIC) || 
+      	(((struct mach_header*)module)->magic == MH_CIGAM))
+  	{
+	  	if (NSIsSymbolNameDefinedInImage((struct mach_header*)module,symbol)) 
+	  	{
+	    	nssym = NSLookupSymbolInImage((struct mach_header*)module,
+								  		symbol,
+								  		NSLOOKUPSYMBOLINIMAGE_OPTION_BIND 
+								  		| NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR
+								  		);
+		}  
+  
+  	}    
+  else {
+#endif
+	nssym = NSLookupSymbolInModule(module, symbol);
+
+#if HAVE_NSADDLIBRARY
+	}
+#endif 
+	if (!nssym) 
+	{
+		LT_DLMUTEX_SETERROR (lt_int_dyld_error(LT_DLSTRERROR(SYMBOL_NOT_FOUND)));
+		return NULL;
+	}	
+	return NSAddressOfSymbol(nssym);
+}
+
+static struct lt_user_dlloader sys_dyld =
+  { "_", sys_dyld_open, 0, sys_dyld_sym, 0, 0 };
+
+
+#endif /* HAVE_NSLINKMODULE */
 
 
 /* --- SHL_LOAD() INTERFACE LOADER --- */
@@ -1708,7 +1829,7 @@
       handles = 0;
       user_search_path = 0; /* empty search path */
 
-#if HAVE_LIBDL && !defined(__CYGWIN__)
+#if HAVE_LIBDL && !defined(__CYGWIN__) && !HAVE_NSLINKMODULE
       errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dl, "dlopen");
 #endif
 #if HAVE_SHL_LOAD
@@ -1722,6 +1843,9 @@
 #endif
 #if HAVE_DLD
       errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dld, "dld");
+#endif
+#if HAVE_NSLINKMODULE
+      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dyld, "dyld");
 #endif
       errors += lt_dlloader_add (lt_dlloader_next (0), &presym, "dlpreload");
 
diff -Naur libtool-1.4.2.old/libtool.m4 libtool-1.4.2/libtool.m4
--- libtool-1.4.2.old/libtool.m4	Tue Sep 11 12:16:01 2001
+++ libtool-1.4.2/libtool.m4	Fri Aug  2 22:59:29 2002
@@ -1580,7 +1580,7 @@
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$nonopt $(test "x$module" = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+    archive_cmds='$nonopt $(test x$module = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test x$module != xyes && echo -install_name $rpath/$soname $verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
diff -Naur libtool-1.4.2.old/ltdl.m4 libtool-1.4.2/ltdl.m4
--- libtool-1.4.2.old/ltdl.m4	Tue Sep 11 11:02:06 2001
+++ libtool-1.4.2/ltdl.m4	Fri Aug  2 23:07:11 2002
@@ -76,6 +76,9 @@
 	# PORTME does your system automatically load deplibs for dlopen()?
 	libltdl_cv_sys_dlopen_deplibs=unknown
 	case "$host_os" in
+	darwin*)
+	  libltdl_cv_sys_dlopen_deplibs=yes
+	  ;;
 	linux*)
 	  libltdl_cv_sys_dlopen_deplibs=yes
 	  ;;
@@ -110,6 +113,11 @@
 libltdl_cv_shlibext=`cat conftest`
 rm -f conftest
 ])
+	case "$host_os" in
+	darwin*)
+	  ibltdl_cv_shlibext = "dylib"
+	 ;;
+	ecas 
 if test -n "$libltdl_cv_shlibext"; then
   AC_DEFINE_UNQUOTED(LTDL_SHLIB_EXT, "$libltdl_cv_shlibext",
     [Define to the extension used for shared libraries, say, ".so". ])
@@ -210,6 +218,13 @@
      [Define if you have the shl_load function.])
    LIBADD_DL="$LIBADD_DL -ldld"])
 ])
+
+AC_CHECK_FUNC([NSLinkModule],
+		AC_DEFINE([HAVE_NSLINKMODULE], [1], [Define if you have the NSLinkModule function.])
+		LIBADD_DL=""
+		AC_CHECK_FUNC([NSAddLibrary],
+		AC_DEFINE([HAVE_NSADDLIBRARY], [1], [Define if you have the NSAddLibrary function.])))
+		
 AC_CHECK_LIB(dld, dld_link, [AC_DEFINE(HAVE_DLD, 1,
   [Define if you have the GNU dld library.])dnl
 test "x$ac_cv_lib_dld_shl_load" = yes || LIBADD_DL="$LIBADD_DL -ldld"])
diff -Naur libtool-1.4.2.old/ltmain.in libtool-1.4.2/ltmain.in
--- libtool-1.4.2.old/ltmain.in	Tue Sep 11 08:40:18 2001
+++ libtool-1.4.2/ltmain.in	Fri Aug  2 22:59:30 2002
@@ -2894,6 +2894,11 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+	  if test "x$verstring" = "x0.0"; then
+		tmp_verstring=
+	  else
+		tmp_verstring="$verstring"
+	  fi
 	  eval cmds=\"$archive_cmds\"
 	fi
 	save_ifs="$IFS"; IFS='~'
diff -Naur libtool-1.4.2.old/ltmain.sh libtool-1.4.2/ltmain.sh
--- libtool-1.4.2.old/ltmain.sh	Tue Sep 11 12:33:26 2001
+++ libtool-1.4.2/ltmain.sh	Fri Aug  2 22:59:30 2002
@@ -2894,7 +2894,12 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
-	  eval cmds=\"$archive_cmds\"
+	  save_deplibs="$deplibs"
+	  for conv in $convenience; do
+	    deplibs="${deplibs%$conv*} ${deplibs#*$conv}"
+	  done
+ 	  eval cmds=\"$archive_cmds\"
+	  deplibs="$save_deplibs"
 	fi
 	save_ifs="$IFS"; IFS='~'
 	for cmd in $cmds; do
