#!/home/dmacks/bin/perl -w

use strict;
use Parse::RecDescent;
use Data::Dumper;

$::RD_ERRORS = 1;
$::RD_WARN   = 1;
$::RD_HINT   = 1;
#$::RD_TRACE  = 1;

my $grammar = <<'_EOGRAMMAR_';

startrule : cond_pkg_spec_list /$/ { $item{cond_pkg_spec_list} }

cond_pkg_spec_list : cond_pkg_spec /[,|]/ cond_pkg_spec_list { $item[1] . $item[2] . ' ' . $item[3] }
		   | cond_pkg_spec

cond_pkg_spec : simple_pkg_list
	      | /\(/ cond /\)/ simple_pkg_spec
	          { $item{cond} ? $item{simple_pkg_spec} : "" }
	      | /\(/ cond /\)/ /\{/ simple_pkg_list /\}/
	          { $item{cond} ? $item{simple_pkg_list} : "" }

simple_pkg_list : simple_pkg_spec /[,|]/ simple_pkg_list { $item[1] . $item[2] . ' ' . $item[3] }
		| simple_pkg_spec

cond : ( string | '' ) /(<<|>>|>=|<=|=|!=)/ ( string | '' ) { 1 } #return main::eval_cond(@item) }
     | string { 1 }
     | '' { 0 }

string : /[a-z0-9.\-+]+/

simple_pkg_spec : string /\(/ vers_spec /\)/ { $item[1] . ' (' . $item[3] . ')' }
		| string

vers_spec : /(<<|<=|=|>=|>>)/ /[a-z0-9.\-+:]+/ { $item[1] . ' ' . $item[2] }

_EOGRAMMAR_

my $parser = Parse::RecDescent->new($grammar);

while (<>) {
	chomp;
	my @ret = $parser->startrule($_);
	print Dumper(@ret);
}

