diff -Nurd -x'*~' ghostscript-8.64.orig/base/devs.mak ghostscript-8.64/base/devs.mak
--- ghostscript-8.64.orig/base/devs.mak	2008-11-07 13:49:34.000000000 -0500
+++ ghostscript-8.64/base/devs.mak	2009-03-16 01:26:48.000000000 -0400
@@ -251,9 +251,9 @@
 gdevdljm_h=$(GLSRC)gdevdljm.h $(gdevpcl_h)
 ConvertUTF_h=$(GLSRC)ConvertUTF.h
 
-GDEVLDFJB2CC=$(CC_) $(I_)$(GLI_) $(II)$(LDF_JB2I_)$(_I) $(JB2CF_) $(GLF_)
-GDEVLWFJPXCC=$(CC_) $(I_)$(GLI_) $(II)$(LWF_JPXI_)$(_I) $(JPXCF_) $(GLF_)
-GDEVLWFJB2JPXCC=$(CC_) $(I_)$(GLI_)  $(II)$(LDF_JB2I_) $(II)$(LWF_JPXI_)$(_I) $(JB2CF_) $(JPXCF_) $(GLF_)
+GDEVLDFJB2CC=$(CC)  $(I_)$(GLI_) $(II)$(LDF_JB2I_)$(_I) $(JB2CF_) $(GLF_) $(CCFLAGS)
+GDEVLWFJPXCC=$(CC)  $(I_)$(GLI_) $(II)$(LWF_JPXI_)$(_I) $(JPXCF_) $(GLF_) $(CCFLAGS)
+GDEVLWFJB2JPXCC=$(CC)  $(I_)$(GLI_)  $(II)$(LDF_JB2I_) $(II)$(LWF_JPXI_)$(_I) $(JB2CF_) $(JPXCF_) $(GLF_) $(CCFLAGS)
 
 ###### ----------------------- Device support ----------------------- ######
 
@@ -659,7 +659,7 @@
 
 $(GLOBJ)gdevijs.$(OBJ) : $(GLSRC)gdevijs.c $(PDEVH) $(unistd__h) $(gp_h)\
  $(ijs_h) $(ijs_client_h)
-	$(CC_) $(I_)$(GLI_) $(II)$(IJSI_)$(_I) $(GLF_) $(GLO_)gdevijs.$(OBJ) $(C_) $(GLSRC)gdevijs.c
+	$(CC)  $(I_)$(GLI_) $(II)$(IJSI_)$(_I) $(GLF_) $(GLO_)gdevijs.$(OBJ) $(C_) $(GLSRC)gdevijs.c $(CCFLAGS)
 
 # Please see ijs.mak for the Makefile fragment which builds the IJS
 # library.
@@ -673,7 +673,7 @@
 RINKJ_O_=$(O_)$(RINKJ_OBJ)
 
 RINKJ_INCL=$(I_)$(RINKJ_SRCDIR)$(_I)
-RINKJ_CC=$(CC_) $(RINKJ_INCL)
+RINKJ_CC=$(CC)  $(RINKJ_INCL) $(CCFLAGS)
 
 rinkj_core=$(RINKJ_OBJ)evenbetter-rll.$(OBJ) \
  $(RINKJ_OBJ)rinkj-byte-stream.$(OBJ) $(RINKJ_OBJ)rinkj-device.$(OBJ) \
@@ -1498,7 +1498,7 @@
 
 $(GLOBJ)gdevpng.$(OBJ) : $(GLSRC)gdevpng.c\
  $(gdevprn_h) $(gdevpccm_h) $(gscdefs_h) $(png__h)
-	$(CC_) $(I_)$(GLI_) $(II)$(PI_)$(_I) $(PCF_) $(GLF_) $(GLO_)gdevpng.$(OBJ) $(C_) $(GLSRC)gdevpng.c
+	$(CC)  $(I_)$(GLI_) $(II)$(PI_)$(_I) $(PCF_) $(GLF_) $(GLO_)gdevpng.$(OBJ) $(C_) $(GLSRC)gdevpng.c $(CCFLAGS)
 
 $(DD)pngmono.dev : $(DEVS_MAK) $(libpng_dev) $(png_) $(GLD)page.dev
 	$(SETPDEV2) $(DD)pngmono $(png_)
diff -Nurd -x'*~' ghostscript-8.64.orig/base/icclib.mak ghostscript-8.64/base/icclib.mak
--- ghostscript-8.64.orig/base/icclib.mak	2007-06-05 18:23:38.000000000 -0400
+++ ghostscript-8.64/base/icclib.mak	2009-03-16 01:26:48.000000000 -0400
@@ -42,7 +42,7 @@
 # ICCI_ and ICCF_ are defined in gs.mak.
 ICC_INCL=$(I_)$(ICCI_) $(II)$(GLSRCDIR) $(II)$(GLGENDIR)$(_I)
 ICC_CCFLAGS=$(ICC_INCL) $(ICCF_) 
-ICC_CC=$(CC_) $(ICC_CCFLAGS)
+ICC_CC=$(CC)  $(ICC_CCFLAGS) $(CCFLAGS)
 
 # Define the name of this makefile.
 ICCLIB_MAK=$(GLSRC)icclib.mak
diff -Nurd -x'*~' ghostscript-8.64.orig/base/jasper.mak ghostscript-8.64/base/jasper.mak
--- ghostscript-8.64.orig/base/jasper.mak	2008-04-10 18:08:20.000000000 -0400
+++ ghostscript-8.64/base/jasper.mak	2009-03-16 01:26:48.000000000 -0400
@@ -159,7 +159,7 @@
         $(D_)EXCLUDE_PNG_SUPPORT$(_D_)1$(_D)
 
 # define our specific compiler
-JAS_CC=$(CC_) $(I_)$(JASGEN) $(II)$(JPXI_)$(_I) $(JPXCF_) $(JAS_EXCF_)
+JAS_CC=$(CC)  $(I_)$(JASGEN) $(II)$(JPXI_)$(_I) $(JPXCF_) $(JAS_EXCF_) $(CCFLAGS)
 JASO_=$(O_)$(JASOBJ)
 
 # switch in the selected .dev
diff -Nurd -x'*~' ghostscript-8.64.orig/base/jbig2.mak ghostscript-8.64/base/jbig2.mak
--- ghostscript-8.64.orig/base/jbig2.mak	2008-04-10 18:08:20.000000000 -0400
+++ ghostscript-8.64/base/jbig2.mak	2009-03-16 01:26:48.000000000 -0400
@@ -89,7 +89,7 @@
 
 JBIG2DEP=$(AK)
 
-JBIG2_CC=$(CC_) $(CFLAGS) $(I_)$(JBIG2GENDIR) $(II)$(JB2I_)$(_I) $(JB2CF_)
+JBIG2_CC=$(CC)  $(I_)$(JBIG2GENDIR) $(II)$(JB2I_)$(_I) $(JB2CF_) $(CCFLAGS) $(CFLAGS)
 JBIG2O_=$(O_)$(JBIG2OBJ)
 
 # switch in the version of libjbig2.dev we're actually using
diff -Nurd -x'*~' ghostscript-8.64.orig/base/jpeg.mak ghostscript-8.64/base/jpeg.mak
--- ghostscript-8.64.orig/base/jpeg.mak	2007-11-09 16:18:04.000000000 -0500
+++ ghostscript-8.64/base/jpeg.mak	2009-03-16 01:26:48.000000000 -0400
@@ -71,7 +71,7 @@
 
 # JI_ and JF_ are defined in gs.mak.
 # See below for why we need to include GLGENDIR here.
-JCC=$(CC_) $(I_)$(GLGENDIR) $(II)$(JI_)$(_I) $(JF_)
+JCC=$(CC)  $(I_)$(GLGENDIR) $(II)$(JI_)$(_I) $(JF_) $(CCFLAGS)
 
 # We need our own version of jconfig.h, and our own "wrapper" for
 # jmorecfg.h.
diff -Nurd -x'*~' ghostscript-8.64.orig/base/lib.mak ghostscript-8.64/base/lib.mak
--- ghostscript-8.64.orig/base/lib.mak	2009-01-08 04:17:18.000000000 -0500
+++ ghostscript-8.64/base/lib.mak	2009-03-16 01:26:48.000000000 -0400
@@ -25,15 +25,15 @@
 GLI_=$(GLGENDIR) $(II)$(GLSRCDIR)
 GLF_=
 GLCCFLAGS=$(I_)$(GLI_)$(_I) $(GLF_)
-GLCC=$(CC_) $(GLCCFLAGS)
-GLICCCC=$(CC_) $(I_)$(GLI_) $(II)$(ICCI_)$(_I) $(ICCCF_) $(GLF_)
-GLJCC=$(CC_) $(I_)$(GLI_) $(II)$(JI_)$(_I) $(JCF_) $(GLF_)
-GLZCC=$(CC_) $(I_)$(GLI_) $(II)$(ZI_)$(_I) $(ZCF_) $(GLF_)
-GLJBIG2CC=$(CC_) $(I_)$(GLI_) $(II)$(JB2I_)$(_I) $(JB2CF_) $(GLF_)
-GLJASCC=$(CC_) $(I_)$(JPXI_) $(II)$(GLI_)$(_I) $(JPXCF_) $(GLF_)
-GLLDFJB2CC=$(CC_) $(I_)$(LDF_JB2I_) $(II)$(GLI_)$(_I) $(JB2CF_) $(GLF_)
-GLLWFJPXCC=$(CC_) $(I_)$(LWF_JPXI_) $(II)$(GLI_)$(_I) $(JPXCF_) $(GLF_)
-GLCCSHARED=$(CC_SHARED) $(GLCCFLAGS)
+GLCC=$(CC)  $(GLCCFLAGS) $(CCFLAGS)
+GLICCCC=$(CC)  $(I_)$(GLI_) $(II)$(ICCI_)$(_I) $(ICCCF_) $(GLF_) $(CCFLAGS)
+GLJCC=$(CC)  $(I_)$(GLI_) $(II)$(JI_)$(_I) $(JCF_) $(GLF_) $(CCFLAGS)
+GLZCC=$(CC)  $(I_)$(GLI_) $(II)$(ZI_)$(_I) $(ZCF_) $(GLF_) $(CCFLAGS)
+GLJBIG2CC=$(CC)  $(I_)$(GLI_) $(II)$(JB2I_)$(_I) $(JB2CF_) $(GLF_) $(CCFLAGS)
+GLJASCC=$(CC)  $(I_)$(JPXI_) $(II)$(GLI_)$(_I) $(JPXCF_) $(GLF_) $(CCFLAGS)
+GLLDFJB2CC=$(CC)  $(I_)$(LDF_JB2I_) $(II)$(GLI_)$(_I) $(JB2CF_) $(GLF_) $(CCFLAGS)
+GLLWFJPXCC=$(CC)  $(I_)$(LWF_JPXI_) $(II)$(GLI_)$(_I) $(JPXCF_) $(GLF_) $(CCFLAGS)
+GLCCSHARED=$(CC)  $(GLCCFLAGS) $(GLCCFLAGS)
 # All top-level makefiles define GLD.
 #GLD=$(GLGEN)
 # Define the name of this makefile.
diff -Nurd -x'*~' ghostscript-8.64.orig/base/unix-aux.mak ghostscript-8.64/base/unix-aux.mak
--- ghostscript-8.64.orig/base/unix-aux.mak	2009-01-08 04:17:18.000000000 -0500
+++ ghostscript-8.64/base/unix-aux.mak	2009-03-16 01:26:48.000000000 -0400
@@ -35,16 +35,16 @@
 $(GLOBJ)gp_unix.$(OBJ): $(GLSRC)gp_unix.c $(AK)\
  $(pipe__h) $(string__h) $(time__h)\
  $(gx_h) $(gsexit_h) $(gp_h)
-	$(GLCC) $(FONTCONFIG_CFLAGS) $(GLO_)gp_unix.$(OBJ) $(C_) $(GLSRC)gp_unix.c
+	$(CC)   $(GLCCFLAGS) $(CCFLAGS) $(FONTCONFIG_CFLAGS) $(GLO_)gp_unix.$(OBJ) $(C_) $(GLSRC)gp_unix.c
 
 $(GLOBJ)gp_unix_cache.$(OBJ): $(GLSRC)gp_unix_cache.c $(AK)\
  $(stdio__h) $(string__h) $(time__h) $(gconfigd_h) $(gp_h) $(md5_h)
-	$(GLCC) $(GLO_)gp_unix_cache.$(OBJ) $(C_) $(GLSRC)gp_unix_cache.c
+	$(CC)   $(GLCCFLAGS) $(CCFLAGS) $(GLO_)gp_unix_cache.$(OBJ) $(C_) $(GLSRC)gp_unix_cache.c
 
 # assume all Unix platforms support unbuffered read
 $(GLOBJ)gp_stdia.$(OBJ): $(GLSRC)gp_stdia.c $(AK)\
   $(stdio__h) $(time__h) $(unistd__h) $(gx_h) $(gp_h)
-	$(GLCC) $(GLO_)gp_stdia.$(OBJ) $(C_) $(GLSRC)gp_stdia.c
+	$(CC)   $(GLCCFLAGS) $(CCFLAGS) $(GLO_)gp_stdia.$(OBJ) $(C_) $(GLSRC)gp_stdia.c
 
 # System V platforms other than SVR4, which lack some system calls,
 # but have pipes.
@@ -53,29 +53,29 @@
 	$(SETMOD) $(GLGEN)sysv_ $(sysv__) -include $(GLD)nosync
 
 $(GLOBJ)gp_sysv.$(OBJ): $(GLSRC)gp_sysv.c $(stdio__h) $(time__h) $(AK)
-	$(GLCC) $(GLO_)gp_sysv.$(OBJ) $(C_) $(GLSRC)gp_sysv.c
+	$(CC)   $(GLCCFLAGS) $(CCFLAGS) $(GLO_)gp_sysv.$(OBJ) $(C_) $(GLSRC)gp_sysv.c
 
 # -------------------------- Auxiliary programs --------------------------- #
 
 $(ECHOGS_XE): $(GLSRC)echogs.c $(AK) $(stdpre_h)
-	$(CCAUX) $(I_)$(GLSRCDIR)$(_I) $(O_)$(ECHOGS_XE) $(GLSRC)echogs.c
+	$(CC)    $(I_)$(GLSRCDIR)$(_I) $(O_)$(ECHOGS_XE) $(GLSRC)echogs.c $(GCFLAGS)
 
 # On the RS/6000 (at least), compiling genarch.c with gcc with -O
 # produces a buggy executable.
 $(GENARCH_XE): $(GLSRC)genarch.c $(AK) $(GENARCH_DEPS)
-	$(CCAUX) $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENARCH_XE) $(GLSRC)genarch.c
+	$(CC)    $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENARCH_XE) $(GLSRC)genarch.c $(GCFLAGS)
 
 $(GENCONF_XE): $(GLSRC)genconf.c $(AK) $(GENCONF_DEPS)
-	$(CCAUX) $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENCONF_XE) $(GLSRC)genconf.c
+	$(CC)    $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENCONF_XE) $(GLSRC)genconf.c $(GCFLAGS)
 
 $(GENDEV_XE): $(GLSRC)gendev.c $(AK) $(GENDEV_DEPS)
-	$(CCAUX) $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENDEV_XE) $(GLSRC)gendev.c
+	$(CC)    $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENDEV_XE) $(GLSRC)gendev.c $(GCFLAGS)
 
 $(GENHT_XE): $(GLSRC)genht.c $(AK) $(GENHT_DEPS)
-	$(CCAUX) $(GENHT_CFLAGS) $(O_)$(GENHT_XE) $(GLSRC)genht.c
+	$(CC)    $(GENHT_CFLAGS) $(O_)$(GENHT_XE) $(GLSRC)genht.c $(GCFLAGS)
 
 $(GENINIT_XE): $(GLSRC)geninit.c $(AK) $(GENINIT_DEPS)
-	$(CCAUX) $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENINIT_XE) $(GLSRC)geninit.c
+	$(CC)    $(I_)$(GLSRCDIR)$(_I) $(O_)$(GENINIT_XE) $(GLSRC)geninit.c $(GCFLAGS)
 
 MKROMFS_OBJS=$(MKROMFS_ZLIB_OBJS) $(GLOBJ)gscdefs.$(OBJ) $(GLOBJ)gsmisc.$(OBJ) \
  $(GLOBJ)gpmisc.$(OBJ) $(GLOBJ)gslibctx.$(OBJ) $(GLOBJ)gp_getnv.$(OBJ) \
@@ -83,7 +83,7 @@
  $(GLOBJ)gp_stdia.$(OBJ) $(GLOBJ)gsutil.$(OBJ)
 
 $(MKROMFS_XE): $(GLSRC)mkromfs.c $(MKROMFS_COMMON_DEPS) $(MKROMFS_OBJS)
-	$(CCAUX) $(GENOPT) $(CFLAGS) $(I_)$(GLSRCDIR)$(_I) $(I_)$(GLOBJ)$(_I) $(I_)$(ZSRCDIR)$(_I) $(GLSRC)mkromfs.c $(O_)$(MKROMFS_XE) $(MKROMFS_OBJS) -lm $(EXTRALIBS)
+	$(CC)    $(GENOPT) $(CFLAGS) $(I_)$(GLSRCDIR)$(_I) $(I_)$(GLOBJ)$(_I) $(I_)$(ZSRCDIR)$(_I) $(GLSRC)mkromfs.c $(O_)$(MKROMFS_XE) $(MKROMFS_OBJS) -lm $(EXTRALIBS) $(GCFLAGS)
 
 # Query the environment to construct gconfig_.h.
 # The "else true;" is required because Ultrix's implementation of sh -e
diff -Nurd -x'*~' ghostscript-8.64.orig/base/unix-dll.mak ghostscript-8.64/base/unix-dll.mak
--- ghostscript-8.64.orig/base/unix-dll.mak	2008-09-13 16:22:25.000000000 -0400
+++ ghostscript-8.64/base/unix-dll.mak	2009-03-16 01:26:48.000000000 -0400
@@ -34,28 +34,28 @@
 # simple loader (no support for display device)
 GSSOC_XENAME=$(GS)c$(XE)
 GSSOC_XE=$(BINDIR)/$(GSSOC_XENAME)
-GSSOC=$(BINDIR)/$(SOBINRELDIR)/$(GSSOC_XENAME)
+#GSSOC=$(BINDIR)/$(SOBINRELDIR)/$(GSSOC_XENAME)
 
 # loader suporting display device using Gtk+
 GSSOX_XENAME=$(GS)x$(XE)
 GSSOX_XE=$(BINDIR)/$(GSSOX_XENAME)
-GSSOX=$(BINDIR)/$(SOBINRELDIR)/$(GSSOX_XENAME)
+#GSSOX=$(BINDIR)/$(SOBINRELDIR)/$(GSSOX_XENAME)
 
 # shared library
 GS_SONAME_BASE=lib$(GS)
 
 # GNU/Linux
-GS_SOEXT=so
-GS_SONAME=$(GS_SONAME_BASE).$(GS_SOEXT)
-GS_SONAME_MAJOR=$(GS_SONAME).$(GS_VERSION_MAJOR)
-GS_SONAME_MAJOR_MINOR=$(GS_SONAME).$(GS_VERSION_MAJOR).$(GS_VERSION_MINOR)
-LDFLAGS_SO=-shared -Wl,-soname=$(GS_SONAME_MAJOR)
+#GS_SOEXT=so
+#GS_SONAME=$(GS_SONAME_BASE).$(GS_SOEXT)
+#GS_SONAME_MAJOR=$(GS_SONAME).$(GS_VERSION_MAJOR)
+#GS_SONAME_MAJOR_MINOR=$(GS_SONAME).$(GS_VERSION_MAJOR).$(GS_VERSION_MINOR)
+#LDFLAGS_SO=-shared -Wl,-soname=$(GS_SONAME_MAJOR)
 
 # MacOS X
-#GS_SOEXT=dylib
-#GS_SONAME=$(GS_SONAME_BASE).$(GS_SOEXT)
-#GS_SONAME_MAJOR=$(GS_SONAME_BASE).$(GS_VERSION_MAJOR).$(GS_SOEXT)
-#GS_SONAME_MAJOR_MINOR=$(GS_SONAME_BASE).$(GS_VERSION_MAJOR).$(GS_VERSION_MINOR).$(GS_SOEXT)
+GS_SOEXT=dylib
+GS_SONAME=$(GS_SONAME_BASE).$(GS_SOEXT)
+GS_SONAME_MAJOR=$(GS_SONAME_BASE).$(GS_VERSION_MAJOR).$(GS_SOEXT)
+GS_SONAME_MAJOR_MINOR=$(GS_SONAME_BASE).$(GS_VERSION_MAJOR).$(GS_VERSION_MINOR).$(GS_SOEXT)
 #LDFLAGS_SO=-dynamiclib -flat-namespace
 #LDFLAGS_SO=-dynamiclib -install-name $(GS_SONAME_MAJOR_MINOR)
 #LDFLAGS_SO=-dynamiclib
@@ -63,6 +63,7 @@
 GS_SO=$(BINDIR)/$(GS_SONAME)
 GS_SO_MAJOR=$(BINDIR)/$(GS_SONAME_MAJOR) 
 GS_SO_MAJOR_MINOR=$(BINDIR)/$(GS_SONAME_MAJOR_MINOR)
+LDFLAGS_SO=-dynamiclib -install_name $(libdir)/$(GS_SONAME_MAJOR_MINOR) -compatibility_version $(GS_VERSION_MAJOR).$(GS_VERSION_MINOR) -L$(libdir)
 
 # Shared object is built by redefining GS_XE in a recursive make.
 
@@ -116,8 +117,8 @@
 	-mkdir -p $(DESTDIR)$(bindir)
 	-mkdir -p $(DESTDIR)$(libdir)
 	-mkdir -p $(DESTDIR)$(gsincludedir)
-	$(INSTALL_PROGRAM) $(GSSOC) $(DESTDIR)$(bindir)/$(GSSOC_XENAME)
-	$(INSTALL_PROGRAM) $(GSSOX) $(DESTDIR)$(bindir)/$(GSSOX_XENAME)
+#	$(INSTALL_PROGRAM) $(GSSOC) $(DESTDIR)$(bindir)/$(GSSOC_XENAME)
+#	$(INSTALL_PROGRAM) $(GSSOX) $(DESTDIR)$(bindir)/$(GSSOX_XENAME)
 	$(INSTALL_PROGRAM) $(BINDIR)/$(SOBINRELDIR)/$(GS_SONAME_MAJOR_MINOR) $(DESTDIR)$(libdir)/$(GS_SONAME_MAJOR_MINOR)
 	$(RM_) $(DESTDIR)$(libdir)/$(GS_SONAME)
 	ln -s $(GS_SONAME_MAJOR_MINOR) $(DESTDIR)$(libdir)/$(GS_SONAME)
@@ -127,7 +128,7 @@
 	$(INSTALL_DATA) $(PSSRC)ierrors.h $(DESTDIR)$(gsincludedir)ierrors.h
 	$(INSTALL_DATA) $(GLSRC)gdevdsp.h $(DESTDIR)$(gsincludedir)gdevdsp.h
 
-soinstall: install-so install-scripts install-data $(INSTALL_SHARED) $(INSTALL_CONTRIB)
+soinstall: install-so install-data $(INSTALL_SHARED) $(INSTALL_CONTRIB)
 
 # Make the build directories
 SODIRS: STDDIRS
diff -Nurd -x'*~' ghostscript-8.64.orig/base/unix-gcc.mak ghostscript-8.64/base/unix-gcc.mak
--- ghostscript-8.64.orig/base/unix-gcc.mak	2008-10-02 15:33:22.000000000 -0400
+++ ghostscript-8.64/base/unix-gcc.mak	2009-03-16 01:26:48.000000000 -0400
@@ -214,7 +214,7 @@
 CFLAGS_STANDARD=-O2
 CFLAGS_DEBUG=-g -O0
 CFLAGS_PROFILE=-pg -O2
-CFLAGS_SO=-fPIC -shared
+CFLAGS_SO=-fPIC
 
 # Define the other compilation flags.  Add at most one of the following:
 #	-DBSD4_2 for 4.2bsd systems.
@@ -249,7 +249,7 @@
 # Solaris may need -lnsl -lsocket -lposix4.
 # (Libraries required by individual drivers are handled automatically.)
 
-EXTRALIBS=-rdynamic -ldl
+EXTRALIBS=
 
 # Define the standard libraries to search at the end of linking.
 # Most platforms require -lpthread for the POSIX threads library;
@@ -389,8 +389,9 @@
 DEVICE_DEVS21=$(DD)spotcmyk.dev $(DD)devicen.dev $(DD)xcf.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)bmp16m.dev $(DD)bmp32b.dev $(DD)psdcmyk.dev $(DD)psdrgb.dev $(DD)pamcmyk32.dev
 
 # Shared library target to build.
-GS_SHARED_OBJS=$(GLOBJDIR)/X11.so $(GLOBJDIR)/lvga256.so $(GLOBJDIR)/vgalib.so
+#GS_SHARED_OBJS=$(GLOBJDIR)/X11.so $(GLOBJDIR)/lvga256.so $(GLOBJDIR)/vgalib.so
 #GS_SHARED_OBJS=$(GLOBJDIR)/X11.so
+GS_SHARED_OBJS=
 
 # ---------------------------- End of options --------------------------- #
 
diff -Nurd -x'*~' ghostscript-8.64.orig/configure ghostscript-8.64/configure
--- ghostscript-8.64.orig/configure	2009-02-03 12:29:53.000000000 -0500
+++ ghostscript-8.64/configure	2009-03-16 01:26:48.000000000 -0400
@@ -7749,7 +7749,7 @@
 
 fi
 if test x$with_libpaper != xno; then
-    LIBS="$LIBS -lpaper"
+    LIBS="$LIBS -lpaper $LDFLAGS"
 
 cat >>confdefs.h <<\_ACEOF
 #define USE_LIBPAPER 1
diff -Nurd -x'*~' ghostscript-8.64.orig/psi/int.mak ghostscript-8.64/psi/int.mak
--- ghostscript-8.64.orig/psi/int.mak	2008-12-26 02:25:31.000000000 -0500
+++ ghostscript-8.64/psi/int.mak	2009-03-16 01:26:48.000000000 -0400
@@ -28,11 +28,11 @@
 PSO_=$(O_)$(PSOBJ)
 PSI_=$(PSSRCDIR) $(II)$(PSGENDIR) $(II)$(GLI_)
 PSF_=
-PSCC=$(CC_) $(I_)$(PSI_)$(_I) $(PSF_)
-PSJBIG2CC=$(CC_) $(I_)$(JB2I_) $(II)$(PSI_)$(_I) $(JB2CF_) $(PSF_)
-PSJASCC=$(CC_) $(I_)$(JPXI_) $(II)$(PSI_)$(_I) $(JPXCF_) $(PSF)
-PSLDFJB2CC=$(CC_) $(I_)$(LDF_JB2I_) $(II)$(LDF_JB2I_) $(II)$(PSI_)$(_I) $(JB2CF_) $(PSF_)
-PSLWFJPXCC=$(CC_) $(I_)$(LWF_JPXI_) $(II)$(PSI_)$(_I) $(JPXCF_) $(PSF)
+PSCC=	$(CC)  $(I_)$(PSI_)$(_I) $(PSF_) $(CCFLAGS)
+PSJBIG2CC=$(CC)  $(I_)$(JB2I_) $(II)$(PSI_)$(_I) $(JB2CF_) $(PSF_) $(CCFLAGS)
+PSJASCC=$(CC)  $(I_)$(JPXI_) $(II)$(PSI_)$(_I) $(JPXCF_) $(PSF) $(CCFLAGS)
+PSLDFJB2CC=$(CC)  $(I_)$(LDF_JB2I_) $(II)$(LDF_JB2I_) $(II)$(PSI_)$(_I) $(JB2CF_) $(PSF_) $(CCFLAGS)
+PSLWFJPXCC=$(CC)  $(I_)$(LWF_JPXI_) $(II)$(PSI_)$(_I) $(JPXCF_) $(PSF) $(CCFLAGS)
 
 # All top-level makefiles define PSD.
 #PSD=$(PSGEN)
