diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/configure.ac gobject-introspection-0.6.10/configure.ac
--- gobject-introspection-0.6.10.orig/configure.ac	2010-04-07 11:29:55.000000000 -0400
+++ gobject-introspection-0.6.10/configure.ac	2010-05-01 13:37:13.000000000 -0400
@@ -125,6 +125,8 @@
 PKG_CHECK_MODULES(GIO_UNIX, [gio-unix-2.0], have_gio_unix=true, have_gio_unix=false)
 AM_CONDITIONAL(HAVE_GIO_UNIX, test x$have_gio_unix = xtrue)
 
+PKG_CHECK_MODULES(CAIRO, [cairo])
+
 PKG_CHECK_MODULES(SCANNER, [gobject-2.0 gthread-2.0 gio-2.0])
 
 dnl libffi
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/gir/Everything-1.0-expected.gir gobject-introspection-0.6.10/gir/Everything-1.0-expected.gir
--- gobject-introspection-0.6.10.orig/gir/Everything-1.0-expected.gir	2010-04-18 14:11:38.000000000 -0400
+++ gobject-introspection-0.6.10/gir/Everything-1.0-expected.gir	2010-05-02 03:35:18.000000000 -0400
@@ -8,7 +8,10 @@
             xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
   <include name="GLib" version="2.0"/>
   <include name="GObject" version="2.0"/>
+  <include name="Gio" version="2.0"/>
   <include name="cairo" version="1.0"/>
+  <package name="cairo"/>
+  <package name="gio-2.0"/>
   <package name="gobject-2.0"/>
   <namespace name="Everything"
              version="1.0"
@@ -785,6 +788,17 @@
         </parameter>
       </parameters>
     </function>
+    <function name="test_async_ready_callback"
+              c:identifier="test_async_ready_callback">
+      <return-value transfer-ownership="none">
+        <type name="none" c:type="void"/>
+      </return-value>
+      <parameters>
+        <parameter name="callback" transfer-ownership="none" scope="async">
+          <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
+        </parameter>
+      </parameters>
+    </function>
     <function name="test_boolean" c:identifier="test_boolean">
       <return-value transfer-ownership="none">
         <type name="boolean" c:type="gboolean"/>
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/gir/Makefile.am gobject-introspection-0.6.10/gir/Makefile.am
--- gobject-introspection-0.6.10.orig/gir/Makefile.am	2010-04-16 10:58:23.000000000 -0400
+++ gobject-introspection-0.6.10/gir/Makefile.am	2010-05-01 13:57:53.000000000 -0400
@@ -156,12 +156,12 @@
 LT_VERSION = $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)
 TYPELIB_VERSION = $(LT_CURRENT).0
 
-lib_LTLIBRARIES = libgirepository-everything-1.0.la
+lib_LTLIBRARIES =
 
 libgirepository_everything_1_0_la_SOURCES = $(srcdir)/everything.c $(srcdir)/everything.h
-libgirepository_everything_1_0_la_CFLAGS = $(GOBJECT_CFLAGS)
+libgirepository_everything_1_0_la_CFLAGS = $(GOBJECT_CFLAGS) $(CAIRO_CFLAGS)
 libgirepository_everything_1_0_la_LDFLAGS = -version-info $(LT_VERSION)
-libgirepository_everything_1_0_la_LIBADD = $(GOBJECT_LIBS) -lcairo
+libgirepository_everything_1_0_la_LIBADD = $(GOBJECT_LIBS) $(CAIRO_LIBS)
 
 if OS_WIN32
 libgirepository_everything_1_0_la_LDFLAGS += -no-undefined
@@ -170,12 +170,13 @@
 Everything-1.0.gir: Gio-2.0.gir libgirepository-everything-1.0.la
 
 Everything_1_0_gir_LIBS = libgirepository-everything-1.0.la
-Everything_1_0_gir_PACKAGES = gobject-2.0
-Everything_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
+Everything_1_0_gir_PACKAGES = gobject-2.0 cairo gio-2.0
+Everything_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0 Gio-2.0
 Everything_1_0_gir_FILES = $(srcdir)/everything.h $(srcdir)/everything.c
 
 INTROSPECTION_GIRS += Everything-$(TYPELIB_VERSION).gir
 EXPECTEDGIRS += Everything-$(TYPELIB_VERSION)-expected.gir
+lib_LTLIBRARIES += libgirepository-everything-1.0.la
 
 # marshalling tests
 lib_LTLIBRARIES += libgirepository-gimarshallingtests-1.0.la
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/gir/everything.c gobject-introspection-0.6.10/gir/everything.c
--- gobject-introspection-0.6.10.orig/gir/everything.c	2010-04-18 14:05:02.000000000 -0400
+++ gobject-introspection-0.6.10/gir/everything.c	2010-05-01 13:57:53.000000000 -0400
@@ -1,7 +1,6 @@
 #include <string.h>
 #include <stdlib.h>
 #include "everything.h"
-#include <gio/gio.h>
 
 static gboolean abort_on_error = TRUE;
 
@@ -1978,6 +1977,14 @@
   return callback(user_data);
 }
 
+void
+test_async_ready_callback (GAsyncReadyCallback callback)
+{
+  GSimpleAsyncResult *result = g_simple_async_result_new (NULL, callback, NULL,
+    test_async_ready_callback);
+  g_simple_async_result_complete_in_idle (result);
+}
+
 /* interface */
 
 static void
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/gir/everything.h gobject-introspection-0.6.10/gir/everything.h
--- gobject-introspection-0.6.10.orig/gir/everything.h	2010-04-18 14:05:02.000000000 -0400
+++ gobject-introspection-0.6.10/gir/everything.h	2010-05-01 13:57:53.000000000 -0400
@@ -3,6 +3,7 @@
 
 #include <cairo/cairo.h>
 #include <glib-object.h>
+#include <gio/gio.h>
 #include <time.h>
 
 void set_abort_on_error (gboolean abort_on_error);
@@ -348,6 +349,8 @@
 int test_callback_infinite (TestCallbackUserData callback,
                            gpointer user_data);
 
+void test_async_ready_callback (GAsyncReadyCallback callback);
+
 /* interface */
 #define TEST_TYPE_INTERFACE              (test_interface_get_type ())
 #define TEST_INTERFACE(object)           (G_TYPE_CHECK_INSTANCE_CAST ((object), TEST_TYPE_INTERFACE, TestInterface))
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/girepository/ginfo.c gobject-introspection-0.6.10/girepository/ginfo.c
--- gobject-introspection-0.6.10.orig/girepository/ginfo.c	2010-04-18 14:09:04.000000000 -0400
+++ gobject-introspection-0.6.10/girepository/ginfo.c	2010-05-04 03:29:20.000000000 -0400
@@ -1261,6 +1261,7 @@
     return G_TYPE_OBJECT;
 
   get_type_func = NULL;
+  g_print("ginfo.c g_registered_type_info_get_g_type()\n");
   if (!g_typelib_symbol (rinfo->typelib,
                          type_init,
                          (void**) &get_type_func))
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/girepository/ginvoke.c gobject-introspection-0.6.10/girepository/ginvoke.c
--- gobject-introspection-0.6.10.orig/girepository/ginvoke.c	2010-04-07 11:29:55.000000000 -0400
+++ gobject-introspection-0.6.10/girepository/ginvoke.c	2010-05-04 03:30:45.000000000 -0400
@@ -89,6 +89,7 @@
 
   symbol = g_function_info_get_symbol (info);
 
+  g_print("ginvoke.c g_function_info_invoke()\n");
   if (!g_typelib_symbol (g_base_info_get_typelib((GIBaseInfo *) info),
                          symbol, &func))
     {
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/girepository/girffi.c gobject-introspection-0.6.10/girepository/girffi.c
--- gobject-introspection-0.6.10.orig/girepository/girffi.c	2010-04-08 12:26:55.000000000 -0400
+++ gobject-introspection-0.6.10/girepository/girffi.c	2010-05-04 03:30:37.000000000 -0400
@@ -218,6 +218,7 @@
 
   symbol = g_function_info_get_symbol ((GIFunctionInfo*) info);
 
+  g_print("girffi.c g_function_info_prep_invoke()\n");
   if (!g_typelib_symbol (g_base_info_get_typelib((GIBaseInfo *) info),
                          symbol, &(invoker->native_address)))
     {
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/girepository/gtypelib.c gobject-introspection-0.6.10/girepository/gtypelib.c
--- gobject-introspection-0.6.10.orig/girepository/gtypelib.c	2010-04-07 11:29:55.000000000 -0400
+++ gobject-introspection-0.6.10/girepository/gtypelib.c	2010-05-04 03:30:20.000000000 -0400
@@ -2003,15 +2003,18 @@
           if (module == NULL)
             {
               GString *shlib_full = g_string_new (shlibs[i]);
+	      g_print("gtypelib.c _g_typelib_do_dlopen() for value %s\n", shlib_full->str);
 
               /* Prefix with "lib", try both .la and .so */
               if (!g_str_has_prefix (shlib_full->str, "lib"))
                 g_string_prepend (shlib_full, "lib");
               g_string_append (shlib_full, ".la");
+	      g_print("\ttrying %s\n", shlib_full->str);
               module = g_module_open (shlib_full->str, G_MODULE_BIND_LAZY);
               if (module == NULL)
                 {
                   g_string_overwrite (shlib_full, strlen (shlib_full->str)-2, SHLIB_SUFFIX);
+		  g_print("\ttrying %s\n", shlib_full->str);
                   module = g_module_open (shlib_full->str, G_MODULE_BIND_LAZY);
                 }
 
diff -Nurd -x'*~' gobject-introspection-0.6.10.orig/giscanner/shlibs.py gobject-introspection-0.6.10/giscanner/shlibs.py
--- gobject-introspection-0.6.10.orig/giscanner/shlibs.py	2009-09-17 04:53:45.000000000 -0400
+++ gobject-introspection-0.6.10/giscanner/shlibs.py	2010-05-04 03:14:26.000000000 -0400
@@ -21,6 +21,7 @@
 
 import re
 import subprocess
+import sys
 
 from .utils import get_libtool_command, extract_libtool_shlib
 
@@ -71,7 +72,13 @@
     if libtool:
         args.extend(libtool)
         args.append('--mode=execute')
-    args.extend(['ldd', binary.args[0]])
+    if sys.platform == "darwin":
+        args.extend(['otool', '-L', binary.args[0]])
+    else:
+        args.extend(['ldd', binary.args[0]])
+    print "_resolve_non_libtool:"
+    print "  cmd : ", args
+    print "  libs: ", libraries
     proc = subprocess.Popen(args, stdout=subprocess.PIPE)
     patterns = {}
     for library in libraries:
@@ -82,6 +89,8 @@
         for library, pattern in patterns.iteritems():
             m = pattern.search(line)
             if m:
+                print "  line > ", line
+                print "  match> ", library
                 del patterns[library]
                 shlibs.append(m.group(1))
                 break
@@ -91,6 +100,7 @@
             "ERROR: can't resolve libraries to shared libraries: " +
             ", ".join(patterns.keys()))
 
+    print "  ret : ", shlibs
     return shlibs
 
 # We want to resolve a set of library names (the <foo> of -l<foo>)
