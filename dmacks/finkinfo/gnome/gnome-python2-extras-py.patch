diff -Nurd -x'*~' gnome-python-extras-2.12.0.orig/configure gnome-python-extras-2.12.0/configure
--- gnome-python-extras-2.12.0.orig/configure	2005-09-10 13:23:25.000000000 -0400
+++ gnome-python-extras-2.12.0/configure	2005-09-15 01:39:45.000000000 -0400
@@ -21256,57 +21256,6 @@
 fi
 
 build_gtksourceview=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTKSOURCEVIEW" >&5
-echo $ECHO_N "checking for GTKSOURCEVIEW... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtksourceview-1.0 >= 1.1.90\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtksourceview-1.0 >= 1.1.90") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKSOURCEVIEW_CFLAGS=`$PKG_CONFIG --cflags "gtksourceview-1.0 >= 1.1.90" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtksourceview-1.0 >= 1.1.90\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtksourceview-1.0 >= 1.1.90") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKSOURCEVIEW_LIBS=`$PKG_CONFIG --libs "gtksourceview-1.0 >= 1.1.90" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTKSOURCEVIEW_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtksourceview-1.0 >= 1.1.90"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTKSOURCEVIEW_PKG_ERRORS" 1>&5
-
-	build_gtksourceview=false
-elif test $pkg_failed = untried; then
-	build_gtksourceview=false
-else
-	GTKSOURCEVIEW_CFLAGS=$pkg_cv_GTKSOURCEVIEW_CFLAGS
-	GTKSOURCEVIEW_LIBS=$pkg_cv_GTKSOURCEVIEW_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtksourceview=true
-fi
-
-
 if $build_gtksourceview; then
   BUILD_GTKSOURCEVIEW_TRUE=
   BUILD_GTKSOURCEVIEW_FALSE='#'
@@ -21315,62 +21264,7 @@
   BUILD_GTKSOURCEVIEW_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GTKSOURCEVIEW_LIBS=`echo $GTKSOURCEVIEW_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_eggtray=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for EGGTRAY" >&5
-echo $ECHO_N "checking for EGGTRAY... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtk+-2.0 >= 2.2.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtk+-2.0 >= 2.2.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_EGGTRAY_CFLAGS=`$PKG_CONFIG --cflags "gtk+-2.0 >= 2.2.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtk+-2.0 >= 2.2.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtk+-2.0 >= 2.2.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_EGGTRAY_LIBS=`$PKG_CONFIG --libs "gtk+-2.0 >= 2.2.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	EGGTRAY_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtk+-2.0 >= 2.2.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$EGGTRAY_PKG_ERRORS" 1>&5
-
-	build_eggtray=false
-elif test $pkg_failed = untried; then
-	build_eggtray=false
-else
-	EGGTRAY_CFLAGS=$pkg_cv_EGGTRAY_CFLAGS
-	EGGTRAY_LIBS=$pkg_cv_EGGTRAY_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_eggtray=true
-fi
-
-
 if $build_eggtray; then
   BUILD_EGGTRAY_TRUE=
   BUILD_EGGTRAY_FALSE='#'
@@ -21379,76 +21273,7 @@
   BUILD_EGGTRAY_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  EGGTRAY_LIBS=`echo $EGGTRAY_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_eggrecent=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for EGG_RECENT" >&5
-echo $ECHO_N "checking for EGG_RECENT... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_EGG_RECENT_CFLAGS=`$PKG_CONFIG --cflags "gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_EGG_RECENT_LIBS=`$PKG_CONFIG --libs "gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	EGG_RECENT_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtk+-2.0 >= 2.0.0 gnome-vfs-2.0
-                               libbonoboui-2.0 libgnomeui-2.0
-                               gnome-python-2.0 >= 2.10.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$EGG_RECENT_PKG_ERRORS" 1>&5
-
-	build_eggrecent=false
-elif test $pkg_failed = untried; then
-	build_eggrecent=false
-else
-	EGG_RECENT_CFLAGS=$pkg_cv_EGG_RECENT_CFLAGS
-	EGG_RECENT_LIBS=$pkg_cv_EGG_RECENT_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_eggrecent=true
-fi
-
-
 if $build_eggrecent; then
   BUILD_EGGRECENT_TRUE=
   BUILD_EGGRECENT_FALSE='#'
@@ -21457,62 +21282,7 @@
   BUILD_EGGRECENT_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  EGGRECENT_LIBS=`echo $EGGRECENT_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_wnck=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for WNCK" >&5
-echo $ECHO_N "checking for WNCK... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libwnck-1.0 >= 2.9.92\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libwnck-1.0 >= 2.9.92") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_WNCK_CFLAGS=`$PKG_CONFIG --cflags "libwnck-1.0 >= 2.9.92" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libwnck-1.0 >= 2.9.92\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libwnck-1.0 >= 2.9.92") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_WNCK_LIBS=`$PKG_CONFIG --libs "libwnck-1.0 >= 2.9.92" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	WNCK_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libwnck-1.0 >= 2.9.92"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$WNCK_PKG_ERRORS" 1>&5
-
-	build_wnck=false
-elif test $pkg_failed = untried; then
-	build_wnck=false
-else
-	WNCK_CFLAGS=$pkg_cv_WNCK_CFLAGS
-	WNCK_LIBS=$pkg_cv_WNCK_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_wnck=true
-fi
-
-
 if $build_wnck; then
   BUILD_WNCK_TRUE=
   BUILD_WNCK_FALSE='#'
@@ -21521,264 +21291,7 @@
   BUILD_WNCK_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  WNCK_LIBS=`echo $WNCK_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_gtkmozembed=false
-
-# Check whether --with-gtkmozembed or --without-gtkmozembed was given.
-if test "${with_gtkmozembed+set}" = set; then
-  withval="$with_gtkmozembed"
-  mozpackage=$withval
-else
-  mozpackage=any
-fi;
-
-if test $mozpackage = any ; then
-
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTKMOZEMBED" >&5
-echo $ECHO_N "checking for GTKMOZEMBED... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_CFLAGS=`$PKG_CONFIG --cflags "firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_LIBS=`$PKG_CONFIG --libs "firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTKMOZEMBED_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "firefox-gtkmozembed >= 1.0
-                                gtk+-2.0            >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTKMOZEMBED_PKG_ERRORS" 1>&5
-
-
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTKMOZEMBED" >&5
-echo $ECHO_N "checking for GTKMOZEMBED... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_CFLAGS=`$PKG_CONFIG --cflags "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_LIBS=`$PKG_CONFIG --libs "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTKMOZEMBED_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTKMOZEMBED_PKG_ERRORS" 1>&5
-
-	build_gtkmozembed=false
-elif test $pkg_failed = untried; then
-	build_gtkmozembed=false
-else
-	GTKMOZEMBED_CFLAGS=$pkg_cv_GTKMOZEMBED_CFLAGS
-	GTKMOZEMBED_LIBS=$pkg_cv_GTKMOZEMBED_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtkmozembed=true; mozpackage=mozilla
-fi
-
-elif test $pkg_failed = untried; then
-
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTKMOZEMBED" >&5
-echo $ECHO_N "checking for GTKMOZEMBED... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_CFLAGS=`$PKG_CONFIG --cflags "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_LIBS=`$PKG_CONFIG --libs "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTKMOZEMBED_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "mozilla-gtkmozembed >= 1.2b
-                                gtk+-2.0            >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTKMOZEMBED_PKG_ERRORS" 1>&5
-
-	build_gtkmozembed=false
-elif test $pkg_failed = untried; then
-	build_gtkmozembed=false
-else
-	GTKMOZEMBED_CFLAGS=$pkg_cv_GTKMOZEMBED_CFLAGS
-	GTKMOZEMBED_LIBS=$pkg_cv_GTKMOZEMBED_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtkmozembed=true; mozpackage=mozilla
-fi
-
-else
-	GTKMOZEMBED_CFLAGS=$pkg_cv_GTKMOZEMBED_CFLAGS
-	GTKMOZEMBED_LIBS=$pkg_cv_GTKMOZEMBED_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtkmozembed=true; mozpackage=firefox
-fi
-
-else
-
-case $mozpackage in
-     firefox) mozpackage_required_version=1.0 ;;
-     mozilla) mozpackage_required_version=1.2b ;;
-     *) { { echo "$as_me:$LINENO: error: --with-gtkmozembed argument must be either 'mozilla' or 'firefox'" >&5
-echo "$as_me: error: --with-gtkmozembed argument must be either 'mozilla' or 'firefox'" >&2;}
-   { (exit 1); exit 1; }; }
-esac
-
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTKMOZEMBED" >&5
-echo $ECHO_N "checking for GTKMOZEMBED... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"\$mozpackage-gtkmozembed >= \$mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "$mozpackage-gtkmozembed >= $mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_CFLAGS=`$PKG_CONFIG --cflags "$mozpackage-gtkmozembed >= $mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"\$mozpackage-gtkmozembed >= \$mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "$mozpackage-gtkmozembed >= $mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKMOZEMBED_LIBS=`$PKG_CONFIG --libs "$mozpackage-gtkmozembed >= $mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTKMOZEMBED_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "$mozpackage-gtkmozembed >= $mozpackage_required_version,
-                                gtk+-2.0                >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTKMOZEMBED_PKG_ERRORS" 1>&5
-
-	build_gtkmozembed=false
-elif test $pkg_failed = untried; then
-	build_gtkmozembed=false
-else
-	GTKMOZEMBED_CFLAGS=$pkg_cv_GTKMOZEMBED_CFLAGS
-	GTKMOZEMBED_LIBS=$pkg_cv_GTKMOZEMBED_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtkmozembed=true
-fi
-
-fi
-
-
-
 if $build_gtkmozembed; then
   BUILD_GTKMOZEMBED_TRUE=
   BUILD_GTKMOZEMBED_FALSE='#'
@@ -21787,65 +21300,7 @@
   BUILD_GTKMOZEMBED_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GTKMOZEMBED_LIBS=`echo $GTKMOZEMBED_LIBS | sed -e "s/$export_dynamic//"`
-fi
-MOZILLA_HOME="`$PKG_CONFIG --variable=libdir $mozpackage-gtkmozembed`"
-
-
-
 build_gtkspell=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTKSPELL" >&5
-echo $ECHO_N "checking for GTKSPELL... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKSPELL_CFLAGS=`$PKG_CONFIG --cflags "gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTKSPELL_LIBS=`$PKG_CONFIG --libs "gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTKSPELL_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtkspell-2.0 >= 2.0.0 pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTKSPELL_PKG_ERRORS" 1>&5
-
-	build_gtkspell=false
-elif test $pkg_failed = untried; then
-	build_gtkspell=false
-else
-	GTKSPELL_CFLAGS=$pkg_cv_GTKSPELL_CFLAGS
-	GTKSPELL_LIBS=$pkg_cv_GTKSPELL_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtkspell=true
-fi
-
-
 if $build_gtkspell; then
   BUILD_GTKSPELL_TRUE=
   BUILD_GTKSPELL_FALSE='#'
@@ -21854,62 +21309,7 @@
   BUILD_GTKSPELL_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GTKSPELL_LIBS=`echo $GTKSPELL_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_gdl=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GDL" >&5
-echo $ECHO_N "checking for GDL... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GDL_CFLAGS=`$PKG_CONFIG --cflags "gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GDL_LIBS=`$PKG_CONFIG --libs "gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GDL_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gdl-1.0 >= 0.4.0 pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GDL_PKG_ERRORS" 1>&5
-
-	build_gdl=false
-elif test $pkg_failed = untried; then
-	build_gdl=false
-else
-	GDL_CFLAGS=$pkg_cv_GDL_CFLAGS
-	GDL_LIBS=$pkg_cv_GDL_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gdl=true
-fi
-
-
 if $build_gdl; then
   BUILD_GDL_TRUE=
   BUILD_GDL_FALSE='#'
@@ -21918,62 +21318,7 @@
   BUILD_GDL_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GDL_LIBS=`echo $GDL_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_totem_plparser=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for TOTEM_PLPARSER" >&5
-echo $ECHO_N "checking for TOTEM_PLPARSER... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"totem-plparser pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "totem-plparser pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_TOTEM_PLPARSER_CFLAGS=`$PKG_CONFIG --cflags "totem-plparser pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"totem-plparser pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "totem-plparser pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_TOTEM_PLPARSER_LIBS=`$PKG_CONFIG --libs "totem-plparser pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	TOTEM_PLPARSER_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "totem-plparser pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$TOTEM_PLPARSER_PKG_ERRORS" 1>&5
-
-	build_totem_plparser=false
-elif test $pkg_failed = untried; then
-	build_totem_plparser=false
-else
-	TOTEM_PLPARSER_CFLAGS=$pkg_cv_TOTEM_PLPARSER_CFLAGS
-	TOTEM_PLPARSER_LIBS=$pkg_cv_TOTEM_PLPARSER_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_totem_plparser=true
-fi
-
-
 if $build_totem_plparser; then
   BUILD_TOTEM_PLPARSER_TRUE=
   BUILD_TOTEM_PLPARSER_FALSE='#'
@@ -21982,62 +21327,7 @@
   BUILD_TOTEM_PLPARSER_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  TOTEM_PLPARSER_LIBS=`echo $TOTEM_PLPARSER_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_gtop=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GTOP" >&5
-echo $ECHO_N "checking for GTOP... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTOP_CFLAGS=`$PKG_CONFIG --cflags "libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GTOP_LIBS=`$PKG_CONFIG --libs "libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GTOP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libgtop-2.0 >= 2.9.5 pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GTOP_PKG_ERRORS" 1>&5
-
-	build_gtop=false
-elif test $pkg_failed = untried; then
-	build_gtop=false
-else
-	GTOP_CFLAGS=$pkg_cv_GTOP_CFLAGS
-	GTOP_LIBS=$pkg_cv_GTOP_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gtop=true
-fi
-
-
 if $build_gtop; then
   BUILD_GTOP_TRUE=
   BUILD_GTOP_FALSE='#'
@@ -22046,69 +21336,7 @@
   BUILD_GTOP_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GTOP_LIBS=`echo $GTOP_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_nautilusburn=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for NAUTILUSBURN" >&5
-echo $ECHO_N "checking for NAUTILUSBURN... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_NAUTILUSBURN_CFLAGS=`$PKG_CONFIG --cflags "libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_NAUTILUSBURN_LIBS=`$PKG_CONFIG --libs "libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	NAUTILUSBURN_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libnautilus-burn >= 2.11.1
-                                 pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$NAUTILUSBURN_PKG_ERRORS" 1>&5
-
-	build_nautilusburn=false
-elif test $pkg_failed = untried; then
-	build_nautilusburn=false
-else
-	NAUTILUSBURN_CFLAGS=$pkg_cv_NAUTILUSBURN_CFLAGS
-	NAUTILUSBURN_LIBS=$pkg_cv_NAUTILUSBURN_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_nautilusburn=true
-fi
-
-
 if $build_nautilusburn; then
   BUILD_NAUTILUSBURN_TRUE=
   BUILD_NAUTILUSBURN_FALSE='#'
@@ -22117,63 +21345,7 @@
   BUILD_NAUTILUSBURN_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  NAUTILUSBURN_LIBS=`echo $NAUTILUSBURN_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
-
 build_gda=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GDA" >&5
-echo $ECHO_N "checking for GDA... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgda >= 1.2.0 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgda >= 1.2.0 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GDA_CFLAGS=`$PKG_CONFIG --cflags "libgda >= 1.2.0 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgda >= 1.2.0 pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgda >= 1.2.0 pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GDA_LIBS=`$PKG_CONFIG --libs "libgda >= 1.2.0 pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GDA_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libgda >= 1.2.0 pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GDA_PKG_ERRORS" 1>&5
-
-	build_gda=false
-elif test $pkg_failed = untried; then
-	build_gda=false
-else
-	GDA_CFLAGS=$pkg_cv_GDA_CFLAGS
-	GDA_LIBS=$pkg_cv_GDA_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gda=true
-fi
-
-
 if $build_gda; then
   BUILD_GDA_TRUE=
   BUILD_GDA_FALSE='#'
@@ -22182,69 +21354,7 @@
   BUILD_GDA_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GDA_LIBS=`echo $GDA_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_gksu=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GKSU" >&5
-echo $ECHO_N "checking for GKSU... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GKSU_CFLAGS=`$PKG_CONFIG --cflags "libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GKSU_LIBS=`$PKG_CONFIG --libs "libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GKSU_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libgksu1.2 >= 1.2.5
-                         pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GKSU_PKG_ERRORS" 1>&5
-
-	build_gksu=false
-elif test $pkg_failed = untried; then
-	build_gksu=false
-else
-	GKSU_CFLAGS=$pkg_cv_GKSU_CFLAGS
-	GKSU_LIBS=$pkg_cv_GKSU_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gksu=true
-fi
-
-
 if $build_gksu; then
   BUILD_GKSU_TRUE=
   BUILD_GKSU_FALSE='#'
@@ -22253,69 +21363,7 @@
   BUILD_GKSU_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GKSU_LIBS=`echo $GKSU_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_gksuui=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for GKSUUI" >&5
-echo $ECHO_N "checking for GKSUUI... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GKSUUI_CFLAGS=`$PKG_CONFIG --cflags "libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_GKSUUI_LIBS=`$PKG_CONFIG --libs "libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	GKSUUI_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libgksuui1.0 >= 1.0.3
-                           pygtk-2.0 >= 2.4.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$GKSUUI_PKG_ERRORS" 1>&5
-
-	build_gksuui=false
-elif test $pkg_failed = untried; then
-	build_gksuui=false
-else
-	GKSUUI_CFLAGS=$pkg_cv_GKSUUI_CFLAGS
-	GKSUUI_LIBS=$pkg_cv_GKSUUI_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_gksuui=true
-fi
-
-
 if $build_gksuui; then
   BUILD_GKSUUI_TRUE=
   BUILD_GKSUUI_FALSE='#'
@@ -22324,76 +21372,7 @@
   BUILD_GKSUUI_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  GKSUUI_LIBS=`echo $GKSUUI_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 build_mediaprofiles=false
-
-pkg_failed=no
-echo "$as_me:$LINENO: checking for MEDIAPROFILES" >&5
-echo $ECHO_N "checking for MEDIAPROFILES... $ECHO_C" >&6
-
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_MEDIAPROFILES_CFLAGS=`$PKG_CONFIG --cflags "gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_MEDIAPROFILES_LIBS=`$PKG_CONFIG --libs "gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-else
-	pkg_failed=untried
-fi
-
-if test $pkg_failed = yes; then
-	MEDIAPROFILES_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gnome-media-profiles >= 2.10.0
-                           pygtk-2.0 >= 2.4.0
-                           gconf-2.0 >= 2.10.0"`
-	# Put the nasty error message in config.log where it belongs
-	echo "$MEDIAPROFILES_PKG_ERRORS" 1>&5
-
-	build_mediaprofiles=false
-elif test $pkg_failed = untried; then
-	build_mediaprofiles=false
-else
-	MEDIAPROFILES_CFLAGS=$pkg_cv_MEDIAPROFILES_CFLAGS
-	MEDIAPROFILES_LIBS=$pkg_cv_MEDIAPROFILES_LIBS
-        echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-	build_mediaprofiles=true
-fi
-
-
 if $build_mediaprofiles; then
   BUILD_MEDIAPROFILES_TRUE=
   BUILD_MEDIAPROFILES_FALSE='#'
@@ -22402,10 +21381,6 @@
   BUILD_MEDIAPROFILES_FALSE=
 fi
 
-if test -n "$export_dynamic"; then
-  MEDIAPROFILES_LIBS=`echo $MEDIAPROFILES_LIBS | sed -e "s/$export_dynamic//"`
-fi
-
 
 case " $CFLAGS " in
 *[\	\ ]-Wall[\	\ ]*)
