Package: libgs8.64
Version: 8.64
Revision: 1
Source: http://mirror.cs.wisc.edu/pub/mirrors/ghost/GPL/gs864/ghostscript-%v.tar.bz2
Source-MD5: b13289cb2115f38f40c5e064f87e228a
BuildDepends: <<
	atk1 (>= 1.26.0-1),
	cairo (>= 1.8-1),
	fink (>= 0.24.12-1),
	flag-sort,
	fontconfig2-dev (>= 2.4.1-1),
	freetype219 (>= 2.3.8-2),
	glib2-dev (>= 2.20.0-1),
	glitz,
	gtk+2-dev (>= 2.16.0-1),
	libgettext3-dev,
	libiconv-dev,
	libpaper1-dev (>= 1.1.14-1),
	libpng3 (>= 1:1.2.35-2),
	pango1-xft2-ft219-dev (>= 1.24.0-1),
	pkgconfig (>= 0.23),
	x11-dev
<<
Depends: %n-shlibs (= %v-%r)
BuildDependsOnly: true
PatchFile: %n.patch
PatchFile-MD5: 3c26eaac1f291409b0220b9a0477de27
PatchScript: <<
	%{default_script}

#	mkdir UNUSED
#	mv jbig2dec UNUSED
#	mv libpng UNUSED
#	mv zlib UNUSED

	# use documented tokens to extract a list of exported symbols
	perl -0777 -n -e 'while(/GSDLLAPI\s+(gsapi_.*?)\(/gs) {print "_$1\n"}' psi/iapi.h > psi/iapi.expsym
	# this is an extern const in ierrors.h
	echo "_gs_error_names" >> psi/iapi.expsym

<<
ConfigureParams: --enable-dynamic --disable-cups
SetCC: flag-sort gcc

CompileScript: <<
#!/bin/sh -ev
	export PKG_CONFIG_PATH="%p/lib/fontconfig2/lib/pkgconfig:$PKG_CONFIG_PATH"
	./configure %c
	make
	make so
<<
InstallScript: <<
	make install DESTDIR=%d
	make soinstall DESTDIR=%d
	echo "See %p/share/ghostscript/8.64/doc in %N-shlibs for information" > README

	rm -rf %i/bin %i/share/man
<<
DocFiles: LICENSE README
SplitOff: <<
	Package: %N-shlibs
	Depends: <<
		cairo-shlibs (>= 1.8-1),
		fontconfig2-shlibs (>= 2.4.1-1),
		ghostscript-fonts,
		libiconv,
		libpaper1-shlibs (>= 1.1.14-1),
		x11
	<<
	Files: <<
		lib/libgs.8.64.dylib
		share/ghostscript/libgs8.64/Resource
		share/ghostscript/libgs8.64/lib
	<<
	Shlibs: %p/lib/libgs.8.64.dylib 8.64.0 %n (>= 8.64-1)
	DocFiles: LICENSE README
<<
#SplitOff2: <<
#	Package: ghostscript
#	Depends: <<
#		TBD
#	<<
#	Files: <<
#		bin
#		share/man
#	<<
#	Docfiles: LICENSE README
#<<
DescPort: <<
<<
DescPackaging: <<
	CMap files are not GPL (see LICENSE file for info). Should
	externalize these as a Recommends if anyone can verify that
	there is not severe loss-of-function without them and/or find
	a free workalike.

#	Hack to build the lib *only*, not programs on top of it.
	Not obvious clean way to get support files (which libgs uses
	also) without also building the command-line programs, so
	we're stuck building and then deleting them.

	Need to enable gtk so we get display device in libgs. To avoid
	requiring gtk just to get the "gs" runtime text-processing
	program (and to avoid circular deps if gtk lib stack needs
	gs!), we only want to build the lib here...punt command-line
	programs to an external package (can have internal libgs and
	gtk disabled). To avoid having our data files collide with
	that package, we rename our data dir.
	But display device still isn't enabled! See:
	https://bugs.freedesktop.org/show_bug.cgi?id=18826

	Privatize all symbols except ones that seem part of external
	API (avoids multiple-definition warnings and other collisions
	if linking against both libgs and an external lib that libgs
	also has internally

	ghostscript/%v/doc referenced in .dylib, so put it in -shlibs

	Other support-files used by .dylib placed in -shlibs; probably
	also used by bin/gs and other programs in %n=ghostscript so
	Depends:%N-shlibs even though don't seem to link against the
	.dylib

	Hack to pass global -I last (use separate compiler-command and
	flag vars instead of unified one that concatenates them all in
	the wrong order). This is a mess! Easier to just wrap gcc in a
	script that re-orders them correctly.

	Remember to pass necessary -l and -L flags rather than local
	object files if if using external libs.

#	Use external libs whenever possible and adjust makefiles to
#	pass fink -I and -L flags for them:
#		expat (use included until we know for sure)
#		icclib (use included--just a truncated/subset of full)
#		ijs (no support for external)
#		imdi (use included until we know for sure)
#		jasper (use included--needs customized lib)
#		jbig2dec (use fink's)
#		jpeg (use included--needs customized lib)
#		libpng (use fink's)
#		zlib (use system)
^-------Hard to get any of this to work correctly with external libs,
	so go with on-board for everything for now.

	Seems to need some cups symbols not present in 10.4's libcups

#	Don't include actual png_push_fill_buffer() workaround for
#	apparent local libpng issue because we're using external lib
#	that already has non-static prototype (and symbol isn't used
#	anywhere in gs anyway)
<<
Description: Ghostscript (PostScript rendering) library
Homepage: http://pages.cs.wisc.edu/~ghost
#License: GPL
License: Restrictive/Distributable
Maintainer: Daniel Macks <dmacks@netspace.org>
