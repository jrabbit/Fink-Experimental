## PatchScript put here to escape the dreadfull fink indexing

### to complete '--no-same-permissions' :
chmod -R a+rX,u+w *
# and fix immediately remaining perms :
chmod a-x Singular/LIB/*.lib
#
#
#
nooptflags="-O0 -ggdb"
warnflags="-Wall -Wcast-align -W -Wno-unused"
mflags="-mcpu=`machine|sed 's,ppc,,'` -mtune=`machine|sed 's,ppc,,'`"
# We can't just put -mdynamic-no-pic in the CXXFLAGS, and let it be overridden by an SFLAG -fPIC when building the .dl_o files,
# because then g++ complains when building the .dl_o files (opposite behaviour with the -mdynamic-no-pic implied by -fast) :
# "cc1plus: warning: -mdynamic-no-pic overrides -fpic or -fPIC" _ with ensuing breakdown by ld
# Thus we'll put below all the CXXFLAGS into the SFLAGS for the .dl_o files,
# and hence first remove the CXXFLAGS in the .dl_o targets:
sed -ri.bak '/\.dl_o :/,+1s/ \$\{CXXFLAGS\}//' Singular/Makefile.in
#
# flags="-fast -faltivec"
# works _ but let us be more modest (and a bit better) :
# (the first series is there just because it wasn't clear they were included in -O3 in Apple's version)
# -fsched-spec-load gave very bad performance _ maybe removing the others too ? First try -fno-sched-spec_ was worse
xtrflags="-fschedule-insns -fschedule-insns2 -fsched-interblock -fstrict-aliasing -fregmove -freorder-blocks"
ntlflags="$xtrflags -floop-transpose --param max-gcse-passes=3 -ffast-math -faltivec"
xtrflags="$ntlflags -malign-natural"
if ${noopt} ; then flags=$nooptflags; sflags="-fPIC $flags"; ntlflags=$flags
  else ntlflags="-mdynamic-no-pic -O3 $ntlflags"; flags="$ntlflags -malign-natural"; sflags="-fPIC -O3 $xtrflags"
fi
if ! ${dyn} ; then sflags=$flags; fi
##


# allow building with external NTL
sed -ri.bak 's;AC_ARG_WITH\(MP;AC_ARG_ENABLE(NTL, \\\ \n \[    NTL                  NTL\]\)\nAC_ARG_WITH\(MP;g' configure.in
sed -ri 's;([\]) $;\1;' configure.in
if ${sntl} ; then
	## setup2 missing in ntl/Makefile
	perl -pi.bak -e 's/setup1 setup1/setup1 setup2/g' ntl/Makefile
	# change GMP_PREFIX in ntl/configure
	perl -pi.bak -e 's, GMP_PREFIX=\$prefix/\$\{ac_cv_singuname\},,g' ntl/configure
	# re-run ranlib after cp
	perl -pi.bak -e 's,cp ntl\.a \$\(LIBDIR\)/libntl\.a,cp ntl\.a \$\(LIBDIR\)/libntl\.a; ranlib \$\(LIBDIR\)/libntl\.a,g' \
	ntl/src/make.tail
	### libm is libSystem, and is always searched _ but should be searched last :
	#perl -pi.bak -e 's/configure/configure NTL_STD_CXX=on LDLIBS=""/g' ntl/configure
	perl -pi -e 's/configure/configure LDLIBS=""/g' ntl/configure
	sed -i.bak -e '1i\
#include <iostream\.h>' ntl/src/{*Test,subset}.c
	perl -pi.bak -e "s/=\-O2/=$ntlflags $mflags $warnflags/g" ntl/src/make.config
  else
	rm -fR ntl
fi
#

### Getting control over installation paths ...
# In feResource.cc (note: apparently missing commas are added in second "-e" line, and in second expresion with S_UNAME) :
sed -ri.bak \
-e '\,\%d/LIB;,d' -e 's,^((\s|\t)+)\"\$SINGULARPATH;\"\s*$,&\n\1\"\%r/share/singular/LIB;\"\n\1\"\%d/LIB;\",' \
-e 's/LIB\"$/LIB\",/' \
-e 's,d/\"S_UNAME\",b,' -e 's|d/\"S_UNAME|r/bin\",|' -e 's,r/doc/singular\.idx,d/singular\.idx,' \
-e "s,/html,/share/doc/${n}/html," -e 's,/info/singular\.hlp,/share/info/singular\.info,' \
-e "s,/examples,/share/doc/${n}/examples," -e 's,/netscape,/mozilla,' -e 's,\%b/xterm,/usr/X11R6/bin/xterm,' \
-e 's,\"\%b;\$PATH\",\"\$PATH\",' -e 's,\"\%r/emacs\",\"\%r/share/singular/emacs\",g' -e "s,\%b/\.\.,${p}," \
-e 's|SINGULAR_DEFAULT_DIR,|\"\%r/share/singular\",|' Singular/feResource.cc
# and to install the .so files in /sw/lib/singular (FS policy...) :
# (was basically hard-coded that they were in the same dir as the executable)
if ${dyn} ; then sed -ri -e 's,25,26,' -e "/BinDir/i\
\ \ \{\"SoDir\",\t'L',\tfeResDir,\t\"SINGULAR_SO_DIR\",\t\"%r/lib/singular\",\t\"\"\}," Singular/feResource.cc
sed -ri.bak -e "s,'b','L'," Singular/mod_raw.cc ; fi
# Removing hard-coded /usr/local...
perl -pi.bak -e "s,/usr/local/bin/,,g; s,\$HOME/bin/\$MP_ARCH,${p}/bin," MP/mpviewer/displaymp
perl -pi.bak -e 's,/usr/local,\${prefix}/share/singular/localdir,' {,doc/}Makefile.in
### Don't hardcode path, use relative path :
perl -pi -e 's,\${LN_S} \${SINGULAR},\${LN_S} Singular\-\${SINGULAR_VERSION},' Singular/Makefile.in
### LIB must be copied to install-dir _ build-dir will disappear
perl -pi -e 's,\${LN_S} `pwd`/,cp -pR ,' Singular/Makefile.in
# Same in doc, for html and examples :
perl -pi -e 's,ln -s `pwd`/,cp -pR ,' doc/Makefile.in

### Misc
## A rotten test : CPPFLAGS are set WITHIN the c file _ cf in the configure script :
###   cat > conftest.$ac_ext <<EOF
### #line 2756 "configure"
### #include "confdefs.h"
### #include "values.h" ,
###               CPPFLAGS="-I. ${CPPFLAGS}"
### EOF
perl -pi.bak -e 's/AC_TRY_CPP\( #include "values\.h" ,//g; s/CPPFLAGS="\-I\. \${CPPFLAGS}",//g; s/echo "\*\*\* no values\.h";exit\)//g' MP/configure.in
# And to make values.h found (eg in gcc -fPIC -I. -I%p/src/singular-2.04-1/ppcMac-darwin/include -DHAVE_CONFIG_H -c MP_Env.c _ in MP/MP)
ln -s ../values.h MP/MP
# it is MP_Memory.c
perl -pi.bak -e 's/ Memory\.c/ MP_Memory\.c/g' MP/MP/Makefile.in
# clearer with a space
perl -pi.bak -e 's/#include"MP.h"/#include "MP.h"/g' MP/MPT/MPT.h
## stdlib.h shouldn't be a target _ no rule to make it... (correction no longer needed for this specific build, but still...) :
perl -pi.bak -e 's/ \${OM_MALLOC_HEADER}//g' omalloc/Makefile.in
## "--with-malloc=system" breaks down in MP, since there it is "--with-malloc=HEADER"
## Thus patch the configure script to ignore the '--with-malloc=system, since the header we need is the default stdlib.h :
perl -pi -e 's/"\${with_malloc\+set}" = set/0 = 1/g' MP/configure.in
## cerr etc undefined in QuickTest.c etc...
sed -i.bak -e '1i\
#include <iostream\.h>' libfac/test*
## doesn't build correctly with bison-1.875 and GCC-3.3 :
perl -pi -e 's,= bison,= /usr/bin/bison,g' Singular/Makefile.in
## The var $ac_cv_with_readline appears nowhere else in the build tree _ only at 1 place in configure(.in)
# Everywhere else it is 'with_readline' : seems fixed in 2.05
#perl -pi.bak -e 's/ac_cv_with_readline/with_readline/g' Singular/configure.in
## line 1078 gave an error (not sure the fix is correct) : seems fixed in 2.05
# iplib.cc: In function `BOOLEAN load_modules(char*, char*, char)':
# iplib.cc:1078: error: could not convert `&token' to `int&'
# ipshell.h:37: error: in passing argument 2 of `int IsCmd(char*, int&)'
# perl -pi.bak -e 's/\(IsCmd\(plib, \&token\)\)/\(IsCmd\(plib, token\)\)/g' Singular/iplib.cc
### new problem in 2.05 : HAVE_NAMESPACES leads to error
perl -pi.bak -e 's,#   define HAVE_NAMESPACES 1,/\* #   define HAVE_NAMESPACES 1 \*/,g' Singular/mod2.h.in
### w/o the next one, system("sh",whatever) always returns -1 instead of 0
### (with perror inserted at the following place showing 'No child processes') :
sed -ri.bak '/strcmp\(sys_cmd,\"sh\"\)/,+13 {
s/MWERKS__/MWERKS__\n signal\(SIGCHLD, \(void \(\*\)\(int\)\)SIG_DFL\);/
s/\#endif/signal\(SIGCHLD, \(void \(\*\)\(int\)\)SIG_IGN\);\n \#endif/
}' Singular/extra.cc
### The space in -I . seems to work, but I feel more comfortable w/o it ...
perl -pi.bak -e 's,\-I \.,\-I\.,g' IntegerProgramming/Makefile.in
### @ifclear needs a name _ the guess below is hopefully correct...
perl -pi.bak -e 's,^\@ifclear$,\@ifclear singularmanual,' doc/INSTALL_win.texi
## There is no ../GPL
sed -i -e /GPL/d doc/Makefile.in
### singular.hlp is installed (by doc/Makefile) in ${prefix}/info
perl -pi.bak -e 's,/doc,/info,g' emacs/Makefile.in
### and Singular/Makefile is not under $prefix
perl -pi -e 's,\$\{prefix\}/Singular/Makefile,\.\./Singular/Makefile,g' emacs/Makefile.in
### emacs/lib.pl expects to find libparse and LIB in "{prefix}/Singular" while they were installed
### in ${bindir} and in ${prefix} resp ... The default in lib.pl is OK (except possibly for standalone build of the emacs-dir)
perl -pi -e 's,\-s \$\{singulardir\} ,,'  emacs/Makefile.in
## We put the .el files in %p/share/emacs/site-lisp (and xemacs/site-lisp):
perl -pi.bak -e 's,\-file \(.*\"\)\)$, "singular"\),g' emacs/.emacs-singular
###

### libm is libSystem, and is always searched _ but should appear last in the search list if at all:
perl -pi -e 's/\-lm //g' Singular/Makefile.in
perl -pi.bak -e 's/AC_CHECK_LIB\(m, atof\)/if test \"\$ac_cv_singuname\" \!= ppcMac-darwin; then\nAC_CHECK_LIB\(m, atof\)\nfi/g' Singular/configure.in
###

### Getting readline to be used (trying to _ don't understand this mess they did with readline...) :
perl -pi -e 's/"\$with_readline" != dynamic && test //g' Singular/configure.in
###

### changing some .so suffixes to dylib ...
perl -pi.bak -e 's/\"libreadline\.so\"\);/\"libreadline\.dylib\"\);\n\tif (fe_rl_hdl==NULL) fe_rl_hdl=dynl_open("libreadline.so");/g' Singular/fereadl.c
perl -pi.bak -e 's/{ "",/{ "", "\.dylib",/g' Singular/iplib.cc
###

### dynamic loading
# how to do dynamic loading (1)
perl -pi -e 's,#if defined\(ix86_Linux\),#if defined\(ppcMac_darwin\)\n#define HAVE_ELF_SYSTEM\n#endif\n\n#if defined\(ix86_Linux\),g' Singular/mod_raw.cc
# how to do dynamic loading (2)
## Have to try if there is a way to use continuation lines in commands like the following ... 
perl -pi -e "s|ac_cv_singuname\" in|ac_cv_singuname\" in\n\tppcMac\-darwin\)\n\t  AC_CHECK_LIB\(dl, dlopen\)\n\t  if test \"TST\" = yes; then\n\t\tLD_DYN_FLAGS=\"\"\n\t\tSFLAGS=\"\-DPIC $sflags\"\n\t\tSLDFLAGS=\"\-bundle \-bundle_loader Singular\"\n\t\tLD=g\+\+\n\t\tac_lib_dl=yes\n\t  fi\n\t;;|g" Singular/configure.in
perl -pi -e 's|TST|\$ac_cv_lib_dl_dlopen|g' Singular/configure.in
# The modules (*.so) must be linked with -bundle_loader in the presence of Singular
# (else execution-time error in doc/examples/watchdog:
## > malloc[27548]: Deallocation of a pointer not malloced: 0x304154; This could be a double free(), or free() called
## > with the middle of an allocated block; Try setting environment variable MallocHelp to see tools to help debug
# ). Just changing the build-order suffices (by laziness we put the dep on Singular in the .dl_o targets rather than the
# .so targets, since it seems inconvenient to dipense with "$^" in mpsr.so and dbmsr.so) :
### # (note that $DL_LIBS is empty when doing a static build)
perl -pi -e 's, \$\(DL_LIBS\)$,,' Singular/Makefile.in
perl -pi -e 's,SING_EXEC\),$& \$\(DL_LIBS\),,' Singular/Makefile.in
# To fully link mpsr.so at build-time we need to add -lgmp at the end of the MP_LIBS :
sed -ri -e 's,^dnl MP_LIBS=\$\{LIBS\}$,MP_LIBS=\"\-lgmp\",' Singular/configure.in
# and same problem with p_Procs_FieldQ.so (needs __gmpz_init_set )
# (we could just add -lgmp for all, but then otool -L would show fake deps for the other p_Procs_Field*.so) :
sed -ri \
-e '/\%\.dl_o \:/s/$/ \$\(SING_EXEC\)/' -e '/^p_Procs_\%\.so\:/,+1s/\^/\</' \
-e 's/^p_Procs_\%\.so\:/p_Procs_FieldQ\.so\: p_Procs_Lib_FieldQ\.dl_o\n\t\$\(LD\) \$\{SLDFLAGS\} \-o \$\@ \$\< \-lgmp\n\n&/' \
Singular/Makefile.in


# Replace (temporarily ?) -w flags by $warnflags
# We take the opportunity at the same time to get here a separate handle on the CFLAGS in each dir
# We get rid at the same time of the '-g' flags, in order to be able to grep for %p/src in binary files
# w/o false alarms.
# The first line just gives a handle, with the default level of -O2 otherwise generated by autoconf
sed -ri.bak -e '/CFLAGS\+set/,+3s/^dnl //' -e 's/"\-O"/"-O2"/' omalloc/configure.in
perl -pi -e "s/\-O2/$flags $mflags $warnflags/g" omalloc/configure.in
perl -pi -e "s/\-O(3|)/$flags $mflags $warnflags/g" omalloc/Makefile.in
# We need -fPIC, hence $sflags, in MP (maybe just in MP/MP ??
#  msg was ".../libMP.a(MP_Put.o) has local relocation entries in non-writable section (__TEXT,__text)")
perl -pi -e "s/\-O3 \-w/$sflags $mflags $warnflags/g" MP/configure.in
perl -pi.bak -e "s/\t\-w/\t $warnflags/g" factory/GNUmakefile.in
perl -pi.bak -e "s/\-O2/$flags $mflags/g" factory/configure.in
perl -pi.bak -e "s/\-O3/$flags $mflags $warnflags/g" libfac/configure.in
sed -ri -e 's/CFLAGS=\"\-O3 \-w/CFLAGS=\"\-fast/' -e "s/\-fast/$flags $mflags $warnflags/" Singular/configure.in
perl -pi -e "s/\-O3 \-w /$flags $mflags $warnflags /g" Singular/configure.in
sed -ri -e "s/\-O2 *([$])/$flags $mflags $warnflags \1/g" Singular/Makefile.in
# -malign-natural causes runtime errors, thus :
perl -pi -e "s/\@CXXFLAGS\@/$ntlflags $mflags $warnflags/g" IntegerProgramming/Makefile.in
####

### hdegree.cc _ apparently ~ line 651, corresponding to offset 0x74 in hZeroMult _
### leads to execution time errors with gcc3.3 and the default -O3 (and even with -O2) .
### We set thus a separate target up for hdegree.o, with ad hoc optimization flags _
### corresponding as closely as possible to the $flags used elsewhere: we add to -Os
### all flags we suspect might occur in -O2 or in -O3 and not in -Os, plus our previous $xtrflags ...
## Add flags that should be in -O2 and are probably not in -Os :
xtrflags="$xtrflags -falign-functions -falign-jumps -falign-loops -falign-labels -fprefetch-loop-arrays"
# now get to -O3 (and add -Os -mdynamic-no-pic etc):
xtrflags="-Os -mdynamic-no-pic $xtrflags -finline-functions -frename-registers $mflags $warnflags -fomit-frame-pointer"
sed -ri -e \
"s/^version\.h:/hdegree.o: hdegree.cc\n\t\$\{CXX\} $xtrflags \$\{CXXTEMPLFLAGS\} \$\{CPPFLAGS\} \$\{DEFS\} \-c \$\<\n\n&/" \
Singular/Makefile.in

# To enable the streamio switch :
if ${strio} ; then
  perl -pi -e "s,streamio=no,streamio=yes," factory/configure.in
  sed -ri -e '/AC_DEFINE\(SINGULAR\)/,+1{/AC_DEFINE\(NOSTREAMIO\)/d}' libfac/configure.in
fi

# Getting macaulay2 to build on this will be hard _ we'll first get an independent build
# of macaulay2 (using the same version of libfac and factory) _ Thus, commented out :
## build also tmpl_inst.o in libfac, for (possible) use by macaulay2 :
#sed -ri.bak '/^libsingfac.a:/s,OBJ1,OBJ,'  libfac/Makefile.in

## For safety, after all those changes make sure to run 'make depend'
perl -pi -e 's,stamp\-h$,stamp\-h depend,g' omalloc/Makefile.in
perl -pi -e 's,Config\.h\.in$,Config\.h\.in depend,g' MP/MP/Makefile.in
perl -pi.bak -e 's,^install:,install: depend,g' MP/MPT/Makefile.in
perl -pi -e 's,stamp\-h$,stamp\-h depend,g' Singular/Makefile.in


## Putting the changes into the configure scripts
cd omalloc; autoconf; cd ..
cd MP ; autoconf ; cd ..
cd factory ; autoconf ; cd ..
cd libfac ; autoconf ; cd ..
cd Singular ; autoconf ; cd ..
autoconf

