diff -ruN Fink.orig/Config.pm Fink/Config.pm
--- Fink.orig/Config.pm	Sun Sep  8 20:11:38 2002
+++ Fink/Config.pm	Fri Nov  8 00:49:09 2002
@@ -36,12 +36,12 @@
   @ISA         = qw(Exporter Fink::Base);
   @EXPORT      = qw();
   @EXPORT_OK   = qw($config $basepath $libpath $debarch $darwin_version $macosx_version $distribution
-                    &get_option &set_options &verbosity_level);
+                    &get_option &set_options &verbosity_level $buildpath);
   %EXPORT_TAGS = ( );   # eg: TAG => [ qw!name1 name2! ],
 }
 our @EXPORT_OK;
 
-our ($config, $basepath, $libpath, $debarch, $darwin_version, $macosx_version, $distribution);
+our ($config, $basepath, $libpath, $debarch, $darwin_version, $macosx_version, $distribution, $buildpath);
 $debarch = "darwin-powerpc";
 
 my %globals = ();
@@ -87,6 +87,9 @@
   $basepath = $self->param("Basepath");
   die "Basepath not set in config file \"".$self->{_path}."\"!\n"
     unless (defined $basepath and $basepath);
+
+  $buildpath = $config->param_default("Buildpath", "$basepath/src");
+
   $libpath = "$basepath/lib/fink";
   $distribution = $self->param("Distribution");
 
   $verbose = $config->param_default("Verbose", 3);
diff -ruN Fink.orig/Engine.pm Fink/Engine.pm
--- Fink.orig/Engine.pm	Tue Oct 15 18:34:13 2002
+++ Fink/Engine.pm	Thu Nov  7 19:48:43 2002
@@ -28,7 +28,7 @@
                       &file_MD5_checksum);
 use Fink::Package;
 use Fink::PkgVersion;
-use Fink::Config qw($config $basepath);
+use Fink::Config qw($config $basepath $distribution);
 use File::Find;
 
 use strict;
@@ -453,7 +453,7 @@
 
   chdir "$basepath/fink";
   foreach $tree (@treelist) {
-    $treedir = "dists/$tree/binary-darwin-powerpc";
+    $treedir = "$distribution/$tree/binary-darwin-powerpc";
     if ($tree =~ /^([^\/]+)\/(.+)$/) {
       $archive = $1;
       $component = $2;
@@ -672,7 +672,7 @@
   }
   
   # Now search through all .deb files in /sw/fink/dists/
-  find (\&kill_obsolete_debs, "$basepath/fink/dists");
+  find (\&kill_obsolete_debs, "$basepath/fink/$distribution");
   
   # Remove broken symlinks in /sw/fink/debs (i.e. those that pointed to 
   # the .deb files we deleted above).
diff -ruN Fink.orig/NetAccess.pm Fink/NetAccess.pm
--- Fink.orig/NetAccess.pm	Sat Sep 28 15:53:38 2002
+++ Fink/NetAccess.pm	Thu Nov  7 21:30:22 2002
@@ -52,11 +52,11 @@
 
 sub fetch_url {
   my $url = shift;
-  my $destdir = shift || "$basepath/src";
+  my $downloaddir = shift || "$basepath/src";
   my ($file, $cmd);
 
   $file = &filename($url);
-  return &fetch_url_to_file($url, $file, 0, 0, 0, $destdir);
+  return &fetch_url_to_file($url, $file, 0, 0, 0, $downloaddir);
 }
 
 ### download a file to the designated directory and save it under the
@@ -69,18 +69,18 @@
   my $custom_mirror = shift || 0;
   my $tries = shift || 0;
   my $cont = shift || 0;  
-  my $destdir = shift || "$basepath/src";
+  my $downloaddir = shift || "$basepath/src";
   my ($http_proxy, $ftp_proxy);
   my ($url, $cmd, $cont_cmd, $result);
 
   # create destination directory if necessary
-  if (not -d $destdir) {
-    &execute("mkdir -p $destdir");
-    if (not -d $destdir) {
-      die "Download directory \"$destdir\" can not be created!\n";
+  if (not -d $downloaddir) {
+    &execute("mkdir -p $downloaddir");
+    if (not -d $downloaddir) {
+      die "Download directory \"$downloaddir\" can not be created!\n";
     }
   }
-  chdir $destdir;
+  chdir $downloaddir;
 
   # determine download command
   $cmd = &download_cmd($origurl, $file);
diff -ruN Fink.orig/Package.pm Fink/Package.pm
--- Fink.orig/Package.pm	Thu Sep 19 16:03:02 2002
+++ Fink/Package.pm	Thu Nov  7 19:50:01 2002
@@ -24,7 +24,7 @@
 use Fink::Base;
 use Fink::Services qw(&read_properties &latest_version &version_cmp
                       &print_breaking &execute);
-use Fink::Config qw($config $basepath);
+use Fink::Config qw($config $basepath $distribution);
 use Fink::PkgVersion;
 use File::Find;
 
@@ -342,7 +342,7 @@
 	  or ((stat("$basepath/etc/fink.conf"))[9] > $db_mtime)) {
 	  $db_outdated = 1;
 	} else {
-	  find (\&process_find, "$basepath/fink/dists");
+	  find (\&process_find, "$basepath/fink/$distribution");
 	}
       }
       
@@ -409,7 +409,7 @@
   
   # read data from descriptions
   foreach $tree ($config->get_treelist()) {
-    $dir = "$basepath/fink/dists/$tree/finkinfo";
+    $dir = "$basepath/fink/$distribution/$tree/finkinfo";
     Fink::Package->scan($dir);
   }
   
diff -ruN Fink.orig/PkgVersion.pm Fink/PkgVersion.pm
--- Fink.orig/PkgVersion.pm	Sun Oct 13 19:37:23 2002
+++ Fink/PkgVersion.pm	Fri Nov  8 00:08:51 2002
@@ -28,7 +28,7 @@
 		      &prompt_boolean &prompt_selection
 		      &collapse_space &read_properties_var
 		      &file_MD5_checksum);
-use Fink::Config qw($config $basepath $libpath $debarch);
+use Fink::Config qw($config $basepath $libpath $debarch $buildpath $distribution);
 use Fink::NetAccess qw(&fetch_url_to_file);
 use Fink::Mirror;
 use Fink::Package;
@@ -55,7 +55,6 @@
 
 
 ### self-initialization
-
 sub initialize {
   my $self = shift;
   my ($pkgname, $version, $revision, $filename, $source);
@@ -72,6 +71,7 @@
   # the following is set by Fink::Package::scan
   $self->{_filename} = $filename = $self->{thefilename};
 
+
   # path handling
   if ($filename) {
     @parts = split(/\//, $filename);
@@ -101,7 +101,7 @@
     }
     
     # determine the package tree ("stable", "unstable", etc.)
-	@parts = split(/\//, substr($filename,length("$basepath/fink/dists/")));
+	@parts = split(/\//, substr($filename,length("$basepath/fink/$distribution/")));
     $self->{_tree}  = $parts[0];
   } else {
     # for dummy descriptions generated from dpkg status data alone
@@ -122,11 +122,11 @@
   # percent-expansions
   $configure_params = "--prefix=\%p ".
     $self->param_default("ConfigureParams", "");
-  $destdir = "$basepath/src/root-".$self->{_fullname};
+  $destdir = "$buildpath/root-".$self->{_fullname};
   if ($self->{_type} eq "splitoff") {
     my $parent = $self->{parent};
     $parentpkgname = $parent->{_name};
-    $parentdestdir = "$basepath/src/root-".$parent->{_fullname};
+    $parentdestdir = "$buildpath/root-".$parent->{_fullname};
   } else {
     $parentpkgname = $pkgname;
     $parentdestdir = $destdir;
@@ -149,6 +149,7 @@
 	      'c' => $configure_params,
 	      'b' => '.'
 	    };
+
   $self->{_expand} = $expand;
 
   $self->{_bootstrap} = 0;
@@ -306,13 +307,13 @@
   my ($destdir);
   my $splitoff;
 
-  $destdir = "$basepath/src/root-".$self->{_fullname};
+  $destdir = "$buildpath/root-".$self->{_fullname};
   $self->{_expand}->{p} = $basepath;
   $self->{_expand}->{d} = $destdir;
   $self->{_expand}->{i} = $destdir.$basepath;
   if ($self->{_type} eq "splitoff") {
     my $parent = $self->{parent};
-    my $parentdestdir = "$basepath/src/root-".$parent->{_fullname};
+    my $parentdestdir = "$buildpath/root-".$parent->{_fullname};
     $self->{_expand}->{D} = $parentdestdir;
     $self->{_expand}->{I} = $parentdestdir.$basepath;
   } else {
@@ -474,7 +475,7 @@
     $self->{_builddir} = $self->get_fullname()."/".$dir;
   }
 
-  $self->{_expand}->{b} = "$basepath/src/".$self->{_builddir};
+  $self->{_expand}->{b} = "$buildpath/".$self->{_builddir};
   return $self->{_builddir};
 }
 
@@ -934,7 +935,7 @@
   }
 
   # remove dir if it exists
-  chdir "$basepath/src";
+  chdir "$buildpath";
   if (-e $bdir) {
     if (&execute("rm -rf $bdir")) {
       die "can't remove existing directory $bdir\n";
@@ -942,7 +943,7 @@
   }
 
   if ($self->{_type} eq "nosource") {
-    $destdir = "$basepath/src/$bdir";
+    $destdir = "$buildpath/$bdir";
     if (&execute("mkdir -p $destdir")) {
       die "can't create directory $destdir\n";
     }
@@ -1045,7 +1046,7 @@
     }
 
     # calculate destination directory
-    $destdir = "$basepath/src/$bdir";
+    $destdir = "$buildpath/$bdir";
     if ($i > 1) {
       if ($self->has_param("Source".$i."ExtractDir")) {
 	$destdir .= "/".&expand_percent($self->param("Source".$i."ExtractDir"), $self->{_expand});
@@ -1103,10 +1104,10 @@
   }
 
   $dir = $self->get_build_directory();
-  if (not -d "$basepath/src/$dir") {
-    die "directory $basepath/src/$dir doesn't exist, check the package description\n";
+  if (not -d "$buildpath/$dir") {
+    die "directory $buildpath/$dir doesn't exist, check the package description\n";
   }
-  chdir "$basepath/src/$dir";
+  chdir "$buildpath/$dir";
 
   $patch_script = "";
 
@@ -1189,10 +1190,10 @@
   }
 
   $dir = $self->get_build_directory();
-  if (not -d "$basepath/src/$dir") {
-    die "directory $basepath/src/$dir doesn't exist, check the package description\n";
+  if (not -d "$buildpath/$dir") {
+    die "directory $buildpath/$dir doesn't exist, check the package description\n";
   }
-  chdir "$basepath/src/$dir";
+  chdir "$buildpath/$dir";
 
   # generate compilation script
   if ($self->has_param("CompileScript")) {
@@ -1234,10 +1235,10 @@
     } else {
       $dir = $self->get_build_directory();
     }
-    if (not -d "$basepath/src/$dir") {
-      die "directory $basepath/src/$dir doesn't exist, check the package description\n";
+    if (not -d "$buildpath/$dir") {
+      die "directory $buildpath/$dir doesn't exist, check the package description\n";
     }
-    chdir "$basepath/src/$dir";
+    chdir "$buildpath/$dir";
   }
 
   # generate installation script
@@ -1394,7 +1395,7 @@
 
   if (not $do_splitoff) {
     $bdir = $self->get_fullname();
-    chdir "$basepath/src";
+    chdir "$buildpath";
     if (not $config->param_boolean("KeepBuildDir") and -e $bdir) {
       if (&execute("rm -rf $bdir")) {
 	&print_breaking("WARNING: Can't remove build directory $bdir. ".
@@ -1427,9 +1428,9 @@
     return;
   }
 
-  chdir "$basepath/src";
+  chdir "$buildpath";
   $ddir = "root-".$self->get_fullname();
-  $destdir = "$basepath/src/$ddir";
+  $destdir = "$buildpath/$ddir";
 
   if (not -d "$destdir/DEBIAN") {
     if (&execute("mkdir -p $destdir/DEBIAN")) {
diff -ruN Fink.orig/SelfUpdate.pm Fink/SelfUpdate.pm
--- Fink.orig/SelfUpdate.pm	Sun Sep  8 20:11:38 2002
+++ Fink/SelfUpdate.pm	Thu Nov  7 21:28:50 2002
@@ -356,7 +356,7 @@
 
 sub do_tarball {
   my $newversion = shift;
-  my ($destdir, $dir);
+  my ($downloaddir, $dir);
   my ($pkgtarball, $url, $verbosity, $unpack_cmd);
 
   print "\n";
@@ -366,8 +366,8 @@
 		  "using commands like 'fink update-all'.");
   print "\n";
 
-  $destdir = "$basepath/src";
-  chdir $destdir or die "Can't cd to $destdir: $!\n";
+  $downloaddir = "$basepath/src";
+  chdir $downloaddir or die "Can't cd to $downloaddir: $!\n";
 
   # go ahead and upgrade
   # first, download the packages tarball
@@ -376,7 +376,7 @@
   $url = "mirror:sourceforge:fink/$pkgtarball";
 
   if (not -f $pkgtarball) {
-    if (&fetch_url($url, $destdir)) {
+    if (&fetch_url($url, $downloaddir)) {
       die "Downloading the update tarball '$pkgtarball' from the URL '$url' failed.\n";
     }
   }
@@ -402,7 +402,7 @@
   if (&execute("./inject.pl $basepath -quiet")) {
     die "injecting the new package definitions from $pkgtarball failed\n";
   }
-  chdir $destdir or die "Can't cd to $destdir: $!\n";
+  chdir $downloaddir or die "Can't cd to $downloaddir: $!\n";
   if (-e $dir) {
     &execute("rm -rf $dir");
   }
diff -ruN Fink.orig/Validation.pm Fink/Validation.pm
--- Fink.orig/Validation.pm	Sun Oct 13 21:36:43 2002
+++ Fink/Validation.pm	Thu Nov  7 19:35:51 2002
@@ -23,7 +23,7 @@
 package Fink::Validation;
 
 use Fink::Services qw(&read_properties &expand_percent);
-use Fink::Config qw($config $basepath);
+use Fink::Config qw($config $basepath $buildpath);
 
 use strict;
 use warnings;
@@ -172,7 +172,7 @@
   my ($properties, @parts);
   my ($pkgname, $pkgversion, $pkgrevision, $pkgfullname, $pkgdestdir, $pkgpatchpath);
   my ($field, $value);
-  my ($basepath, $expand);
+  my ($basepath, $expand, $buildpath);
   my $looks_good = 1;
   my $error_found = 0;
 
@@ -185,12 +185,13 @@
   
   # determine the base path
   $basepath = $config->param("basepath");
+  $buildpath = $config->param("buildpath");
 
   $pkgname = $properties->{package};
   $pkgversion = $properties->{version};
   $pkgrevision = $properties->{revision};
   $pkgfullname = "$pkgname-$pkgversion-$pkgrevision";
-  $pkgdestdir = "$basepath/src/root-".$pkgfullname;
+  $pkgdestdir = "$buildpath/root-".$pkgfullname;
   
   @parts = split(/\//, $filename);
   $filename = pop @parts;   # remove filename
