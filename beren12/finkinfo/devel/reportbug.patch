diff -ruN reportbug/README.developers reportbug.new/README.developers
--- reportbug/README.developers	Fri Oct  1 04:09:29 2004
+++ reportbug.new/README.developers	Sat Oct  9 22:48:23 2004
@@ -10,7 +10,7 @@
 Template Information & Interaction with the user
 ================================================
 
- If /usr/share/bug/$package is executable, then bug executes it and
+ If @FINKPREFIX@/share/bug/$package is executable, then bug executes it and
 takes what comes out from the file descriptor 3 and puts it in the bug
 template.
  The maintainer can then ask questions to the user or run whatever
@@ -22,8 +22,8 @@
 	...
 	system-information-tool >&3
 	
- If /usr/share/bug/$package is a directory, then
-/usr/share/bug/$package/script is executed.
+ If @FINKPREFIX@/share/bug/$package is a directory, then
+@FINKPREFIX@/share/bug/$package/script is executed.
 
  While the script is executed, the following shell functions are
 available:
@@ -34,7 +34,7 @@
 					  in REPLY. The second argument is
 					  the default.
 
- If the file /usr/share/bug/$package/presubj exists, its content is
+ If the file @FINKPREFIX@/share/bug/$package/presubj exists, its content is
 shown to the user before asking him for the bug's subject.
 
  Note: It's your responsibility to check if the information included
@@ -48,7 +48,7 @@
 used to redirect bugs in packages coming from a single source to where the
 maintainer likes to have them.
 
- This is done by having this line in /usr/share/bug/$package/control:
+ This is done by having this line in @FINKPREFIX@/share/bug/$package/control:
 
 	Submit-As: $new-package
 
@@ -57,9 +57,9 @@
 BTS selection
 =============
 
- Packages not distributed by Debian can take advantage of this utility too.
+ Packages not distributed by Fink can take advantage of this utility too.
 They just need to add a "send-to" header to the control file
-/usr/share/bug/$package/control.
+@FINKPREFIX@/share/bug/$package/control.
 
 	Send-To: bugs.myproject.com
 
@@ -76,7 +76,7 @@
 ================
 
  Often programs are distributed across several different packages, for
-example an upstream package 'foo' may be packaged in Debian as foo, libfoo,
+example an upstream package 'foo' may be packaged in Fink as foo, libfoo,
 foo-common and foo-data.  In such cases it can be useful to include related
 package information in bugreports, to minimise the need for 'moreinfo' requests
 to the submitter :) This is done by adding a "report-with" header to the
@@ -90,7 +90,7 @@
 Addendum: Languages other than SH
 =================================
 
-The script in /usr/share/bug/reportbug/script is an example of a bug
+The script in @FINKPREFIX@/share/bug/reportbug/script is an example of a bug
 handling script written in Python.  You can also write bug handlers in
 many other languages that allow direct access to file descriptors,
 including Perl and C/C++.
diff -ruN reportbug/checkbuildd.py reportbug.new/checkbuildd.py
--- reportbug/checkbuildd.py	Wed Feb  4 23:29:10 2004
+++ reportbug.new/checkbuildd.py	Sat Oct  9 22:59:13 2004
@@ -26,7 +26,7 @@
 from urlutils import open_url
 from reportbug_exceptions import *
 
-BUILDD_URL = 'http://buildd.debian.org/build.php?arch=%s&pkg=%s'
+BUILDD_URL = 'http://buildd.finkproject.org/build.php?arch=%s&pkg=%s'
 
 # This is easy; just look for succeeded in an em block...
 
@@ -70,7 +70,8 @@
         arch = archname()
 
     try:
-        page = open_url(BUILDD_URL % (arch, src_package), http_proxy)
+#        page = open_url(BUILDD_URL % (arch, src_package), http_proxy)
+        return {}
     except NoNetwork:
         return {}
     if not page:
diff -ruN reportbug/checkversions.py reportbug.new/checkversions.py
--- reportbug/checkversions.py	Thu Sep 30 05:20:46 2004
+++ reportbug.new/checkversions.py	Sat Oct  9 23:00:37 2004
@@ -125,7 +125,7 @@
 
 def get_versions_available(package, dists=None, http_proxy=None, arch='i386'):
     if not dists:
-        dists = ('stable', 'testing', 'unstable')
+        dists = ('stable', 'unstable')
 
     try:
         page = open_url(PACKAGES_URL % package, http_proxy)
diff -ruN reportbug/debian/copyright reportbug.new/debian/copyright
--- reportbug/debian/copyright	Wed Feb  4 23:29:12 2004
+++ reportbug.new/debian/copyright	Tue Oct 12 00:16:51 2004
@@ -23,4 +23,4 @@
 #  SOFTWARE.
 
 The "handle_bugscript" script is subject to the GNU General Public
-License.  See /usr/share/common-licenses/GPL.
+License.  See @FINKPREFIX@/share/common-licenses/GPL.
diff -ruN reportbug/debian/install-sed reportbug.new/debian/install-sed
--- reportbug/debian/install-sed	Mon Jul 12 14:30:56 2004
+++ reportbug.new/debian/install-sed	Tue Oct 12 10:51:14 2004
@@ -4,5 +4,5 @@
 shift
 
 for filename in $@; do
-    sed -f sed-script < $filename > `pwd`/debian/reportbug/$dir/$filename
+    sed -f sed-script < $filename > $dir/$filename
 done
diff -ruN reportbug/debian/install-sed~ reportbug.new/debian/install-sed~
--- reportbug/debian/install-sed~	Wed Dec 31 19:00:00 1969
+++ reportbug.new/debian/install-sed~	Mon Jul 12 14:30:56 2004
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+dir=$1
+shift
+
+for filename in $@; do
+    sed -f sed-script < $filename > `pwd`/debian/reportbug/$dir/$filename
+done
diff -ruN reportbug/debianbts.py reportbug.new/debianbts.py
--- reportbug/debianbts.py	Fri Oct  1 04:12:02 2004
+++ reportbug.new/debianbts.py	Wed Oct 13 10:00:07 2004
@@ -40,7 +40,7 @@
     'grave' : """makes the package in question unusable by most or all users,
     or causes data loss, or introduces a security hole allowing access 
     to the accounts of users who use the package.""",
-    'serious' : """is a severe violation of Debian policy (that is,
+    'serious' : """is a severe violation of Fink policy (that is,
     the problem is a violation of a 'must' or 'required' directive);
     may or may not affect the usability of the package.  Note that non-severe
     policy violations may be 'normal,' 'minor,' or 'wishlist' bugs.
@@ -131,39 +131,25 @@
     else:
         return severity
 
-# These packages are virtual in Debian; we don't look them up...
+# These packages are virtual in Fink; we don't look them up...
 debother = {
     'base' : 'General bugs in the base system',
-# Actually a real package, but most people don't have boot-floppies installed for good reason
-    'boot-floppy' : '(Obsolete, please use boot-floppies instead.)',
-    'boot-floppies' : 'Bugs in the woody installation subsystem',
-    'bugs.debian.org' : 'The bug tracking system, @bugs.debian.org',
-    'cdimage.debian.org' : 'CD Image issues',
-    'cdrom' : 'Problems with installation from CD-ROMs',
-# dpkg-iwj -- The dpkg branch maintained by Ian Jackson
-    'debian-policy' : 'Proposed changes in the Debian policy documentation',
-    'ftp.debian.org' : 'Problems with the FTP site',
+    'bugs.finkproject.org' : 'The bug tracking system, @bugs.finkproject.org',
+    'fink-policy' : 'Proposed changes in the Fink policy documentation',
+    'ftp.finkproject.org' : 'Problems with the FTP site',
     'general' : 'General problems (e.g., that many manpages are mode 755)',
-    'install' : 'Problems with the sarge installer.',
+    'install' : 'Problems with the fink installer.',
     'installation' : 'General installation problems not covered otherwise.',
-    'kernel' : '(Obsolete, please use "kernel-image" instead.)',
-    'kernel-image' : 'Problems with the Linux kernel, or the kernel shipped with Debian',
     'listarchives' :  'Problems with the WWW mailing list archives',
-    'lists.debian.org' : 'The mailing lists, debian-*@lists.debian.org.',
-    'mirrors' : 'Problems with Debian archive mirrors.',
-    'nonus.debian.org' : 'Problems with the non-US FTP site',
+    'lists.finkproject.org' : 'The mailing lists, fink-*@lists.finkproject.org.',
+    'mirrors' : 'Problems with Fink archive mirrors.',
     'press' : 'Press release issues',
     'project' : 'Problems related to Project administration',
-    'qa.debian.org' : 'Problems related to the quality assurance group',
-#slink-cd -- Slink CD 
-#spam -- Spam (reassign spam to here so we can complain about it)
-    'security.debian.org' : 'Problems with the security updates server',
-    'wnpp' : 'Work-Needing and Prospective Packages list',
-    'www.debian.org' : 'Problems with the WWW site (including other *.debian.org sites)'
+    'fink.sourceforge.net' : 'Problems with the WWW site (including other *.finkproject.org sites)'
     }
 
 progenyother = {
-    'debian-general' : 'Any non-package-specific bug',
+    'fink-general' : 'Any non-package-specific bug',
     }
 
 def handle_wnpp(package, bts, ui, online=True, http_proxy=None):
@@ -184,7 +170,7 @@
         'ITP' :
         "This is an `Intent To Package'. Please submit a package description along with copyright and URL in such a report.",
         'RFP' :
-        "This is a `Request For Package'. You have found an interesting piece of software and would like someone else to maintain it for Debian. Please submit a package description along with copyright and URL in such a report.",
+        "This is a `Request For Package'. You have found an interesting piece of software and would like someone else to maintain it for Fink. Please submit a package description along with copyright and URL in such a report.",
         }, 'Choose the request type: ', empty_ok=True)
     if not tag:
         ui.long_message('To report a bug in a package, use the name of the package, not wnpp.\n')
@@ -223,9 +209,9 @@
             return
 
         if tag == 'ITP':
-            headers.append('X-Debbugs-CC: debian-devel@lists.debian.org')
-            ui.ewrite('Your report will be carbon-copied to debian-devel, '
-                      'per Debian policy.\n')
+            headers.append('X-Debbugs-CC: fink-devel@lists.sourceforge.net')
+            ui.ewrite('Your report will be carbon-copied to fink-devel, '
+                      'per Fink policy.\n')
 
         body = """* Package name    : %s
   Version         : x.y.z
@@ -262,9 +248,9 @@
             severity = 'important'
 
         if tag == 'RFH':
-            headers.append('X-Debbugs-CC: debian-devel@lists.debian.org')
-            ui.ewrite('Your request will be carbon-copied to debian-devel, '
-                      'per Debian policy.\n')
+            headers.append('X-Debbugs-CC: fink-devel@lists.sourceforge.net')
+            ui.ewrite('Your request will be carbon-copied to fink-devel, '
+                      'per Fink policy.\n')
 
         if fulldesc:
             orphstr = 'intend to orphan'
@@ -287,17 +273,14 @@
 # Supported servers
 # Theoretically support for GNATS and Jitterbug could be added here.
 
-SYSTEMS = { 'debian' :
-            { 'name' : 'Debian', 'email': '%s@bugs.debian.org',
-              'btsroot' : 'http://www.debian.org/Bugs/',
+SYSTEMS = { 'fink' :
+            { 'name' : 'Fink', 'email': '%s@bugs.finkproject.org',
+              'btsroot' : 'http://bugs.finkproject.org',
               'query-dpkg' : 1, 'type' : 'debbugs',
-              'otherpkgs' : debother, 'nonvirtual' : ['kernel-image'],
-              'specials' : { 'wnpp': handle_wnpp },
+              'otherpkgs' : debother, 
+              #'specials' : { 'wnpp': handle_wnpp },
               # Dependency packages
-              'deppkgs' : ('gcc', 'g++', 'cpp', 'gcj', 'gpc', 'gobjc',
-                           'chill', 'gij', 'g77', 'python', 'python-base',
-                           'x-window-system-core', 'x-window-system'),
-              'cgiroot' : 'http://bugs.debian.org/cgi-bin/',
+              'cgiroot' : 'http://bugs.finkproject.org/cgi-bin/',
               'mirrors' : {} },
             'kde' :
             { 'name' : 'KDE Project', 'email': '%s@bugs.kde.org',
@@ -350,7 +333,7 @@
 CLASSLIST = ['sw-bug', 'doc-bug', 'change-request']
 
 CRITICAL_TAGS = {
-    'security' : 'This problem is a security vulnerability in Debian.',
+    'security' : 'This problem is a security vulnerability in Fink.',
 }
 
 TAGS = {
@@ -361,12 +344,12 @@
 ##    'sarge' : 'This bug only applies to the sarge release (Debian 3.1).',
 ##    'sid' : 'This bug only applies to the unstable branch of Debian.',
     'experimental' : 'This bug only applies to a package in the experimental '
-    'branch of Debian.',
+    'branch of Fink.',
     "l10n" : "This bug reports a localization/internationalization issue.",
 ##    'done' : 'No more tags.',
     }
 
-EXTRA_TAGS = ['potato', 'woody', 'sarge', 'security', 'sid', 'upstream']
+EXTRA_TAGS = ['stable', 'unstable', 'upstream']
 
 TAGLIST = ['l10n', 'patch', 'experimental']
 CRITICAL_TAGLIST = ['security']
@@ -432,7 +415,7 @@
     return type, loc
 
 # Dynamically add any additional systems found
-for origin in glob.glob('/etc/dpkg/origins/*'):
+for origin in glob.glob('@FINKPREFIX@/etc/dpkg/origins/*'):
     try:
         fp = file(origin)
         system = os.path.basename(origin)
@@ -613,7 +596,7 @@
 
     return (title, output)
 
-def get_cgi_reports(package, system='debian', http_proxy='', archived=False,
+def get_cgi_reports(package, system='fink', http_proxy='', archived=False,
                     source=False):
     page = open_url(cgi_package_url(system, package, archived, source),
                     http_proxy)
@@ -630,7 +613,7 @@
 
     return parser.bugcount, parser.title, parser.hierarchy
 
-def get_cgi_report(number, system='debian', http_proxy='', archived=False,
+def get_cgi_report(number, system='fink', http_proxy='', archived=False,
                    followups=False):
     number = int(number)
 
@@ -645,7 +628,7 @@
                 return alternates[mirror]
     return SYSTEMS[system]['btsroot']
 
-def get_reports(package, system='debian', mirrors=None,
+def get_reports(package, system='fink', mirrors=None,
                 http_proxy='', archived=False, source=False):
     if isinstance(package, StringTypes):
         if SYSTEMS[system]['cgiroot']:
@@ -685,7 +668,7 @@
 
     return bugcount, title, hierarchy
 
-def get_report(number, system='debian', mirrors=None,
+def get_report(number, system='fink', mirrors=None,
                http_proxy='', archived=False, followups=False):
     number = int(number)
     if SYSTEMS[system]['cgiroot']:
diff -ruN reportbug/debianbts.py~ reportbug.new/debianbts.py~
--- reportbug/debianbts.py~	Wed Dec 31 19:00:00 1969
+++ reportbug.new/debianbts.py~	Wed Oct 13 09:58:25 2004
@@ -0,0 +1,681 @@
+#
+# debianbts.py - Routines to deal with the debbugs web pages
+#
+#   Written by Chris Lawrence <lawrencc@debian.org>
+#   (C) 1999-2004 Chris Lawrence
+#
+# This program is freely distributable per the following license:
+#
+##  Permission to use, copy, modify, and distribute this software and its
+##  documentation for any purpose and without fee is hereby granted,
+##  provided that the above copyright notice appears in all copies and that
+##  both that copyright notice and this permission notice appear in
+##  supporting documentation.
+##
+##  I DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
+##  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL I
+##  BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
+##  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+##  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+##  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+##  SOFTWARE.
+#
+# Version ##VERSION##; see changelog for revision history
+#
+# $Id$
+
+import sgmllib, glob, os, re, reportbug, rfc822, time, urllib, checkversions
+from urlutils import open_url
+from types import StringTypes
+import sys
+
+class Error(Exception):
+    pass
+
+# Severity levels
+SEVERITIES = {
+    'critical' : """makes unrelated software on the system (or the
+    whole system) break, or causes serious data loss, or introduces a
+    security hole on systems where you install the package.""",
+    'grave' : """makes the package in question unusable by most or all users,
+    or causes data loss, or introduces a security hole allowing access 
+    to the accounts of users who use the package.""",
+    'serious' : """is a severe violation of Fink policy (that is,
+    the problem is a violation of a 'must' or 'required' directive);
+    may or may not affect the usability of the package.  Note that non-severe
+    policy violations may be 'normal,' 'minor,' or 'wishlist' bugs.
+    (Package maintainers may also designate other bugs as 'serious' and thus
+    release-critical; however, end users should not do so.)""",
+    'important' : """a bug which has a major effect on the usability
+    of a package, without rendering it completely unusable to
+    everyone.""",
+    'does-not-build' : """a bug that stops the package from being built
+    from source.  (This is a 'virtual severity'.)""",
+    'normal' : """a bug that does not undermine the usability of the
+    whole package; for example, a problem with a particular option or
+    menu item.""",
+    'minor' : """things like spelling mistakes and other minor
+    cosmetic errors that do not affect the core functionality of the
+    package.""",
+    'wishlist' : "suggestions and requests for new features.",
+    }
+
+# justifications for critical bugs
+JUSTIFICATIONS = {
+    'critical' : (
+    ('breaks unrelated software', """breaks unrelated software on the system
+    (packages that have a dependency relationship are not unrelated)"""),
+    ('breaks the whole system', """renders the entire system unusable (e.g.,
+    unbootable, unable to reach a multiuser runlevel, etc.)"""),
+    ('causes serious data loss', """causes loss of important, irreplaceable
+    data"""),
+    ('root security hole', """introduces a security hole allowing access to
+    root (or another privileged system account), or data normally
+    accessible only by such accounts"""),
+    ('unknown', """not sure, or none of the above"""),
+    ),
+    'grave' : (
+    ('renders package unusable', """renders the package unusable, or mostly
+    so, on all or nearly all possible systems on which it could be installed
+    (i.e., not a hardware-specific bug); or renders package uninstallable
+    or unremovable without special effort"""),
+    ('causes non-serious data loss', """causes the loss of data on the system
+    that is unimportant, or restorable without resorting to backup media"""),
+    ('user security hole', """introduces a security hole allowing access to
+    user accounts or data not normally accessible"""),
+    ('unknown', """not sure, or none of the above"""),
+    )
+    }
+
+
+# Ordering for justifications
+JUSTORDER = {
+    'critical' :  ['breaks unrelated software',
+                   'breaks the whole system',
+                   'causes serious data loss',
+                   'root security hole',
+                   'unknown'],
+    'grave' : ['renders package unusable',
+               'causes non-serious data loss',
+               'user security hole',
+               'unknown']
+    }
+
+SEVERITIES_gnats = {
+    'critical' : 'The product, component or concept is completely'
+    'non-operational or some essential functionality is missing.  No'
+    'workaround is known.',
+    'serious' : 'The product, component or concept is not working'
+    'properly or significant functionality is missing.  Problems that'
+    'would otherwise be considered ''critical'' are rated ''serious'' when'
+    'a workaround is known.',
+    'non-critical' : 'The product, component or concept is working'
+    'in general, but lacks features, has irritating behavior, does'
+    'something wrong, or doesn''t match its documentation.',
+    }
+
+# Rank order of severities, for sorting
+SEVLIST = ['critical', 'grave', 'serious', 'important', 'does-not-build',
+           'normal', 'non-critical', 'minor', 'wishlist', 'fixed']
+
+def convert_severity(severity, type='debbugs'):
+    "Convert severity names if needed."
+    if type == 'debbugs':
+        return {'non-critical' : 'normal'}.get(severity, severity)
+    elif type == 'gnats':
+        return {'grave' : 'critical',
+                'important' : 'serious',
+                'normal' : 'non-critical',
+                'minor' : 'non-critical',
+                'wishlist' : 'non-critical'}.get(severity, severity)
+    else:
+        return severity
+
+# These packages are virtual in Fink; we don't look them up...
+debother = {
+    'base' : 'General bugs in the base system',
+    'bugs.finkproject.org' : 'The bug tracking system, @bugs.finkproject.org',
+    'fink-policy' : 'Proposed changes in the Fink policy documentation',
+    'ftp.finkproject.org' : 'Problems with the FTP site',
+    'general' : 'General problems (e.g., that many manpages are mode 755)',
+    'install' : 'Problems with the fink installer.',
+    'installation' : 'General installation problems not covered otherwise.',
+    'listarchives' :  'Problems with the WWW mailing list archives',
+    'lists.finkproject.org' : 'The mailing lists, fink-*@lists.finkproject.org.',
+    'mirrors' : 'Problems with Fink archive mirrors.',
+    'press' : 'Press release issues',
+    'project' : 'Problems related to Project administration',
+    'fink.sourceforge.net' : 'Problems with the WWW site (including other *.finkproject.org sites)'
+    }
+
+progenyother = {
+    'fink-general' : 'Any non-package-specific bug',
+    }
+
+def handle_wnpp(package, bts, ui, online=True, http_proxy=None):
+    desc = body = ''
+    headers = []
+    query = True
+    
+    tag = ui.menu('What sort of request is this?  (If none of these '
+                  'things mean anything to you, or you are trying to report '
+                  'a bug in an existing package, please press Enter to '
+                  'exit reportbug.)', {
+        'O' :
+        "The package has been `Orphaned'. It needs a new maintainer as soon as possible.",
+        'RFA' :
+        "This is a `Request for Adoption'. Due to lack of time, resources, interest or something similar, the current maintainer is asking for someone else to maintain this package. He/she will maintain it in the meantime, but perhaps not in the best possible way. In short: the package needs a new maintainer.",
+        'RFH' :
+        "This is a `Request For Help'. The current maintainer wants to continue to maintain this package, but he/she needs some help to do this, because his/her time is limited or the package is quite big and needs several maintainers.",
+        'ITP' :
+        "This is an `Intent To Package'. Please submit a package description along with copyright and URL in such a report.",
+        'RFP' :
+        "This is a `Request For Package'. You have found an interesting piece of software and would like someone else to maintain it for Fink. Please submit a package description along with copyright and URL in such a report.",
+        }, 'Choose the request type: ', empty_ok=True)
+    if not tag:
+        ui.long_message('To report a bug in a package, use the name of the package, not wnpp.\n')
+        raise SystemExit
+
+    if tag in ('RFP', 'ITP'):
+        prompt = 'Please enter the proposed package name: '
+    else:
+        prompt = 'Please enter the name of the package: '
+    package = ui.get_string(prompt)
+    if not package: return
+
+    ui.ewrite('Checking status database...\n')
+    info = reportbug.get_package_status(package)
+    available = info[1]
+
+    severity = 'normal'
+    if tag in ('ITP', 'RFP'):
+        if available and (not online or checkversions.check_available(
+            package, '0', http_proxy=http_proxy)):
+            if not ui.yes_no(
+                ('A package called %s already appears to exist (at least on '
+                 'your system); continue?' % package),
+                'Ignore this problem and continue.  If you have '
+                'already locally created a package with this name, this '
+                'warning message may have been produced in error.',
+                'Exit without filing a report.', default=0):
+                sys.exit(1)
+            
+        severity = 'wishlist'
+
+        desc = ui.get_string(
+            'Please briefly describe this package; this should be an '
+            'appropriate short description for the eventual package: ')
+        if not desc:
+            return
+
+        if tag == 'ITP':
+            headers.append('X-Debbugs-CC: fink-devel@lists.sourceforge.net')
+            ui.ewrite('Your report will be carbon-copied to fink-devel, '
+                      'per Fink policy.\n')
+
+        body = """* Package name    : %s
+  Version         : x.y.z
+  Upstream Author : Name <somebody@example.org>
+* URL             : http://www.example.org/
+* License         : (GPL, LGPL, BSD, MIT/X, etc.)
+  Description     : %s
+
+(Include the long description here.)
+""" % (package, desc)
+    elif tag in ('O', 'RFA', 'RFH'):
+        severity = 'normal'
+        query = False
+        if not available:
+            info = reportbug.get_source_package(package)
+            if info:
+                info = reportbug.get_package_status(info[0][0])
+
+        if not info:
+            cont = ui.select_options(
+                "This package doesn't appear to exist; continue?",
+                'yN', {'y': 'Ignore this problem and continue.',
+                       'n': 'Exit without filing a report.' })
+            if cont == 'n':
+                sys.exit(1)
+            desc = fulldesc = ''
+        else:
+            desc = info[10] or ''
+            package = info[11] or package
+            fulldesc = info[12]
+
+        if tag == 'O' and info and info[9] in \
+               ('required', 'important', 'standard'):
+            severity = 'important'
+
+        if tag == 'RFH':
+            headers.append('X-Debbugs-CC: fink-devel@lists.sourceforge.net')
+            ui.ewrite('Your request will be carbon-copied to fink-devel, '
+                      'per Fink policy.\n')
+
+        if fulldesc:
+            orphstr = 'intend to orphan'
+            if tag == 'RFA':
+                orphstr = 'request an adopter for'
+            elif tag == 'RFH':
+                orphstr = 'request assistance with maintaining'
+                
+            body = ('I %s the %s package.\n\n'
+                    'The package description is:\n') % (orphstr, package)
+            body = body + fulldesc + '\n'
+        
+    if desc:
+        subject = '%s: %s -- %s' % (tag, package, desc)
+    else:
+        subject = '%s: %s' % (tag, package)
+
+    return (subject, severity, headers, body, query)
+
+# Supported servers
+# Theoretically support for GNATS and Jitterbug could be added here.
+
+SYSTEMS = { 'fink' :
+            { 'name' : 'Fink', 'email': '%s@bugs.finkproject.org',
+              'btsroot' : 'http://bugs.finkproject.org'
+              'query-dpkg' : 1, 'type' : 'debbugs',
+              'otherpkgs' : debother, 
+              #'specials' : { 'wnpp': handle_wnpp },
+              # Dependency packages
+              'cgiroot' : 'http://bugs.finkproject.org/cgi-bin/',
+              'mirrors' : {} },
+            'kde' :
+            { 'name' : 'KDE Project', 'email': '%s@bugs.kde.org',
+              'btsroot': 'http://bugs.kde.org/', 'type' : 'debbugs',
+              'query-dpkg' : 1, 'otherpkgs' : {}, 'cgiroot' : None,
+              'mirrors' : {} },
+            'mandrake' :
+            { 'name' : 'Linux-Mandrake', 'email': '%s@bugs.linux-mandrake.com',
+              'btsroot': None,
+              'type' : 'debbugs', 'query-dpkg' : 0, 'otherpkgs' : {},
+              'cgiroot' : None, 'mirrors' : {} },
+            'gnome' :
+            { 'name' : 'GNOME Project', 'email': '%s@bugs.gnome.org',
+              'type' : 'mailto', 'mirrors' : {}, 'cgiroot' : None,
+              'query-dpkg' : 0, 'otherpkgs' : {} },
+            'ximian' :
+            { 'name' : 'Ximian', 'email': '%s@bugs.ximian.com',
+              'type' : 'mailto', 'mirrors' : {}, 'cgiroot' : None,
+              'query-dpkg' : 1, 'otherpkgs' : {} },
+            'progeny' :
+            { 'name' : 'Progeny', 'email' : 'bugs@progeny.com',
+              'type' : 'gnats', 'mirrors' : {}, 'cgiroot' : None,
+              'query-dpkg' : 1, 'otherpkgs' : progenyother },
+            'ubuntu' :
+            { 'name' : 'Ubuntu',
+              'email' : 'ubuntu-users@lists.ubuntu.com',
+              'type' : 'mailto', 'mirrors' : {}, 'cgiroot' : None,
+              'query-dpkg' : 1, 'otherpkgs' : {} },
+            'guug' :
+            { 'name' : 'GUUG (German Unix User Group)',
+              'email' : '%s@bugs.guug.de',
+              'type' : 'debbugs', 'mirrors' : {}, 'cgiroot' : None,
+              'query-dpkg' : 0, 'otherpkgs' : {} },
+            }
+
+SYSTEMS['helixcode'] = SYSTEMS['ximian']
+
+CLASSES = {
+    'sw-bug' : 'The problem is a bug in the software or code.  For'
+    'example, a crash would be a sw-bug.',
+    'doc-bug' : 'The problem is in the documentation.  For example,'
+    'an error in a man page would be a doc-bug.',
+    'change-request' : 'You are requesting a new feature or a change'
+    'in the behavior of software, or are making a suggestion.  For'
+    'example, if you wanted reportbug to be able to get your local'
+    'weather forecast, as well as report bugs, that would be a'
+    'change-request.',
+    }
+
+CLASSLIST = ['sw-bug', 'doc-bug', 'change-request']
+
+CRITICAL_TAGS = {
+    'security' : 'This problem is a security vulnerability in Fink.',
+}
+
+TAGS = {
+    'patch' : 'You are including a patch to fix this problem.',
+##    'upstream' : 'You believe this problem is not specific to Debian.',
+##    'potato' : 'This bug only applies to the potato release (Debian 2.2).',
+##    'woody' : 'This bug only applies to the woody release (Debian 3.0).',
+##    'sarge' : 'This bug only applies to the sarge release (Debian 3.1).',
+##    'sid' : 'This bug only applies to the unstable branch of Debian.',
+    'experimental' : 'This bug only applies to a package in the experimental '
+    'branch of Fink.',
+    "l10n" : "This bug reports a localization/internationalization issue.",
+##    'done' : 'No more tags.',
+    }
+
+EXTRA_TAGS = ['stable', 'unstable', 'upstream']
+
+TAGLIST = ['l10n', 'patch', 'experimental']
+CRITICAL_TAGLIST = ['security']
+
+def yn_bool(setting):
+    if setting:
+        if str(setting) == 'no':
+            return 'no'
+        return 'yes'
+    else:
+        return 'no'
+
+def cgi_report_url(system, number, archived=False, mbox=False):
+    root = SYSTEMS[system].get('cgiroot')
+    if root:
+        return '%sbugreport.cgi?bug=%d&archive=%s&mbox=%s' % (
+            root, number, archived, yn_bool(mbox))
+    return None
+
+def cgi_package_url(system, package, archived=False, source=False,
+                    repeatmerged=True):
+    root = SYSTEMS[system].get('cgiroot')
+    if not root: return None
+    
+    package = urllib.quote_plus(package.lower())
+    qtype = "pkg"
+    if source:
+        qtype = "src"
+        
+    repeat = yn_bool(repeatmerged)
+    archive = yn_bool(archived)
+
+    return '%spkgreport.cgi?%s=%s&archive=%s&repeatmerged=%s&show_list_header=no&show_list_footer=no' % (root, qtype, package, archive, repeat)
+
+def package_url(system, package, mirrors=None, source=False,
+                repeatmerged=True):
+    btsroot=get_btsroot(system, mirrors)
+    package = urllib.quote_plus(package.lower())
+    return btsroot+('db/pa/l%s.html' % package) 
+
+def report_url(system, number, mirrors=None):
+    number = str(number)
+    if len(number) < 2: return None
+    btsroot=get_btsroot(system, mirrors)
+    return btsroot+('db/%s/%s.html' % (number[:2], number))
+
+def get_package_url(system, package, mirrors=None, source=False,
+                    archived=False, repeatmerged=True):
+    return (cgi_package_url(system, package, archived, source, repeatmerged) or
+            package_url(system, package, mirrors, source, repeatmerged))
+
+def get_report_url(system, number, mirrors=None, archived=False, mbox=False):
+    return (cgi_report_url(system, number, archived, mbox) or
+            report_url(system, number, mirrors))
+
+def parse_bts_url(url):
+    bits = url.split(':', 1)
+    if len(bits) != 2: return None
+
+    type, loc = bits
+    if loc.startswith('//'): loc = loc[2:]
+    while loc.endswith('/'): loc = loc[:-1]
+    return type, loc
+
+# Dynamically add any additional systems found
+for origin in glob.glob('@FINKPREFIX@/etc/dpkg/origins/*'):
+    try:
+        fp = file(origin)
+        system = os.path.basename(origin)
+        SYSTEMS[system] = SYSTEMS.get(system, { 'otherpkgs' : {},
+                                                'query-dpkg' : 1,
+                                                'mirrors' : {},
+                                                'cgiroot' : None } )
+        for line in fp:
+            try:
+                (header, content) = line.split(': ', 1)
+                header = header.lower()
+                content = content.strip()
+                if header == 'vendor':
+                    SYSTEMS[system]['name'] = content
+                elif header == 'bugs':
+                    (type, root) = parse_bts_url(content)
+                    SYSTEMS[system]['type'] = type
+                    if type == 'debbugs':
+                        SYSTEMS[system]['btsroot'] = 'http://'+root+'/'
+                        SYSTEMS[system]['email'] = '%s@'+root
+                    elif type == 'mailto':
+                        SYSTEMS[system]['btsroot'] = None
+                        SYSTEMS[system]['email'] = root
+                    else:
+                        # We don't know what to do...
+                        pass
+            except ValueError:
+                pass
+        fp.close()
+    except IOError:
+        pass
+
+# For summary pages, we want to keep:
+#
+# - Contents of <title>...</title>
+# - Contents of <h2>...</h2>
+# - Contents of each <li>
+#
+# For individual bugs, we want to keep:
+# - Contents of <title>...</title>
+# - Contents of every <pre>...</pre> after a <h2>....</h2> tag.
+
+class BTSParser(sgmllib.SGMLParser):
+    def __init__(self, mode='summary', cgi=False, followups=False):
+        sgmllib.SGMLParser.__init__(self)
+        self.hierarchy = []
+        self.lidata = None
+        self.lidatalist = None
+        self.savedata = None
+        self.title = None
+        self.bugcount = 0
+        self.mode = mode
+        self.cgi = cgi
+        self.followups = followups
+        if followups:
+            self.preblock = []
+        else:
+            self.preblock = ''
+        self.endh2 = False
+
+    # --- Formatter interface, taking care of 'savedata' mode;
+    # shouldn't need to be overridden
+
+    def handle_data(self, data):
+        if self.savedata is not None:
+            self.savedata = self.savedata + data
+
+    # --- Hooks to save data; shouldn't need to be overridden
+
+    def save_bgn(self):
+        self.savedata = ''
+
+    def save_end(self, mode=False):
+        data = self.savedata
+        self.savedata = None
+        if not mode: data = ' '.join(data.split())
+        return data
+
+    def check_li(self):
+        if self.mode == 'summary':
+            data = self.save_end()
+            if data:
+                self.lidatalist.append(data)
+                self.bugcount = self.bugcount + 1
+
+            self.lidata = False
+
+    def start_h1(self, attrs):
+        self.save_bgn()
+        self.oldmode = self.mode
+        self.mode = 'title'
+
+    def end_h1(self):
+        self.title = self.save_end()
+        self.mode = self.oldmode
+
+    def start_h2(self, attrs):
+        if self.lidata: self.check_li()
+
+        self.save_bgn()
+
+    def end_h2(self):
+        if self.mode == 'summary':
+            self.hierarchy.append( (self.save_end(), []) )
+        self.endh2 = True # We are at the end of a title, flag <pre>
+
+    def do_br(self, attrs):
+        if self.lidata and self.mode == 'summary': self.check_li()
+
+        if self.mode == 'title':
+            self.savedata = ""
+        
+    def do_li(self, attrs):
+        if self.mode == 'summary':
+            if self.lidata: self.check_li()
+
+            self.lidata = True
+            if self.hierarchy:
+                self.lidatalist = self.hierarchy[-1][1]
+            else:
+                self.lidatalist = []
+            self.save_bgn()
+
+    def start_pre(self, attrs):
+        "Save <pre> when we follow a </h2>"
+        if self.followups:
+            if not self.endh2: return
+        else:
+            if self.cgi and self.preblock: return
+        
+        self.save_bgn()
+
+    def end_pre(self):
+        if self.followups:
+            if not self.endh2: return
+            self.endh2 = False	# Done with a report, reset </h2>.
+            stuff = self.save_end(1)
+            if not self.cgi:
+                self.preblock.insert(0, stuff)
+            else:
+                self.preblock.append(stuff)
+        elif not (self.preblock and self.cgi):
+            self.preblock = self.save_end(1)
+
+def parse_html_report(number, url, http_proxy, followups=False, cgi=True):
+    page = open_url(url, http_proxy)
+    if not page:
+        return None
+
+    content = page.read()
+    parser = BTSParser(cgi=cgi, followups=followups)
+    parser.feed(content)
+    parser.close()
+
+    items = parser.preblock
+    title = "#%d: %s" % (number, parser.title)
+
+    if not followups:
+        items = [items]
+
+    output = []
+    for stuff in items:
+        parts = stuff.split('\n\n')
+        match = re.search('^Date: (.*)$', parts[0], re.M | re.I)
+        date_submitted = ''
+        if match:
+            date_submitted = 'Date: %s\n' % match.group(1)
+
+        stuff = ('\n\n'.join(parts[1:])).rstrip()
+        if not stuff:
+            continue
+
+        item = date_submitted+stuff+os.linesep
+        output.append(item)
+
+    if not output:
+        return None
+
+    return (title, output)
+
+def get_cgi_reports(package, system='fink', http_proxy='', archived=False,
+                    source=False):
+    page = open_url(cgi_package_url(system, package, archived, source),
+                    http_proxy)
+    if not page:
+        return (0, None, None)
+
+    content = page.read()
+    if 'Maintainer' not in content:
+        return (0, None, None)
+    
+    parser = BTSParser(cgi=True)
+    parser.feed(content)
+    parser.close()
+
+    return parser.bugcount, parser.title, parser.hierarchy
+
+def get_cgi_report(number, system='fink', http_proxy='', archived=False,
+                   followups=False):
+    number = int(number)
+
+    url = cgi_report_url(system, number, archived='no')
+    return parse_html_report(number, url, http_proxy, followups, cgi=True)
+
+def get_btsroot(system, mirrors=None):
+    if mirrors:
+        alternates = SYSTEMS[system]['mirrors']
+        for mirror in mirrors:
+            if alternates.has_key(mirror):
+                return alternates[mirror]
+    return SYSTEMS[system]['btsroot']
+
+def get_reports(package, system='fink', mirrors=None,
+                http_proxy='', archived=False, source=False):
+    if isinstance(package, StringTypes):
+        if SYSTEMS[system]['cgiroot']:
+            result = get_cgi_reports(package, system, http_proxy, archived,
+                                     source)
+            if result: return result
+
+        url = package_url(system, package, mirrors, source)
+        page = open_url(url, http_proxy)
+        if not page:
+            return (0, None, None)
+
+        content = page.read()
+        if 'Maintainer' not in content:
+            return (0, None, None)
+
+        parser = BTSParser()
+        parser.feed(content)
+        parser.close()
+
+        return parser.bugcount, parser.title, parser.hierarchy
+
+    # A list of bug numbers
+    this_hierarchy = []
+    package = [int(x) for x in package]
+    package.sort()
+    for bug in package:
+        result = get_report(bug, system, mirrors, http_proxy, archived)
+        if result:
+            title, body = result
+            this_hierarchy.append(title)
+            #print title
+    
+    title = "Multiple bug reports"
+    bugcount = len(this_hierarchy)
+    hierarchy = [('Reports', this_hierarchy)]
+
+    return bugcount, title, hierarchy
+
+def get_report(number, system='fink', mirrors=None,
+               http_proxy='', archived=False, followups=False):
+    number = int(number)
+    if SYSTEMS[system]['cgiroot']:
+        result = get_cgi_report(number, system, http_proxy, archived,followups)
+        if result: return result
+        
+    url = report_url(system, number, mirrors)
+    if not url: return None
+
+    return parse_html_report(number, url, http_proxy, followups, cgi=False)
diff -ruN reportbug/querybts reportbug.new/querybts
--- reportbug/querybts	Mon Mar 15 03:59:39 2004
+++ reportbug.new/querybts	Sat Oct  9 23:35:38 2004
@@ -1,4 +1,4 @@
-#!/usr/bin/python2.3
+#!@FINKPREFIX@/bin/python2.3
 # -*- python -*-
 # querybts - Examine the state of a debbugs server
 #   Written by Chris Lawrence <lawrencc@debian.org>
@@ -25,7 +25,7 @@
 # $Id$
 
 import sys, os
-sys.path = [os.curdir, '/usr/share/reportbug'] + sys.path
+sys.path = [os.curdir, '@FINKPREFIX@/share/reportbug'] + sys.path
 
 import reportbug, debianbts, commands, getopt, re, mailcap, urlutils
 
@@ -53,7 +53,7 @@
          )
 
 def main():
-    system = 'debian'
+    system = 'fink'
     archived = False
     http_proxy = interface = ''
     use_browser = source = False
diff -ruN reportbug/reportbug reportbug.new/reportbug
--- reportbug/reportbug	Fri Oct  1 04:22:17 2004
+++ reportbug.new/reportbug	Mon Oct 11 22:03:14 2004
@@ -1,4 +1,4 @@
-#!/usr/bin/python2.3 -S
+#!@FINKPREFIX@/bin/python2.3 -S
 # -*- python -*-
 # reportbug - Report a bug in the Debian distribution.
 #   Written by Chris Lawrence <lawrencc@debian.org>
@@ -26,11 +26,11 @@
 
 import site
 
-DEBUGGER = 'lawrencc@debian.org'
-DEFAULT_BTS = 'debian'
+DEBUGGER = 'beren12@bugs.finkproject.org'
+DEFAULT_BTS = 'fink'
 
 import sys, os
-sys.path = [os.curdir, '/usr/share/reportbug'] + sys.path
+sys.path = [os.curdir, '@FINKPREFIX@/share/reportbug'] + sys.path
 
 import optparse, re, os, pwd, time, locale, commands, checkversions
 import rfc822, smtplib, reportbug, cStringIO, socket, debianbts, checkbuildd
@@ -94,7 +94,7 @@
 def spawn_editor(message, filename, default_editor=None):
     if not default_editor:
         editor = (os.environ.get('VISUAL') or os.environ.get('EDITOR') or
-                  '/usr/bin/sensible-editor')
+                  '@FINKPREFIX@/bin/sensible-editor')
     else:
         editor = default_editor
 
@@ -320,7 +320,7 @@
                    "categories:", others, "Enter a package: ", any_ok=True,
                    default='')
 
-def get_package_name(bts='debian', mode=MODE_EXPERT):
+def get_package_name(bts='fink', mode=MODE_EXPERT):
     others = debianbts.SYSTEMS[bts]['otherpkgs']
     prompt = "Please enter the name of the package in which you have found "\
              "a problem"
@@ -353,14 +353,14 @@
                 return get_package_name(bts, mode)
 
     if mode < MODE_EXPERT:
-        if package in ('bugs.debian.org', 'debbugs'):
+        if package in ('bugs.finkproject.org', 'debbugs'):
             if ui.yes_no('Are you reporting a problem with this program '
                          '(reportbug)', 'Yes, this is actually a bug in '
                          'reportbug.', 'No, this is really a problem in the '
                          'bug tracking system itself.'):
                 package = 'reportbug'
 
-        if package in ('general', 'project', 'debian-general', 'base'):
+        if package in ('general', 'project', 'fink-general', 'base'):
             if not ui.yes_no(
                 "Are you sure this bug doesn't apply to a specific package?",
                 'Yes, this bug is truly general.',
@@ -485,16 +485,16 @@
         print >> fp, '# Disable fallback mode by commenting out the following:'
         print >> fp, 'no-cc'
         print >> fp, 'header "X-Debbugs-CC: %s"' % email_addy
-        print >> fp, 'smtphost master.debian.org'
+        print >> fp, 'smtphost bugs.finkproject.org'
     else:
         print >> fp, '# If nothing else works, remove the # at the beginning'
         print >> fp, '# of the following three lines:'
         print >> fp, '#no-cc'
         print >> fp, '#header "X-Debbugs-CC: %s"' % email_addy
-        print >> fp, '#smtphost master.debian.org'
+        print >> fp, '#smtphost bugs.finkproject.org'
         
     print >> fp, '# You can add other settings after this line.  See'
-    print >> fp, '# /etc/reportbug.conf for a full listing of options.'
+    print >> fp, '# @FINKPREFIX@/etc/reportbug.conf for a full listing of options.'
     fp.close()
     ui.long_message('Default preferences file written.  To reconfigure, '
                     're-run reportbug with the "--configure" option.\n')
@@ -752,7 +752,7 @@
     severity = options.severity
     smtphost = options.smtphost
     subject = options.subject
-    sysinfo = debianbts.SYSTEMS[options.bts or 'debian']
+    sysinfo = debianbts.SYSTEMS[options.bts or 'fink']
     rtype = options.type or sysinfo['type']
     attachments = options.attachments
     pgp_addr = options.keyid
@@ -869,7 +869,7 @@
     foundfile = None
     package = None
     if not len(args) and not options.searchfor and not notatty:
-        package = get_package_name(options.bts or 'debian', mode)
+        package = get_package_name(options.bts or 'fink', mode)
     elif len(args) > 1:
         ewrite("Please report one bug at a time.\n")
         ewrite("[Did you forget to put all switches before the "
@@ -1060,7 +1060,7 @@
          origin, vendor, reportinfo, priority, desc, src_name,
          fulldesc, state) = status
 
-    buginfo = '/usr/share/bug/' + package
+    buginfo = '@FINKPREFIX@/share/bug/' + package
     bugexec = submitas = submitto = presubj = reportwith = None
     if os.path.isfile(buginfo) and os.access(buginfo, os.X_OK):
         bugexec = buginfo
@@ -1073,11 +1073,11 @@
 
         if os.path.isfile(buginfo+'/control'):
             submitas, submitto, reportwith = reportbug.parse_bug_control_file(buginfo+'/control')
-    elif os.path.isfile('/usr/share/bug/default/'+package) \
-         and os.access('/usr/share/bug/default/'+package, os.X_OK):
-        bugexec = '/usr/share/bug/default/'+package
-    elif os.path.isdir('/usr/share/bug/default/'+package):
-        buginfo = '/usr/share/bug/default/'+package
+    elif os.path.isfile('@FINKPREFIX@/share/bug/default/'+package) \
+         and os.access('@FINKPREFIX@/share/bug/default/'+package, os.X_OK):
+        bugexec = '@FINKPREFIX@/share/bug/default/'+package
+    elif os.path.isdir('@FINKPREFIX@/share/bug/default/'+package):
+        buginfo = '@FINKPREFIX@/share/bug/default/'+package
         if os.path.isfile(buginfo+'/script') and os.access(buginfo+'/script',
                                                            os.X_OK):
             bugexec = buginfo+'/script'
@@ -1100,10 +1100,10 @@
         # Remove current package from report-with list
         reportwith = [x for x in reportwith if x != package]
 
-    if (pkgavail and options.verify and os.path.exists('/usr/bin/debsums')
+    if (pkgavail and options.verify and os.path.exists('@FINKPREFIX@/bin/debsums')
         and not (notatty or options.kudos) and state == 'installed'):
         ewrite('Verifying package integrity...\n')
-        rc, output = commands.getstatusoutput('/usr/bin/debsums -s'+
+        rc, output = commands.getstatusoutput('@FINKPREFIX@/bin/debsums -s'+
                                               commands.mkarg(package))
         if rc:
             if not ui.yes_no(
@@ -1123,15 +1123,15 @@
                                        'package this report applies to '
                                        '(blank OK)', force_prompt=True)
     elif (check_available and not (options.kudos or notatty or options.offline)
-          and (not options.bts or (options.bts=='debian'))):
-        ewrite('Checking for newer versions at packages.debian.org...\n')
+          and (not options.bts or (options.bts=='fink'))):
+        ewrite('Checking for newer versions at packages.finkproject.org...\n')
         arch = reportbug.get_arch()
         (avail, toonew) = checkversions.check_available(
             package, pkgversion, check_incoming=(mode > MODE_STANDARD),
             http_proxy=options.http_proxy, arch=arch)
         if toonew:
             if not ui.yes_no(
-                '\nYour version of %s (%s) is newer than that in Debian!\n'
+                '\nYour version of %s (%s) is newer than that in Fink!\n'
                 'Do you still want to file a report' % (package, pkgversion),
                 'Ignore this problem and continue.  This may be '
                 'appropriate if you know this bug is present in older '
@@ -1247,13 +1247,13 @@
         lmaintainer = maintainer.decode('UTF-8', 'ignore').encode(charset,
                                                                   'ignore')
         ewrite("Maintainer for %s is '%s'.\n", package, lmaintainer)
-        if 'qa.debian.org' in maintainer:
+        if 'fink-devel' in maintainer:
             ui.long_message('''\
-This package is currently "orphaned"; if you care a current or prospective
-Debian developer, you might consider adopting it.  Please be aware that your
+This package is currently "orphaned"; if you are a current or prospective
+Fink developer, you might consider adopting it.  Please be aware that your
 report may not be resolved for a while, and that packages that have been
 orphaned for a long period of time are often removed from the archive.\n''')
-            ui.ewrite('\nFor more details, please see: http://www.debian.org/devel/wnpp/\n')
+            ui.ewrite('\nFor more details, please see: http://fink.sourceforge.net/\n')
 
     if options.kudos:
         if maintainer:
@@ -1298,7 +1298,7 @@
                     confinfo[f] = 'changed [not included]'
                 break
             elif x == 'd':
-                PAGER = os.environ.get('PAGER', '/usr/bin/sensible-pager')
+                PAGER = os.environ.get('PAGER', '@FINKPREFIX@/bin/sensible-pager')
                 system(PAGER+' '+' '.join(changed))
             else:
                 break
@@ -1310,14 +1310,14 @@
         for f in files:
             conftext = conftext + '%s %s\n' % (f, confinfo[f])
 
-    if (options.debconf and os.path.exists('/usr/bin/debconf-show') and
+    if (options.debconf and os.path.exists('@FINKPREFIX@/bin/debconf-show') and
         not options.kudos and installed):
         showpkgs = package
         if reportwith:
             showpkgs += ' ' + ' '.join(reportwith)
         (status, output) = commands.getstatusoutput(
             'DEBCONF_SYSTEMRC=1 DEBCONF_NOWARNINGS=yes '
-            '/usr/bin/debconf-show %s' % showpkgs )
+            '@FINKPREFIX@/bin/debconf-show %s' % showpkgs )
         if status:
             conftext += '\n-- debconf-show failed\n'
         elif output:
@@ -1442,7 +1442,7 @@
         if pkgversion and not src_name:
             src_name = package
         if src_name and check_available and not notatty:
-            ewrite('Checking buildd.debian.org for past builds of %s...\n',
+            ewrite('Checking buildd.finkproject.org for past builds of %s...\n',
                    src_name)
             built = checkbuildd.check_built(src_name,
                                             http_proxy=options.http_proxy)
@@ -1463,7 +1463,7 @@
                 if ui.yes_no(
                     'Has this package successfully been built for this '
                     'architecture in the past (you can look this up at '
-                    'buildd.debian.org)',
+                    'buildd.finkproject.org)',
                     'Yes, this is a recently-introduced problem.',
                     'No, it has always been this way.'):
                     severity = 'serious'
@@ -1503,7 +1503,7 @@
         if os.path.exists('handle_bugscript'):
             handler = './handle_bugscript'
         else:
-            handler = '/usr/share/reportbug/handle_bugscript'
+            handler = '@FINKPREFIX@/share/reportbug/handle_bugscript'
 
         fh, filename = TempFile(prefix=tfprefix)
         fh.close()
@@ -1629,7 +1629,7 @@
     return
 
 if __name__ == '__main__':
-    sys.path.append('/usr/share/reportbug')
+    sys.path.append('@FINKPREFIX@/share/reportbug')
     try:
         main()
     except KeyboardInterrupt:
diff -ruN reportbug/reportbug.conf reportbug.new/reportbug.conf
--- reportbug/reportbug.conf	Fri Oct  1 03:32:12 2004
+++ reportbug.new/reportbug.conf	Sat Oct  9 23:40:50 2004
@@ -6,7 +6,7 @@
 # severity normal
 
 # BTS to use
-#bts debian
+bts fink
 # See 'reportbug --bts help' for a current list of supported BTSes
 
 # Submission address: default is 'submit'
@@ -68,7 +68,7 @@
 # Use TLS encryption.
 # smtptls
 
-# Use this to specify the path of your MTA; any SMTP server on Debian
+# Use this to specify the path of your MTA; any SMTP server on OS X
 # should be OK with the default.
 # mta /usr/sbin/sendmail
 
diff -ruN reportbug/reportbug.el reportbug.new/reportbug.el
--- reportbug/reportbug.el	Wed Feb  4 23:29:11 2004
+++ reportbug.new/reportbug.el	Sat Oct  9 23:41:23 2004
@@ -15,7 +15,7 @@
   (require 'gnus)
   (find-file (getenv "REPORTBUG"))
   (let ((subject (message-fetch-field "Subject"))
-        (toaddr (or (message-fetch-field "To") "submit@bugs.debian.org")))
+        (toaddr (or (message-fetch-field "To") "submit@bugs.finkproject.org")))
     (gnus-narrow-to-body)
     (let ((body (or (buffer-string) "")))
       (gnus-summary-mail-other-window)
diff -ruN reportbug/reportbug.py reportbug.new/reportbug.py
--- reportbug/reportbug.py	Thu Sep 30 01:26:14 2004
+++ reportbug.new/reportbug.py	Sat Oct  9 23:49:57 2004
@@ -33,7 +33,7 @@
 from string import ascii_letters, digits
 
 # Paths for dpkg
-DPKGLIB = '/var/lib/dpkg'
+DPKGLIB = '@FINKPREFIX@/var/lib/dpkg'
 AVAILDB = os.path.join(DPKGLIB, 'available')
 STATUSDB = os.path.join(DPKGLIB, 'status')
 
@@ -50,12 +50,12 @@
 MODES = {'novice': 'Offer simple prompts, bypassing technical questions.',
          'standard': 'Offer more extensive prompts, including asking about '
          'things that a moderately sophisticated user would be expected to '
-         'know about Debian.',
+         'know about Fink.',
          'advanced' : 'Like standard, but assumes you know a bit more about '
-         'Debian, including "incoming".',
+         'Fink, including "incoming".',
          'expert': 'Bypass most handholding measures and preliminary triage '
          'routines.  This mode should not be used by people unfamiliar with '
-         'Debian\'s policies and operating procedures.'}
+         'Fink\'s policies and operating procedures.'}
 MODELIST = ['novice', 'standard', 'advanced', 'expert']
 for mode in MODELIST:
     exec 'MODE_%s=%d' % (mode.upper(), MODELIST.index(mode))
@@ -87,8 +87,8 @@
     except:
         return 'Invalid date: '+`timeval`
 
-fhs_directories = ['/', '/usr', '/usr/share', '/var', '/usr/X11R6',
-                   '/usr/man', '/usr/doc', '/usr/bin']
+fhs_directories = ['@FINKPREFIX@', '@FINKPREFIX@/share', '@FINKPREFIX@/var', '/usr/X11R6',
+                   '@FINKPREFIX@/man', '@FINKPREFIX@/share/doc', '@FINKPREFIX@/bin']
 
 def realpath(filename):
     filename = os.path.abspath(filename)
@@ -108,8 +108,7 @@
 
     return filename
 
-pathdirs = ['/usr/sbin', '/usr/bin', '/sbin', '/bin', '/usr/X11R6/bin',
-            '/usr/games']
+pathdirs = ['@FINKPREFIX@/sbin', '@FINKPREFIX@/bin', '@FINKPREFIX@/sbin', '@FINKPREFIX@/bin', '/usr/X11R6/bin' ]
 
 def search_path_for(filename):
     dir, file = os.path.split(filename)
@@ -168,7 +167,7 @@
     return query_dpkg_for(newfilename or filename)
 
 def find_rewritten(username):
-    for filename in ['/etc/email-addresses']:
+    for filename in ['@FINKPREFIX@/etc/email-addresses']:
         if os.path.exists(filename):
             try:
                 fp = file(filename)
@@ -692,7 +691,7 @@
         return token
 
 USERFILE = os.path.expanduser('~/.reportbugrc')
-FILES = ('/etc/reportbug.conf', USERFILE)
+FILES = ('@FINKPREFIX@/etc/reportbug.conf', USERFILE)
 
 CONFIG_ARGS = (
     'sendto', 'severity', 'mua', 'mta', 'email', 'realname', 'bts', 'verify',
@@ -706,7 +705,7 @@
     'mutt' : 'mutt -H',
     'af' : 'af -EH < ',
     'mh' : '/usr/bin/mh/comp -use -file',
-    'gnus' : 'REPORTBUG=%s emacs -l /usr/share/reportbug/reportbug.el -f tfheen-reportbug-insert-template',
+    'gnus' : 'REPORTBUG=%s emacs -l @FINKPREFIX@/share/reportbug/reportbug.el -f tfheen-reportbug-insert-template',
     }
 MUA['nmh'] = MUA['mh']
 
diff -ruN reportbug/reportbug_submit.py reportbug.new/reportbug_submit.py
--- reportbug/reportbug_submit.py	Sun Sep 19 04:27:16 2004
+++ reportbug.new/reportbug_submit.py	Mon Oct 11 21:57:25 2004
@@ -30,7 +30,7 @@
 from reportbug import VERSION, VERSION_NUMBER
 
 import os
-sys.path = [os.curdir, '/usr/share/reportbug'] + sys.path
+sys.path = [os.curdir, '@FINKPREFIX@/share/reportbug'] + sys.path
 
 import re
 import commands
@@ -421,7 +421,7 @@
     'o'
 
 if __name__ == '__main__':
-    sys.path.append('/usr/share/reportbug')
+    sys.path.append('@FINKPREFIX@/share/reportbug')
     try:
         main()
     except KeyboardInterrupt:
diff -ruN reportbug/reportbug_ui_gnome.py reportbug.new/reportbug_ui_gnome.py
--- reportbug/reportbug_ui_gnome.py	Wed Feb  4 23:29:10 2004
+++ reportbug.new/reportbug_ui_gnome.py	Mon Oct 11 21:58:50 2004
@@ -19,7 +19,7 @@
 ##  SOFTWARE.
 
 import sys
-sys.path.append('/usr/lib/python2.1/site-packages')
+sys.path.append('@FINKPREFIX/lib/python2.3/site-packages')
 
 from reportbug_exceptions import *
 import reportbug, gnome
@@ -42,7 +42,7 @@
 
 class ReportBugApp(GnomeApp):
 	def __init__(self):
-		GnomeApp.__init__(self, "Debian Bug Report Druid", "Debian Bug Report Druid")
+		GnomeApp.__init__(self, "Fink Bug Report Druid", "Fink Bug Report Druid")
 		self.connect("destroy", callback_destroy)
 		self.setup()
 
@@ -52,7 +52,7 @@
 		logo_bgcolor = GdkColor(0x02, 0x66, 0x9A)
 
 		self.my_druid = GnomeDruid()
-		self.my_screen = GnomeDruidPageStandard("Debian Bug Report Druid", logo)
+		self.my_screen = GnomeDruidPageStandard("Fink Bug Report Druid", logo)
 		self.my_screen.connect("next", callback_next)
 		self.my_screen.set_bg_color(logo_bgcolor)
 		self.my_screen.set_logo_bg_color(logo_bgcolor)
diff -ruN reportbug/script reportbug.new/script
--- reportbug/script	Wed Feb  4 23:29:11 2004
+++ reportbug.new/script	Mon Oct 11 22:03:38 2004
@@ -1,4 +1,4 @@
-#!/usr/bin/python2.3
+#!@FINKPREFIX@/bin/python2.3
 # -*- python -*-
 
 import os
