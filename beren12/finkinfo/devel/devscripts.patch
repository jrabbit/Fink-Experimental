diff -ruN devscripts/Makefile devscripts.new/Makefile
--- devscripts/Makefile	Mon Jan 10 17:12:47 2005
+++ devscripts.new/Makefile	Tue Jan 18 22:14:56 2005
@@ -8,8 +8,6 @@
 	debrsign.sh debsign.sh dpkg-genbuilddeps.sh mergechanges.sh \
 	tagpending.sh uscan.sh uupdate.sh wnpp-alert.sh
 
-LIBS = libvfork.so.0
-
 PERL_MODULES = Devscripts
 
 CWRAPPERS = debpkg-wrapper
@@ -21,13 +19,13 @@
 GEN_MAN1S = bts.1
 MAN5S = devscripts.conf.5
 
-BINDIR = /usr/bin
-LIBDIR = /usr/lib/devscripts
-EXAMPLES_DIR = /usr/share/devscripts
-PERLMOD_DIR = /usr/share/devscripts
-BIN_LIBDIR = /usr/lib/devscripts
-MAN1DIR = /usr/share/man/man1
-MAN5DIR = /usr/share/man/man5
+BINDIR = @FINKPREFIX@/bin
+LIBDIR = @FINKPREFIX@/lib/devscripts
+EXAMPLES_DIR = @FINKPREFIX@/share/devscripts
+PERLMOD_DIR = @FINKPREFIX@/share/devscripts
+BIN_LIBDIR = @FINKPREFIX@/lib/devscripts
+MAN1DIR = @FINKPREFIX@/share/man/man1
+MAN5DIR = @FINKPREFIX@/share/man/man5
 
 all: $(SCRIPTS) $(GEN_MAN1S) $(EXAMPLES) $(LIBS) $(CWRAPPERS)
 
@@ -56,12 +54,6 @@
 bts.1: bts.pl
 	pod2man --center=" " --release="Debian Utilities" $< > $@
 
-libvfork.o: libvfork.c
-	$(CC) -fPIC -D_REENTRANT $(CFLAGS) -c $<
-
-libvfork.so.0: libvfork.o
-	$(CC) -shared $< -ldl -lc -Wl,-soname -Wl,libvfork.so.0 -o $@
-
 clean:
 	rm -f version conf.default $(SCRIPTS) $(GEN_MAN1S) $(SCRIPT_LIBS) \
 	    $(CWRAPPERS) libvfork.o libvfork.so.0
@@ -72,10 +64,8 @@
 	cd $(DESTDIR)$(BINDIR) && ln -s debchange dch
 	cd $(DESTDIR)$(BINDIR) && ln -s debi debc
 	cd $(DESTDIR)$(BINDIR) && ln -s cvs-debi cvs-debc
-	mkdir -p $(DESTDIR)$(LIBDIR)
-	cp $(LIBS) $(DESTDIR)$(LIBDIR)
 	mkdir -p $(DESTDIR)$(PERLMOD_DIR)
-	cp -a $(PERL_MODULES) $(DESTDIR)$(PERLMOD_DIR)
+	cp -R $(PERL_MODULES) $(DESTDIR)$(PERLMOD_DIR)
 	# Special treatment for debpkg
 	mv $(DESTDIR)$(BINDIR)/debpkg $(DESTDIR)$(PERLMOD_DIR)
 	cp debpkg-wrapper $(DESTDIR)$(BINDIR)/debpkg
diff -ruN devscripts/README devscripts.new/README
--- devscripts/README	Thu Jul 29 18:21:56 2004
+++ devscripts.new/README	Tue Jan 18 22:03:39 2005
@@ -138,7 +138,7 @@
 - wnpp-alert [wget]: list installed packages which are orphaned or up
   for adoption
 
-- /usr/share/doc/devscripts/examples: This directory contains examples of
+- @FINKPREFIX@/share/doc/devscripts/examples: This directory contains examples of
   procmail and exim scripts for sorting mail arriving to Debian
   mailing lists.
 
@@ -200,7 +200,7 @@
     and which won't ever ask you for a password!)  If you choose this
     method, it can be done by issuing the following command:
 
-      dpkg-statoverride --update --add root root_group 4754 /usr/bin/debpkg
+      dpkg-statoverride --update --add root root_group 4754 @FINKPREFIX@/bin/debpkg
 
     once (and similarly for debuild if you really need it).  This will
     enable access to debpkg for all users who are members of the group
diff -ruN devscripts/bts.pl devscripts.new/bts.pl
--- devscripts/bts.pl	Thu Jan 13 05:56:03 2005
+++ devscripts.new/bts.pl	Tue Jan 18 22:16:17 2005
@@ -5,8 +5,10 @@
 #
 # Written by Joey Hess <joeyh@debian.org>
 # Modifications by Julian Gilbey <jdg@debian.org>
+# More modifications by Chris Zubrzycki <devscripts@zubrzycki.org>
 # Copyright 2001-2003 Joey Hess <joeyh@debian.org>
 # Modifications Copyright 2001-2003 Julian Gilbey <jdg@debian.org>
+# Modifications Copyright 2004 Chris Zubrzycki <devscripts@zubrzycki.org>
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -36,7 +38,7 @@
 use File::Spec;
 use File::Temp qw/tempfile/;
 use IO::Handle;
-use lib '/usr/share/devscripts';
+use lib '@FINKPREFIX@/share/devscripts';
 use Devscripts::DB_File_Lock;
 use Fcntl qw(O_RDWR O_RDONLY O_CREAT F_SETFD);
 use Getopt::Long;
@@ -76,7 +78,7 @@
 my $version='###VERSION###';
 my $debug = (exists $ENV{'DEBUG'} and $ENV{'DEBUG'}) ? 1 : 0;
 
-# The official list is found at master.debian.org:/etc/debbugs/config
+# The official list is found at bugs.finkproject.org:/etc/debbugs/config
 # in the variable @gTags; we copy it verbatim here.
 our (@gTags, @valid_tags, %valid_tags);
 @gTags = ( "patch", "wontfix", "moreinfo", "unreproducible", "fixed",
@@ -92,10 +94,10 @@
 			serious grave critical);
 
 my $browser;  # Will set if necessary
-my $btsurl='http://bugs.debian.org/';
-my $btscgiurl='http://bugs.debian.org/cgi-bin/';
-my $btscgibugurl='http://bugs.debian.org/cgi-bin/bugreport.cgi';
-my $btsemail='control@bugs.debian.org';
+my $btsurl='http://bugs.finkproject.org/';
+my $btscgiurl='http://bugs.finkproject.org/cgi-bin/';
+my $btscgibugurl='http://bugs.finkproject.org/cgi-bin/bugreport.cgi';
+my $btsemail='control@bugs.finkproject.org';
 
 my $cachedir=$ENV{'HOME'}."/.devscripts_cache/bts/";
 my $timestampdb=$cachedir."bts_timestamps.db";
@@ -127,7 +129,7 @@
 you.
 
 In general, the command line interface is the same as what you would write
-in a mail to control@bugs.debian.org, just prefixed with "bts". For
+in a mail to control@bugs.finkproject.org, just prefixed with "bts". For
 example:
 
  % bts close 85942
@@ -450,7 +452,7 @@
 =item (none)
 
 If nothing is specified, bts bugs will display your bugs, assuming
-that either DEBEMAIL or EMAIL (examined in that order) is set to the
+that either FINKEMAIL or EMAIL (examined in that order) is set to the
 appropriate email address.
 
 =item <package>
@@ -481,7 +483,7 @@
 
 Details of the bug tracking system itself, along with a bug-request
 page with more options than this script, can be found on
-http://bugs.debian.org/.  This page itself will be opened if the
+http://bugs.finkproject.org/.  This page itself will be opened if the
 command 'bts bugs :' is used.
 
 =back
@@ -494,13 +496,13 @@
 sub bts_bugs {
     my $url = shift;
     if (! $url) {
-	if (defined $ENV{'DEBEMAIL'}) {
-	    $url=$ENV{'DEBEMAIL'};
+	if (defined $ENV{'FINKEMAIL'}) {
+	    $url=$ENV{'FINKEMAIL'};
 	} else {
 	    if (defined $ENV{'EMAIL'}) {
 		$url=$ENV{'EMAIL'};
 	    } else {
-		die "bts bugs: Please set DEBEMAIL or EMAIL to your Debian email address.\n";
+		die "bts bugs: Please set FINKEMAIL or EMAIL to your Fink email address.\n";
 	    }
 	}
     }
@@ -530,7 +532,7 @@
 # =item close <bug>
 # 
 # Close a bug. Remember that using this to close a bug is often bad manners,
-# sending an informative mail to nnnnn-done@bugs.debian.org is much better.
+# sending an informative mail to nnnnn-done@bugs.finkproject.org is much better.
 # 
 # =cut
 
@@ -540,9 +542,9 @@
     warn <<"EOT";
 bts: Closing $bug as you requested.
 Please note that the "bts close" command is deprecated!
-It is usually better to email nnnnnn-done\@bugs.debian.org with
+It is usually better to email nnnnnn-done\@bugs.finkproject.org with
 an informative mail.
-Please remember to email $bug-submitter\@bugs.debian.org with
+Please remember to email $bug-submitter\@bugs.finkproject.org with
 an explanation of why you have closed this bug.  Thank you!
 EOT
 }
@@ -772,8 +774,8 @@
 
 Generate or update a cache of bug reports for the given email address
 or package. By default it downloads all bugs belonging to the email
-address in the DEBEMAIL environment variable (or the EMAIL environment
-variable if DEBEMAIL is unset). This command may be repeated to cache
+address in the FINKEMAIL environment variable (or the EMAIL environment
+variable if FINKEMAIL is unset). This command may be repeated to cache
 bugs belonging to several people or packages. The cached bugs are
 stored in ~/.devscripts_cache/bts/
 
@@ -826,7 +828,7 @@
     else { $tocache=''; }
     
     if (! length $tocache) {
-	$tocache=$ENV{'DEBEMAIL'} || $ENV{'EMAIL'};
+	$tocache=$ENV{'FINKEMAIL'} || $ENV{'EMAIL'};
 	if ($tocache =~ /^.*\s+<(.*)>$/) { $tocache = $1; }
     }
     if (! length $tocache) {
@@ -871,7 +873,7 @@
 "ALL" is specified. This is useful if you are going to have permanent
 network access or if the database has become corrupted for some
 reason.  Note that for safety, this command does not default to the
-value of DEBEMAIL or EMAIL.
+value of FINKEMAIL or EMAIL.
 
 =cut
 
@@ -1036,11 +1038,11 @@
     my $subject=shift;
     my $body=shift;
 
-    if ($ENV{'DEBEMAIL'} || $ENV{'EMAIL'}) {
+    if ($ENV{'FINKEMAIL'} || $ENV{'EMAIL'}) {
 	# We need to fake the From: line
 	my ($email, $name);
-	if (exists $ENV{'DEBFULLNAME'}) { $name = $ENV{'DEBFULLNAME'}; }
-	if (exists $ENV{'DEBEMAIL'}) { $email = $ENV{'DEBEMAIL'}; }
+	if (exists $ENV{'FINKFULLNAME'}) { $name = $ENV{'FINKFULLNAME'}; }
+	if (exists $ENV{'FINKEMAIL'}) { $email = $ENV{'FINKEMAIL'}; }
 	if (exists $ENV{'EMAIL'}) {
 	    if ($ENV{'EMAIL'} =~ /^(.*)\s+<(.*)>$/) {
 		$name ||= $1;
@@ -1087,9 +1089,9 @@
 	    }
 	}
     }
-    else {  # No DEBEMAIL
+    else {  # No FINKEMAIL
 	unless (system("command -v mail >/dev/null 2>&1") == 0) {
-	    die "bts: You need to either set DEBEMAIL or have the mailx package to do this!\n";
+	    die "bts: You need to either set FINKEMAIL or have the mailx package to do this!\n";
 	}
 	my $pid = open(MAIL, "|-");
 	if ($pid) {
@@ -1851,7 +1853,7 @@
 }
 
 # We would love to use LWP::Simple::mirror in this script.
-# Unfortunately, bugs.debian.org does not respect the
+# Unfortunately, bugs.finkproject.org does not respect the
 # If-Modified-Since header.  For single bug reports, however,
 # bugreport.cgi will return a Last-Modified header if sent a HEAD
 # request.  So this is a hack, based on code from the LWP modules.  :-(
@@ -1924,15 +1926,15 @@
 
 =over 4
 
-=item DEBEMAIL
+=item FINKEMAIL
 
 If this is set, the From: line in the email will be set to use this email
 address instead of your normal email address (as would be determined by
 B<mail>).
 
-=item DEBFULLNAME
+=item FINKFULLNAME
 
-If DEBEMAIL is set, DEBFULLNAME is examined to determine the full name
+If FINKEMAIL is set, FINKFULLNAME is examined to determine the full name
 to use; if this is not set, B<bts> attempts to determine a name from
 your passwd entry.
 
diff -ruN devscripts/debc.1 devscripts.new/debc.1
--- devscripts/debc.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debc.1	Tue Jan 18 22:03:39 2005
@@ -83,7 +83,7 @@
 \fB\-\-help\fR, \fB\-\-version\fR
 Show help message and version information respectively.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debchange.1 devscripts.new/debchange.1
--- devscripts/debchange.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debchange.1	Tue Jan 18 22:18:36 2005
@@ -27,7 +27,7 @@
 \fBdebchange\fR also supports automatically producing bug-closing
 changelog entries, using the \fB\-\-closes\fR option.  This will
 usually query the BTS, the Debian Bug Tracking System (see
-http://bugs.debian.org/) to determine the title of the bug and the
+http://bugs.finkproject.org/) to determine the title of the bug and the
 package in which it occurs.  This behaviour can be stopped by giving a
 \fB\-\-noquery\fR option or by setting the configuration variable
 \fBDEBCHANGE_QUERY_BTS\fR to \fIno\fR, as described below.  In either
@@ -178,7 +178,7 @@
 .B \-\-version
 Display version and copyright information and exit successfully.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debchange.1~ devscripts.new/debchange.1~
--- devscripts/debchange.1~	Wed Dec 31 19:00:00 1969
+++ devscripts.new/debchange.1~	Tue Jan 18 22:03:39 2005
@@ -0,0 +1,219 @@
+.TH DEBCHANGE 1 "Debian Utilities" "DEBIAN" \" -*- nroff -*-
+.SH NAME
+debchange \- Tool for maintenance of the debian/changelog file in a source package
+.SH SYNOPSIS
+\fBdebchange\fR [\fIoptions\fR] [\fItext\fR ...]
+.br
+\fBdch\fR [\fIoptions\fR] [\fItext\fR ...]
+.SH DESCRIPTION
+\fBdebchange\fR or its alias \fBdch\fR will add a new comment line to
+the Debian changelog in the current source tree.  This command must be
+run from within that tree.  If the text of the change is given on the
+commandline, \fBdebchange\fR will run in batch mode and simply add the
+text, with line breaks as necessary, at the appropriate place in
+\fIdebian/changelog\fR.  If no text is specified then \fBdebchange\fR
+will run the editor as determined by \fBsensible-editor\fR for you to
+edit the file.  (The environment variables \fBVISUAL\fR and
+\fBEDITOR\fR are used in this order to determine which editor to use.)
+Editors which understand the \fI+n\fR option for starting the editing
+on a specified line will use this to move to the correct line of the
+file for editing.  If the editor is quit without modifying the
+temporary file, \fBdebchange\fR will exit without touching the
+existing changelog.  \fBNote that the changelog is assumed to be
+encoded with the UTF-8 encoding.  If it is not, problems may occur.\fR
+Please see the \fBiconv\fR(1) manpage to find out how to convert
+changelogs from legacy encodings.
+.PP
+\fBdebchange\fR also supports automatically producing bug-closing
+changelog entries, using the \fB\-\-closes\fR option.  This will
+usually query the BTS, the Debian Bug Tracking System (see
+http://bugs.debian.org/) to determine the title of the bug and the
+package in which it occurs.  This behaviour can be stopped by giving a
+\fB\-\-noquery\fR option or by setting the configuration variable
+\fBDEBCHANGE_QUERY_BTS\fR to \fIno\fR, as described below.  In either
+case, the editor (as described above) will always be invoked to give
+an opportunity to modify the entries, and the changelog will be
+accepted whether or not modifications are made.  An extra changelog
+entry can be given on the command line in addition to the closes
+entries.
+.PP
+At most one of \fB\-\-append\fR, \fB\-\-increment\fR and
+\fB\-\-newversion\fR may be specified as listed below.  If no options
+are specified, \fBdch\fR will look for an appropriate \fBdupload\fR(1)
+or \fBdput\fR(1) log file in the parent directory to determine whether
+this version of the package has been uploaded successfully.  It will
+behave as if \fB\-\-increment\fR had been specified if a successful
+upload has been logged and as if \fB\-\-append\fR had been specified
+otherwise.  A warning will be issued if the log file is found but a
+successful upload is not recorded.  This may be because the previous
+upload was performed with a version of \fBdupload\fR prior to 2.1 or
+because the upload failed.
+.PP
+If \fB\-\-increment\fR or \fB\-\-newversion\fR is used, the name and
+email for the new version will be determined as follows.  If the
+environment variable \fBDEBFULLNAME\fR is set, this will be used for
+the maintainer full name.  If the environment variable \fBDEBEMAIL\fR
+is set, this will be used for the email address.  If this variable has
+the form "name <email>", then the maintainer name will also be taken
+from here if \fBDEBFULLNAME\fR is not set.  If this variable is not
+set, the same test is performed on the environment variable
+\fBEMAIL\fR.  Next, if the full name has still not been determined,
+then use \fBgetpwuid\fR(3) to determine the name from the password
+file.  If this fails, use the previous changelog entry.  For the email
+address, if it has not been set from \fBDEBEMAIL\fR or \fBEMAIL\fR,
+then look in \fI/etc/mailname\fR, then attempt to build it from the
+username and FQDN, otherwise use the email address in the previous
+changelog entry.  In other words, it's a good idea to set
+\fBDEBEMAIL\fR and \fBDEBFULLNAME\fR when using this script.
+.PP
+If the directory name of the source tree has the form
+\fIpackage\fR-\fIversion\fR, then \fBdebchange\fR will also attempt to
+rename it if the (upstream) version number changes.  This can be
+prevented by using the \fB\-\-preserve\fR command line or
+configuration file option as described below.
+.SH "Directory name checking"
+In common with several other scripts in the \fBdevscripts\fR package,
+\fBdebchange\fR will climb the directory tree until it finds a
+\fIdebian/changelog\fR file.  As a safeguard against stray files
+causing potential problems, it will examine the name of the parent
+directory once it finds the \fIdebian/changelog\fR file, and check
+that the directory name corresponds to the package name.  Precisely
+how it does this is controlled by two configuration file variables
+DEVSCRIPTS_CHECK_DIRNAME_LEVEL and DEVSCRIPTS_CHECK_DIRNAME_REGEX, and
+their corresponding command-line options \fB\-\-check-dirname-level\fR
+and \fB\-\-check-dirname-regex\fR.
+.PP
+DEVSCRIPTS_CHECK_DIRNAME_LEVEL can take the following values:
+.TP
+.B 0
+Never check the directory name.
+.TP
+.B 1
+Only check the directory name if we have had to change directory in
+our search for \fIdebian/changelog\fR.  This is the default behaviour.
+.TP
+.B 2
+Always check the directory name.
+.PP
+The directory name is checked by testing whether the current directory
+name (as determined by \fBpwd\fR(1)) matches the regex given by the
+configuration file option DEVSCRIPTS_CHECK_DIRNAME_REGEX or by the
+command line option \fB\-\-check-dirname-regex\fR \fIregex\fR.  Here
+\fIregex\fR is a Perl regex (see \fBperlre\fR(3perl)), which will be
+anchored at the beginning and the end.  If \fIregex\fR contains a '/',
+then it must match the full directory path.  If not, then it must
+match the full directory name.  If \fIregex\fR contains the string
+\'PACKAGE', this will be replaced by the source package name, as
+determined from the changelog.  The default value for the regex is:
+\'PACKAGE(-.*)?', thus matching directory names such as PACKAGE and
+PACKAGE-version.
+.SH OPTIONS
+.TP
+.BR \-\-increment ", " \-i
+Increment either the Debian release number or, if this is a native
+Debian package, the version number.  This creates a new section at the
+beginning of the changelog with appropriate headers and footers.
+Also, if this is a new version of a native Debian package, the
+directory name is changed to reflect this.
+.TP
+.BR \-\-append ", " \-a
+Add a new changelog entry at the end of the current version's entries.
+.TP
+\fB\-\-newversion \fIversion\fR, \fB\-v \fIversion\fR
+This specifies the version number (including the Debian release part)
+explicitly and behaves as the \fB\-\-increment\fR option in other
+respects.  It will also change the directory name if the upstream
+version number has changed.
+.TP
+.BR \-\-fromdirname ", " \-d
+This will take the upstream version number from the directory name,
+which should be of the form \fIpackage\fR-\fIversion\fR.  If the
+upstream version number has increased from the most recent changelog
+entry, then a new entry will be made with version number
+\fIversion\fR-1 (or \fIversion\fR if the package is Debian native),
+with the same epoch as the previous package version.  If the upstream
+version number is the same, this option will behave in the same way as
+\fB\-i\fR.
+.TP
+.BI \-\-closes nnnnn,[nnnnn,...]
+Add changelog entries to close the specified bug numbers.  Also invoke
+the editor after adding these entries.  Will generate warnings if the
+BTS cannot be contacted (and \fB\-\-noquery\fR has not been
+specified), or if there are problems with the bug report located.
+.TP
+.B \-\-[no]query
+Should we attempt to query the BTS when generating closes entries?
+.TP
+.BR \-\-preserve ", " \-p
+Preserve the source tree directory name if the upstream version number
+(or the version number of a Debian native package) changes.  See also
+the configuration variables section below.
+.TP
+.B \-\-no\-preserve
+Do not preserve the source tree directory name (default).
+.TP
+\fB\-\-distribution \fIdist\fR, \fB\-D \fIdist\fR
+Use the specified distribution in the new changelog entry, if any,
+instead of using the previous changelog entry's distribution.
+.TP
+\fB\-\-urgency \fIurgency\fR, \fB\-u \fIurgency\fR
+Use the specified urgency in the new changelog entry, if any,
+instead of using the default "low".
+.TP
+\fB\-\-check-dirname-level\fR \fIN\fR
+See the above section "Directory name checking" for an explanation of
+this option.
+.TP
+\fB\-\-check-dirname-regex\fR \fIregex\fR
+See the above section "Directory name checking" for an explanation of
+this option.
+.TP
+\fB\-\-no-conf\fR, \fB\-\-noconf\fR
+Do not read any configuration files.  This can only be used as the
+first option given on the command-line.
+.TP
+.BR \-\-help ", " \-h
+Display a help message and exit successfully.
+.TP
+.B \-\-version
+Display version and copyright information and exit successfully.
+.SH "CONFIGURATION VARIABLES"
+The two configuration files \fI@\fR and
+\fI~/.devscripts\fR are sourced in that order to set configuration
+variables.  Command line options can be used to override configuration
+file settings.  Environment variable settings are ignored for this
+purpose.  The currently recognised variables are:
+.TP
+.B DEBCHANGE_PRESERVE
+If this is set to \fIyes\fR, then it is the same as the
+\fB\-\-preserve\fR command line parameter being used.
+.TP
+.B DEBCHANGE_QUERY_BTS
+If this is set to \fIno\fR, then it is the same as the
+\fB\-\-noquery\fR command line parameter being used.
+.TP
+.BR DEVSCRIPTS_CHECK_DIRNAME_LEVEL ", " DEVSCRIPTS_CHECK_DIRNAME_REGEX
+See the above section "Directory name checking" for an explanation of
+these variables.  Note that these are package-wide configuration
+variables, and will therefore affect all \fBdevscripts\fR scripts
+which check their value, as described in their respective manpages and
+in \fBdevscripts.conf\fR(5).
+.SH ENVIRONMENT
+.TP
+.BR DEBEMAIL ", " EMAIL ", " DEBFULLNAME
+See the above description of the use of these environment variables.
+.TP
+.BR VISUAL ", " EDITOR
+These environment variables (in this order) determine the editor used
+by \fBsensible-editor\fR.
+.SH "SEE ALSO"
+.BR debclean (1),
+.BR dupload (1),
+.BR dput (1),
+.BR debc (1)
+and
+.BR devscripts.conf (5).
+.SH AUTHOR
+The original author was Christoph Lameter <clameter@debian.org>. 
+Many substantial changes and improvements were made by Julian Gilbey
+<jdg@debian.org>.
diff -ruN devscripts/debchange.pl devscripts.new/debchange.pl
--- devscripts/debchange.pl	Sat Nov 27 19:18:43 2004
+++ devscripts.new/debchange.pl	Tue Jan 18 22:19:13 2005
@@ -77,7 +77,7 @@
          Add a new changelog entry with version number specified
   --closes nnnnn[,nnnnn,...]
          Add entries for closing these bug numbers,
-         getting bug titles from the BTS (bug-tracking system, bugs.debian.org)
+         getting bug titles from the BTS (bug-tracking system, bugs.finkproject.org)
   --[no]query
          [Don\'t] try contacting the BTS to get bug titles
   -d, --fromdirname
@@ -141,7 +141,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'DEBCHANGE_PRESERVE' => 'no',
 		       'DEBCHANGE_QUERY_BTS' => 'yes',
@@ -415,7 +415,7 @@
 	my %bugs;
 	my $lastbug;
 
-	my $bugs = `wget -q -O - 'http://bugs.debian.org/cgi-bin/pkgreport.cgi?src=$PACKAGE'`;
+	my $bugs = `wget -q -O - 'http://bugs.finkproject.org/cgi-bin/pkgreport.cgi?src=$PACKAGE'`;
 	if ($? >> 8 != 0) {
 	    warn "$progname warning: wget failed, so cannot query the bug-tracking system\n";
 	    $opt_query=0;
@@ -443,7 +443,7 @@
 		push @closes_text, "Closes: \#$close: $title\n";
 	    }
 	    else { # not our package, or wnpp
-		my $bug = `wget -q -O - 'http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=$close'`;
+		my $bug = `wget -q -O - 'http://bugs.finkproject.org/cgi-bin/bugreport.cgi?bug=$close'`;
 		if ($? >> 8 != 0) {
 		    warn "$progname warning: unknown bug \#$close does not belong to $PACKAGE,\n  disabling closing changelog entry\n";
 		    $warnings++;
diff -ruN devscripts/debchange.pl~ devscripts.new/debchange.pl~
--- devscripts/debchange.pl~	Wed Dec 31 19:00:00 1969
+++ devscripts.new/debchange.pl~	Tue Jan 18 22:03:39 2005
@@ -0,0 +1,796 @@
+#! /usr/bin/perl -w
+
+# debchange: update the debian changelog using your favorite visual editor
+# Options:
+# -i           generates a new changelog section increasing the Debian
+#              release number
+# -a           Adds an entry to the current changelog section
+# -v version   generates a new changelog section with given version number
+# -d, --fromdirname
+#              Like -v, but takes version from directory name
+# -n, --nmu    Increments version, but for a NMU
+# -p           preserve directory name
+# --closes nnnnn,nnnnn,... Closes bug reports
+# --[no]query  Don't contact the BTS to find the bug report details
+# --check-dirname-level
+# --check-dirname-regex  Control how directory-name checking is performed
+# --no-conf, --noconf    Do not read any configuration files
+# Without any options, the package will look for an .upload file in the
+# parent directory to determine whether or not the version number should
+# be incremented or not.
+#
+# debchange --help (or -h) prints a usage message.
+#
+# When creating a new changelog section, if either of the environment
+# variables DEBEMAIL or EMAIL is set, debchange will use this as the
+# uploader's email address (with the former taking precedence), and if
+# DEBFULLNAME is set, it will use this as the uploader's full name.
+# Otherwise, it will take the standard values for the current user or,
+# failing that, just copy the values from the previous changelog entry.
+#
+# Originally by Christoph Lameter <clameter@debian.org>
+# Modified extensively by Julian Gilbey <jdg@debian.org>
+#
+# Copyright 1999-2003 by Julian Gilbey 
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+use 5.008;  # We're using PerlIO layers
+use strict;
+use open ':utf8';  # changelogs are written with UTF-8 encoding
+use Encode 'decode_utf8';  # for checking whether user names are valid
+use Getopt::Long;
+use File::Copy;
+use File::Basename;
+use Cwd;
+
+# Predeclare functions
+sub fatal($);
+
+# And global variables
+my $progname = basename($0);
+my $modified_conf_msg;
+my %env;
+my $CHGLINE;  # used by the format O section at the end
+
+sub usage () {
+    print <<"EOF";
+Usage: $progname [options] [changelog entry]
+Options:
+  -i, --increment
+         Increase the Debian release number, adding a new changelog entry
+  -a, --append
+         Append a new entry to the current changelog
+  -v <version>, --newversion=<version>
+         Add a new changelog entry with version number specified
+  --closes nnnnn[,nnnnn,...]
+         Add entries for closing these bug numbers,
+         getting bug titles from the BTS (bug-tracking system, bugs.debian.org)
+  --[no]query
+         [Don\'t] try contacting the BTS to get bug titles
+  -d, --fromdirname
+         Add a new changelog entry with version taken from the directory name
+  -n, --nmu
+         Increment the Debian release number for a non-maintainer upload
+  -p, --preserve
+         Preserve the directory name
+  --no-preserve
+         Do not preserve the directory name (default)
+  -D, --distribution <dist>
+         Use the specified distribution in the new changelog entry, if any
+  -u, --urgency <urgency>
+         Use the specified urgency in the new changelog entry, if any
+  --check-dirname-level N
+         How much to check directory names:
+         N=0   never
+         N=1   only if program changes directory (default)
+         N=2   always
+  --check-dirname-regex REGEX
+         What constitutes a matching directory name; REGEX is
+         a Perl regular expression; the string \`PACKAGE\' will
+         be replaced by the package name; see manpage for details
+         (default: 'PACKAGE(-.*)?')
+  --no-conf, --noconf
+         Don\'t read devscripts config files; must be the first option given
+  --help, -h
+         Display this help message and exit
+  --version
+         Display version information
+  At most one of -a, -i and -v (or their long equivalents) may be used.
+  With no options, one of -i or -a is chosen by looking for a .upload
+  file in the parent directory and checking its contents.
+
+Default settings modified by devscripts configuration files:
+$modified_conf_msg
+EOF
+}
+
+sub version () {
+    print <<"EOF";
+This is $progname, from the Debian devscripts package, version ###VERSION###
+This code is copyright 1999-2003 by Julian Gilbey, all rights reserved.
+Based on code by Christoph Lameter.
+This program comes with ABSOLUTELY NO WARRANTY.
+You are free to redistribute this code under the terms of the
+GNU General Public License, version 2 or later.
+EOF
+}
+
+# Start by setting default values
+my $check_dirname_level = 1;
+my $check_dirname_regex = 'PACKAGE(-.*)?';
+my $opt_p = 0;
+my $opt_query = 1;
+
+# Next, read configuration files and then command line
+# The next stuff is boilerplate
+
+if (@ARGV and $ARGV[0] =~ /^--no-?conf$/) {
+    $modified_conf_msg = "  (no configuration files read)";
+    shift;
+} else {
+    my @config_files = ('@', '~/.devscripts');
+    my %config_vars = (
+		       'DEBCHANGE_PRESERVE' => 'no',
+		       'DEBCHANGE_QUERY_BTS' => 'yes',
+		       'DEVSCRIPTS_CHECK_DIRNAME_LEVEL' => 1,
+		       'DEVSCRIPTS_CHECK_DIRNAME_REGEX' => 'PACKAGE(-.*)?',
+		       );
+    my %config_default = %config_vars;
+    
+    my $shell_cmd;
+    # Set defaults
+    foreach my $var (keys %config_vars) {
+	$shell_cmd .= qq[$var="$config_vars{$var}";\n];
+    }
+    $shell_cmd .= 'for file in ' . join(" ",@config_files) . "; do\n";
+    $shell_cmd .= '[ -f $file ] && . $file; done;' . "\n";
+    # Read back values
+    foreach my $var (keys %config_vars) { $shell_cmd .= "echo \$$var;\n" }
+    my $shell_out = `/bin/bash -c '$shell_cmd'`;
+    @config_vars{keys %config_vars} = split /\n/, $shell_out, -1;
+
+    # Check validity
+    $config_vars{'DEBCHANGE_PRESERVE'} =~ /^(yes|no)$/
+	or $config_vars{'DEBCHANGE_PRESERVE'}='no';
+    $config_vars{'DEBCHANGE_QUERY_BTS'} =~ /^(yes|no)$/
+	or $config_vars{'DEBCHANGE_QUERY_BTS'}='yes';
+    $config_vars{'DEVSCRIPTS_CHECK_DIRNAME_LEVEL'} =~ /^[012]$/
+	or $config_vars{'DEVSCRIPTS_CHECK_DIRNAME_LEVEL'}=1;
+
+    foreach my $var (sort keys %config_vars) {
+	if ($config_vars{$var} ne $config_default{$var}) {
+	    $modified_conf_msg .= "  $var=$config_vars{$var}\n";
+	}
+    }
+    $modified_conf_msg ||= "  (none)\n";
+    chomp $modified_conf_msg;
+
+    $opt_p = $config_vars{'DEBCHANGE_PRESERVE'} eq 'yes' ? 1 : 0;
+    $opt_query = $config_vars{'DEBCHANGE_QUERY_BTS'} eq 'no' ? 0 : 1;
+    $check_dirname_level = $config_vars{'DEVSCRIPTS_CHECK_DIRNAME_LEVEL'};
+    $check_dirname_regex = $config_vars{'DEVSCRIPTS_CHECK_DIRNAME_REGEX'};
+}
+
+# We use bundling so that the short option behaviour is the same as
+# with older debchange versions.
+my ($opt_help, $opt_version);
+my ($opt_i, $opt_a, $opt_v, $opt_d, $opt_D, $opt_u, $opt_n, @closes);
+my ($opt_ignore, $opt_level, $opt_regex, $opt_noconf);
+$opt_u = 'low';
+
+Getopt::Long::Configure('bundling');
+GetOptions("help|h" => \$opt_help,
+	   "version" => \$opt_version,
+	   "i|increment" => \$opt_i,
+	   "a|append" => \$opt_a,
+	   "v|newversion=s" => \$opt_v,
+	   "d|fromdirname" => \$opt_d,
+	   "p" => \$opt_p,
+	   "preserve!" => \$opt_p,
+           "D|distribution=s" => \$opt_D,
+           "u|urgency=s" => \$opt_u,
+	   "n|nmu" => \$opt_n,
+	   "query!" => \$opt_query,
+	   "closes=s" => \@closes,
+	   "ignore-dirname" => \$opt_ignore,
+	   "check-dirname-level=s" => \$opt_level,
+	   "check-dirname-regex=s" => \$opt_regex,
+	   "noconf" => \$opt_noconf,
+	   "no-conf" => \$opt_noconf,
+	   )
+    or die "Usage: $progname [options] [changelog entry]\nRun $progname --help for more details\n";
+
+if ($opt_noconf) {
+    die "$progname: --no-conf is only acceptable as the first command-line option!\n";
+}
+if ($opt_help) { usage; exit 0; }
+if ($opt_version) { version; exit 0; }
+
+# dirname stuff
+if ($opt_ignore) {
+    die "$progname: --ignore-dirname has been replaced by --check-dirname-level and\n--check-dirname-regex; run $progname --help for more details\n";
+}
+
+if (defined $opt_level) {
+    if ($opt_level =~ /^[012]$/) { $check_dirname_level = $opt_level; }
+    else {
+	die "$progname: unrecognised --check-dirname-level value (allowed are 0,1,2)\n";
+    }
+}
+
+if (defined $opt_regex) { $check_dirname_regex = $opt_regex; }
+
+@closes = split(/,/, join(',', @closes));
+map { s/^\#//; } @closes;  # remove any leading # from bug numbers
+
+# Only allow at most one non-help option
+fatal "Only one of -a, -i, -v, -d is allowed; try $progname -h for more help"
+    if ($opt_i?1:0) + ($opt_a?1:0) + ($opt_v?1:0) + ($opt_d?1:0) > 1;
+
+# We'll process the rest of the command line later.
+
+# Look for the debian changelog
+my $chdir = 0;
+until (-f 'debian/changelog') {
+    $chdir = 1;
+    chdir '..' or die "$progname: can't chdir ..: $!\n";
+    if (cwd() eq '/') {
+	die "$progname: cannot find debian/changelog anywhere!\nAre you in the source code tree?\n";
+    }
+}
+
+# Can't write, so stop now.
+if (! -w 'debian/changelog')
+{
+        die "$progname: debian/changelog is not writable!\n";
+}
+
+#####
+
+# Find the current version number etc.
+my %changelog;
+open PARSED, "dpkg-parsechangelog |"
+    or fatal "Cannot execute dpkg-parsechangelog: $!";
+my $last;
+while (<PARSED>) {
+    chomp;
+    if (/^(\S+):\s(.+?)\s*$/) { $changelog{$1}=$2; $last=$1; }
+    elsif (/^(\S+):\s$/) { $changelog{$1}=''; $last=$1; }
+    elsif (/^\s\.$/) { $changelog{$last}.="\n"; }
+    elsif (/^\s(.+)$/) { $changelog{$last}.="$1\n"; }
+    else {
+	fatal "Don't understand dpkg-parsechangelog output: $_";
+    }
+}
+
+close PARSED
+    or fatal "Problem executing dpkg-parsechangelog: $!";
+if ($?) { fatal "dpkg-parsechangelog failed!" }
+
+# Now we've read the changelog, set some variables and then
+# let's check the directory name is sensible
+fatal "No package name in changelog!"
+    unless exists $changelog{'Source'};
+my $PACKAGE = $changelog{'Source'};
+fatal "No version number in changelog!"
+    unless exists $changelog{'Version'};
+my $VERSION=$changelog{'Version'};
+fatal "No maintainer in changelog!"
+    unless exists $changelog{'Maintainer'};
+my ($MAINTAINER,$EMAIL) = ($changelog{'Maintainer'} =~ /^([^<]+) <(.*)>/);
+fatal "No distribution in changelog!"
+    unless exists $changelog{'Distribution'};
+my $DISTRIBUTION=$changelog{'Distribution'};
+fatal "No changes in changelog!"
+    unless exists $changelog{'Changes'};
+my $CHANGES=$changelog{'Changes'};
+
+# Is the directory name acceptable?
+if ($check_dirname_level ==  2 or
+    ($check_dirname_level == 1 and $chdir)) {
+    my $re = $check_dirname_regex;
+    $re =~ s/PACKAGE/\\Q$PACKAGE\\E/g;
+    my $gooddir;
+    if ($re =~ m%/%) { $gooddir = eval "cwd() =~ /^$re\$/;"; }
+    else { $gooddir = eval "basename(cwd()) =~ /^$re\$/;"; }
+    
+    if (! $gooddir) {
+	my $pwd = cwd();
+	die <<"EOF";
+$progname: found debian/changelog for package $PACKAGE in the directory
+  $pwd
+but this directory name does not match the package name according to the
+regex  $check_dirname_regex.
+
+To run $progname on this package, see the --check-dirname-level and
+--check-dirname-regex options; run $progname --help for more info.
+EOF
+    }
+}
+
+
+# Clean up after old versions of debchange
+if (-f "debian/RELEASED") {
+    unlink("debian/RELEASED");
+}
+
+if ( -e "debian/changelog.dch" ) {
+    fatal "The backup file debian/changelog.dch already exists --\n" .
+		  "please move it before trying again";
+}
+
+
+# Is this a native Debian package, i.e., does it have a - in the
+# version number?
+(my $EPOCH) = ($VERSION =~ /^(\d+):/);
+(my $SVERSION=$VERSION) =~ s/^\d+://;
+(my $UVERSION=$SVERSION) =~ s/-[^-]*$//;
+
+# Check, sanitise and decode these environment variables
+check_env_utf8('DEBFULLNAME');
+check_env_utf8('DEBEMAIL');
+check_env_utf8('EMAIL');
+
+if (exists $env{'DEBEMAIL'} and $env{'DEBEMAIL'} =~ /^(.*)\s+<(.*)>$/) {
+    $env{'DEBFULLNAME'} = $1 unless exists $env{'DEBFULLNAME'};
+    $env{'DEBEMAIL'} = $2;
+}
+if (! exists $env{'DEBEMAIL'} or ! exists $env{'DEBFULLNAME'}) {
+    if (exists $env{'EMAIL'} and $env{'EMAIL'} =~ /^(.*)\s+<(.*)>$/) {
+	$env{'DEBFULLNAME'} = $1 unless exists $env{'DEBFULLNAME'};
+	$env{'EMAIL'} = $2;
+    }
+}
+
+# Now use the gleaned values to detemine our MAINTAINER and EMAIL values
+if (exists $env{'DEBFULLNAME'}) {
+    $MAINTAINER = $env{'DEBFULLNAME'};
+} else {
+    my @pw = getpwuid $<;
+    if (defined($pw[6])) {
+	if (my $pw = decode_utf8($pw[6])) {
+	    $pw =~ s/,.*//;
+	    $MAINTAINER = $pw;
+	} else {
+	    warn "$progname warning: passwd full name field for uid $<\nis not UTF-8 encoded; ignoring\n";
+	}
+    }
+}
+# Otherwise, $MAINTAINER retains its default value of the last changelog entry
+
+# Email is easier
+if (exists $env{'DEBEMAIL'}) { $EMAIL = $env{'DEBEMAIL'}; }
+elsif (exists $env{'EMAIL'}) { $EMAIL = $env{'EMAIL'}; }
+else {
+    my $addr;
+    if (open MAILNAME, '/etc/mailname') {
+	chomp($addr = <MAILNAME>);
+	close MAILNAME;
+    }
+    if (!$addr) {
+	chomp($addr = `hostname --fqdn 2>/dev/null`);
+	$addr = undef if $?;
+    }
+    if ($addr) {
+	my $user = getpwuid $<;
+	if (!$user) {
+	    $addr = undef;
+	}
+	else {
+	    $addr = "$user\@$addr";
+	}
+    }
+    $EMAIL = $addr if $addr;
+}
+# Otherwise, $EMAIL retains its default value of the last changelog entry
+
+#####
+
+# Do we need to generate "closes" entries?
+
+my @closes_text = ();
+my $warnings = 0;
+if (@closes and $opt_query) { # and we have to query the BTS
+    if (system('command -v wget >/dev/null 2>&1') >> 8 != 0) {
+	warn "$progname warning: wget not installed, so cannot query the bug-tracking system\n";
+	$opt_query=0;
+	$warnings++;
+	# This will now go and execute the "if (@closes and ! $opt_query)" code
+    }
+    else
+    {
+	my %bugs;
+	my $lastbug;
+
+	my $bugs = `wget -q -O - 'http://bugs.debian.org/cgi-bin/pkgreport.cgi?src=$PACKAGE'`;
+	if ($? >> 8 != 0) {
+	    warn "$progname warning: wget failed, so cannot query the bug-tracking system\n";
+	    $opt_query=0;
+	    $warnings++;
+	    # This will now go and execute the "if (@closes and ! $opt_query)" code
+	}
+
+	foreach (split /\n/, $bugs) {
+	    if (m%<a href=\"bugreport.cgi\?bug=([0-9]*).*?>\#\1: (.*?)</a>%) {
+		$bugs{$1} = [$2];
+		$lastbug=$1;
+	    }
+	    elsif (defined $lastbug and
+		   m%<a href=\"pkgreport.cgi\?pkg=([a-z0-9\+\-\.]*)%) {
+		push @{$bugs{$lastbug}}, $1
+		    if exists $bugs{$lastbug};
+		$lastbug = undef;
+	    }
+	}
+
+	foreach my $close (@closes) {
+	    if (exists $bugs{$close}) {
+		my ($title,$pkg) = @{$bugs{$close}};
+		$title =~ s/^($pkg|$PACKAGE): //;
+		push @closes_text, "Closes: \#$close: $title\n";
+	    }
+	    else { # not our package, or wnpp
+		my $bug = `wget -q -O - 'http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=$close'`;
+		if ($? >> 8 != 0) {
+		    warn "$progname warning: unknown bug \#$close does not belong to $PACKAGE,\n  disabling closing changelog entry\n";
+		    $warnings++;
+		    push @closes_text, "Closes?? \#$close: UNKNOWN BUG IN WRONG PACKAGE!!\n";
+                } else {
+		    my ($bugtitle) = ($bug =~ m%<TITLE>.*?\#$close - (.*?)</TITLE>%);
+		    my ($bugpkg) = ($bug =~ m%<a href=\"pkgreport.cgi\?pkg=([a-z0-9\+\-\.]*)%);
+		    $bugpkg ||= '?';
+		    my ($bugsrcpkg) = ($bug =~ m%<a href=\"pkgreport.cgi\?src=([a-z0-9\+\-\.]*)%);
+		    $bugsrcpkg ||= '?';
+		    if ($bugsrcpkg eq $PACKAGE) {
+			warn "$progname warning: bug \#$close appears to be already archived,\n  disabling closing changelog entry\n";
+			$warnings++;
+			push @closes_text, "Closes?? \#$close: ALREADY ARCHIVED?  $bugtitle!!\n";
+		    }
+		    elsif ($bugpkg eq 'wnpp') {
+			if ($bugtitle =~ /(^(O|RFA|ITA): )/) {
+			    push @closes_text, "New maintainer. (Closes: \#$close: $bugtitle)\n";
+			}
+			elsif  ($bugtitle =~ /(^(RFP|ITP): )/) {
+			    push @closes_text, "Initial release. (Closes: \#$close: $bugtitle)\n";
+			}
+		    }
+		    else {
+			warn "$progname warning: bug \#$close belongs to package $bugpkg (src $bugsrcpkg),\n  not to $PACKAGE: disabling closing changelog entry\n";
+			$warnings++;
+			push @closes_text, "Closes?? \#$close: WRONG PACKAGE!!  $bugtitle\n";
+		    }
+		}
+	    }
+        }
+   }
+}
+
+if (@closes and ! $opt_query) { # and we don't have to query the BTS
+    foreach my $close (@closes) {
+	unless ($close =~ /^\d{3,}$/) {
+	    warn "$progname warning: Bug number $close is invalid; ignoring\n";
+	    $warnings++;
+	    next;
+	}
+	push @closes_text, "Closes: \#$close: \n";
+    }
+}
+
+
+# Get a possible changelog entry from the command line
+my $TEXT=decode_utf8(join(' ', @ARGV));
+if (@ARGV and ! $TEXT) {
+    warn "$progname warning: command-line changelog entry not UTF-8 encoded; ignoring\n";
+    $TEXT='';
+}
+
+# Get the date
+chomp(my $DATE=`822-date`);
+
+# Are we going to have to figure things out for ourselves?
+if (! $opt_i && ! $opt_v && ! $opt_d && ! $opt_a) {
+    # Yes, we are
+    my @UPFILES = glob("../$PACKAGE\_$SVERSION\_*.upload");
+    if (@UPFILES > 1) {
+	fatal "Found more than one appropriate .upload file!\n" .
+		      "Please use an explicit -a, -i or -v option instead.";
+    }
+    elsif (@UPFILES == 0) { $opt_a = 1 }
+    else {
+	open UPFILE, "<${UPFILES[0]}"
+	    or fatal "Couldn't open .upload file for reading: $!\n" .
+			"Please use an explicit -a, -i or -v option instead.";
+	while (<UPFILE>) {
+	    if (m%^(s|Successfully uploaded) (/.*/)?\Q$PACKAGE\E\_\Q$SVERSION\E\_[\w\-]+\.changes %) {
+		$opt_i = 1;
+		last;
+	    }
+	}
+	close UPFILE
+	    or fatal "Problems experienced reading .upload file: $!\n" .
+			"Please use an explicit -a, -i or -v option instead.";
+	if (! $opt_i) {
+	    warn "$progname warning: A successful upload of the current version was not logged\n" .
+		"in the upload log file; adding log entry to current version.";
+	    $opt_a = 1;
+	}
+    }
+}
+
+
+# Open in anticipation....
+open S, "debian/changelog" or fatal "Cannot open changelog: $!";
+open O, ">debian/changelog.dch"
+    or fatal "Cannot write to temporary file: $!";
+# Turn off form feeds; taken from perlform
+select((select(O), $^L = "")[0]);
+
+# Note that we now have to remove it
+my $tmpchk=1;
+my ($NEW_VERSION, $NEW_SVERSION, $NEW_UVERSION);
+my $line;
+
+if ($opt_i || $opt_n || $opt_v || $opt_d) {
+    # Check that a given explicit version number is sensible.
+    if ($opt_v || $opt_d) {
+	if($opt_v) {
+	    $NEW_VERSION=$opt_v;
+	} else {
+	    my $pwd = cwd();
+	    # The directory name should be <package>-<version>
+	    my $version_chars = '0-9a-zA-Z+\.';
+	    $version_chars .= ':' if defined $EPOCH;
+	    $version_chars .= '\-' if $UVERSION ne $SVERSION;
+	    if ($pwd =~ m%.*/\Q$PACKAGE\E-([0-9][$version_chars]*)$%) {
+		$NEW_VERSION=$1;
+		if ($NEW_VERSION eq $UVERSION) {
+		    # So it's a Debian-native package
+		    if ($SVERSION eq $UVERSION) {
+			fatal "New version taken from directory ($NEW_VERSION) is equal to\n" .
+			    "the current version number ($UVERSION)!";
+		    }
+		    # So we just increment the Debian revision
+		    warn "$progname warning: Incrementing Debian revision without altering\nupstream version number.\n";
+		    $VERSION =~ /^(.*?)([a-yA-Y][a-zA-Z]*|\d*)$/;
+		    my $end = $2;
+		    if ($end eq '') {
+			fatal "Cannot determine new Debian revision; please use -v option!";
+		    }
+		    $end++;
+		    $NEW_VERSION="$1$end";
+		} else {
+		    $NEW_VERSION = "$EPOCH:$NEW_VERSION" if defined $EPOCH;
+		    $NEW_VERSION .= "-1";
+		}
+	    } else {
+		fatal "The directory name must be <package>-<version> for -d to work!\n" .
+		    "No underscores allowed!";
+	    }
+	    # Don't try renaming the directory in this case!
+	    $opt_p=1;
+	}
+
+	if (system("dpkg --compare-versions $VERSION lt $NEW_VERSION" .
+		  " 2>/dev/null 1>&2")) {
+	    fatal "New version specified ($NEW_VERSION) is less than\n" .
+		    "the current version number ($VERSION)!";
+	}
+
+	($NEW_SVERSION=$NEW_VERSION) =~ s/^\d+://;
+	($NEW_UVERSION=$NEW_SVERSION) =~ s/-[^-]*$//;
+    }
+
+    # We use the following criteria for the version and release number:
+    # the last component of the version number is used as the
+    # release number.  If this is not a Debian native package, then the
+    # upstream version number is everything up to the final '-', not
+    # including epochs.
+
+    if (! $NEW_VERSION) {
+	if ($VERSION =~ /(.*?)([a-yA-Y][a-zA-Z]*|\d*)$/i) {
+	    my $end=$2;
+            my $start=$1;
+            # If it's not already an NMU make it so
+            # otherwise we can be safe if we behave like dch -i
+	    if ($opt_n and not $start =~ /\.$/) {
+	    	$end += 0.1;
+            } else {
+                $end++;
+            }
+            $NEW_VERSION = "$start$end";
+	    ($NEW_SVERSION=$NEW_VERSION) =~ s/^\d+://;
+	    ($NEW_UVERSION=$NEW_SVERSION) =~ s/-[^-]*$//;
+	} else {
+	    fatal "Error parsing version number: $VERSION";
+	}
+    }
+
+    my $distribution = $opt_D || $DISTRIBUTION;
+    print O "$PACKAGE ($NEW_VERSION) $distribution; ",
+        "urgency=$opt_u\n\n";
+
+    if ($opt_n) {
+        print O "  * Non-maintainer upload.\n";
+        $line = 1;
+    }
+    if (@closes_text or $TEXT) {
+	# format it nicely
+	foreach $CHGLINE (@closes_text) {
+	    write O;
+	}
+	if ($CHGLINE = $TEXT) {
+	    write O;
+	}
+    } else {
+	print O "  * \n";
+    }
+    $line += 3;
+    print O "\n -- $MAINTAINER <$EMAIL>  $DATE\n\n";
+
+    # Copy the old changelog file to the new one
+    local $/ = undef;
+    print O <S>;
+}
+else { # $opt_a = 1
+    # This means we just have to generate a new * entry in changelog
+    $NEW_VERSION=$VERSION;
+    $NEW_SVERSION=$SVERSION;
+    $NEW_UVERSION=$UVERSION;
+
+    # The first lines are as we have already found
+    print O $CHANGES;
+
+    if (@closes_text or $TEXT) {
+	# format it nicely
+	foreach $CHGLINE (@closes_text) {
+	    write O;
+	}
+	if ($CHGLINE = $TEXT) {
+	    write O;
+	}
+    } else {
+	print O "  * \n";
+    }
+
+    print O "\n -- $MAINTAINER <$EMAIL>  $DATE\n";
+
+    # Copy the rest of the changelog file to new one
+    $line=-1;
+    while (<S>) { $line++; last if /^ --/; }
+    # Slurp the rest....
+    local $/ = undef;
+    print O <S>;
+}
+
+close S or fatal "Error closing debian/changelog: $!";
+close O or fatal "Error closing temporary changelog: $!";
+
+if ($warnings) {
+    if ($warnings>1) {
+	warn "$progname: Did you see those $warnings warnings?  Press RETURN to continue...\n";
+    } else {
+	warn "$progname: Did you see that warning?  Press RETURN to continue...\n";
+    }
+    my $garbage = <STDIN>;
+}
+
+# Now Run the Editor; always run if doing "closes" to give a chance to check
+if (! $TEXT or @closes_text) {
+    my $mtime = (stat("debian/changelog.dch"))[9];
+    defined $mtime or fatal
+	"Error getting modification time of temporary changelog: $!";
+
+    system("sensible-editor +$line debian/changelog.dch") == 0 or
+    fatal "Error editing the changelog";
+
+    if (! @closes_text) { # so must have a changelog added by hand
+	my $newmtime = (stat("debian/changelog.dch"))[9];
+	defined $newmtime or fatal
+	    "Error getting modification time of temporary changelog: $!";
+	if ($mtime == $newmtime) {
+	    warn "$progname: Changelog unmodified; exiting.\n";
+	    exit 0;
+	}
+    }
+}
+
+copy("debian/changelog.dch","debian/changelog") or
+    fatal "Couldn't replace changelog with new changelog: $!";
+
+# Now find out what the new package version number is if we need to
+# rename the directory
+
+if ((cwd() =~ m%/\Q$PACKAGE\E-\Q$UVERSION\E$%) && !$opt_p) {
+    # Find the current version number etc.
+    my ($new_version, $new_sversion, $new_uversion);
+    open PARSED, "dpkg-parsechangelog |"
+	or fatal "Cannot execute dpkg-parsechangelog: $!";
+    while (<PARSED>) {
+	if (/^Version:\s(.+?)\s*$/) { $new_version=$1; }
+    }
+
+    close PARSED
+	or fatal "Problem executing dpkg-parsechangelog: $!";
+    if ($?) { fatal "dpkg-parsechangelog failed!" }
+
+    fatal "No version number in changelog!"
+	unless defined $new_version;
+
+    # Is this a native Debian package, i.e., does it have a - in the
+    # version number?
+    $new_version =~ s/^\d+://;  # remove epoch
+    ($new_uversion=$new_version) =~ s/-[^-]*$//;  # remove revision
+
+    if ($new_uversion ne $UVERSION) {
+	# Then we rename the directory
+	if (move(cwd(), "../$PACKAGE-$new_uversion")) {
+	    warn "$progname warning: your current directory has been renamed to:\n../$PACKAGE-$new_uversion\n";
+	} else {
+	    warn "$progname warning: Couldn't rename directory: $!";
+	}
+    }
+}
+
+exit 0;
+
+
+# Format for standard Debian changelogs
+format O =
+  * ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
+    $CHGLINE
+ ~~ ^<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
+    $CHGLINE
+.
+
+sub BEGIN {
+    # Initialise the variable
+    $tmpchk=0;
+}
+
+sub END {
+    unlink "debian/changelog.dch" or
+	warn "$progname warning: Could not remove debian/changelog.dch"
+	    if $tmpchk;
+}
+
+sub fatal($) {
+    my ($pack,$file,$line);
+    ($pack,$file,$line) = caller();
+    (my $msg = "$progname: fatal error at line $line:\n@_\n") =~ tr/\0//d;
+    $msg =~ s/\n\n$/\n/;
+    die $msg;
+}
+
+# Reverse of master.debian.org:/org/bugs.debian.org/cgi-bin/common.pl
+sub unhtmlsanit {
+    my %saniarray = ('lt','<', 'gt','>', 'amp','&', 'quot', '"');
+    my $in = shift || "";
+    $in =~ s/&(lt|gt|amp|quot);/$saniarray{$1}/g;
+    return $in;
+}
+
+# Is the environment variable valid or not?
+sub check_env_utf8 {
+    my $envvar = $_[0];
+
+    if (exists $ENV{$envvar} and $ENV{$envvar} ne '') {
+	if (! decode_utf8($ENV{$envvar})) {
+	    warn "$progname warning: environment variable $envvar not UTF-8 encoded; ignoring\n";
+	} else {
+	    $env{$envvar} = decode_utf8($ENV{$envvar});
+	}
+    }
+}
diff -ruN devscripts/debclean.1 devscripts.new/debclean.1
--- devscripts/debclean.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debclean.1	Tue Jan 18 22:03:39 2005
@@ -85,7 +85,7 @@
 .B \-\-version
 Display version and copyright information and exit successfully.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debclean.sh devscripts.new/debclean.sh
--- devscripts/debclean.sh	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debclean.sh	Tue Jan 18 22:03:43 2005
@@ -75,7 +75,7 @@
 	    eval "$var=\$DEFAULT_$var"
 	done
 
-	for file in /etc/devscripts.conf ~/.devscripts
+	for file in @ ~/.devscripts
 	  do
 	  [ -r $file ] && . $file
 	done
diff -ruN devscripts/debdiff.1 devscripts.new/debdiff.1
--- devscripts/debdiff.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debdiff.1	Tue Jan 18 22:03:43 2005
@@ -112,7 +112,7 @@
 .BR \-\-version ", " \-v
 Show version and copyright information.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced by a shell in that order to set
 configuration variables.  Command line options can be used to override
 configuration file settings.  Environment variable settings are
diff -ruN devscripts/debdiff.pl devscripts.new/debdiff.pl
--- devscripts/debdiff.pl	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debdiff.pl	Tue Jan 18 22:03:43 2005
@@ -91,7 +91,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'DEBDIFF_DIRS' => 'no',
 		       'DEBDIFF_CONTROL' => 'yes',
@@ -155,7 +155,7 @@
 
 	# Ensure from and to values all begin with a slash
 	# From potato onward, dpkg -c gives filenames such as:
-	#  ./usr/lib/filename
+	#  .@FINKPREFIX@/lib/filename
 	my $from = shift;
 	my $to   = shift;
 	$from =~ s%^\./%/%;
@@ -532,7 +532,7 @@
 exit 0 unless defined $singledeb[1] and defined $singledeb[2]
     and $compare_control;
 
-if (! -x "/usr/bin/wdiff") {
+if (! -x "@FINKPREFIX@/bin/wdiff") {
     warn "Can't compare control files; wdiff package not installed\n";
     exit 0;
 }
diff -ruN devscripts/debi.1 devscripts.new/debi.1
--- devscripts/debi.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debi.1	Tue Jan 18 22:03:43 2005
@@ -85,7 +85,7 @@
 \fB\-\-help\fR, \fB\-\-version\fR
 Show help message and version information respectively.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debi.pl devscripts.new/debi.pl
--- devscripts/debi.pl	Mon Aug 16 23:47:45 2004
+++ devscripts.new/debi.pl	Tue Jan 18 22:03:43 2005
@@ -115,7 +115,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'DEVSCRIPTS_CHECK_DIRNAME_LEVEL' => 1,
 		       'DEVSCRIPTS_CHECK_DIRNAME_REGEX' => 'PACKAGE(-.*)?',
diff -ruN devscripts/debpkg-wrapper.c devscripts.new/debpkg-wrapper.c
--- devscripts/debpkg-wrapper.c	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debpkg-wrapper.c	Tue Jan 18 22:03:43 2005
@@ -6,7 +6,7 @@
 #include <errno.h>
 #include <string.h>
 
-#define REAL_PATH "/usr/share/devscripts/debpkg"
+#define REAL_PATH "@FINKPREFIX@/share/devscripts/debpkg"
 
 int main(int ac, char **av)
 {
diff -ruN devscripts/debpkg.pl devscripts.new/debpkg.pl
--- devscripts/debpkg.pl	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debpkg.pl	Tue Jan 18 22:03:43 2005
@@ -67,7 +67,7 @@
 			$var =~ /^LC_[A-Z]+$/;
 }
 
-$ENV{'PATH'} = "/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11";
+$ENV{'PATH'} = "/sw/bin:/sw/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11";
 # $ENV{'PATH'} = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11";
 $ENV{'TERM'}='dumb' unless defined $ENV{'TERM'};
 
diff -ruN devscripts/debrelease.1 devscripts.new/debrelease.1
--- devscripts/debrelease.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debrelease.1	Tue Jan 18 22:03:43 2005
@@ -91,7 +91,7 @@
 .B \-\-version
 Display version and copyright information and exit successfully.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debrelease.sh devscripts.new/debrelease.sh
--- devscripts/debrelease.sh	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debrelease.sh	Tue Jan 18 22:03:43 2005
@@ -101,7 +101,7 @@
 	    eval "$var=\$DEFAULT_$var"
 	done
 
-	for file in /etc/devscripts.conf ~/.devscripts
+	for file in @ ~/.devscripts
 	  do
 	  [ -r $file ] && . $file
 	done
diff -ruN devscripts/debrsign.1 devscripts.new/debrsign.1
--- devscripts/debrsign.1	Fri Jul 30 16:19:42 2004
+++ devscripts.new/debrsign.1	Tue Jan 18 22:03:43 2005
@@ -48,7 +48,7 @@
 All other options are passed on to \fBdebsign\fR on the remote
 machine.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debrsign.sh devscripts.new/debrsign.sh
--- devscripts/debrsign.sh	Fri Sep  3 02:26:27 2004
+++ devscripts.new/debrsign.sh	Tue Jan 18 22:03:43 2005
@@ -97,7 +97,7 @@
 # I guess maintainers will have to be careful, and there's no way around
 # this in a shell script.
 unset IFS
-PATH=/usr/local/bin:/usr/bin:/bin
+PATH=/sw/bin:/sw/sbin:/usr/local/bin:/usr/bin:/bin
 umask `perl -e 'printf "%03o\n", umask | 022'`
 
 eval $(
@@ -105,7 +105,7 @@
     for var in $VARS; do
         eval "$var=\$DEFAULT_$var"
     done
-    for file in /etc/devscripts.conf ~/.devscripts; do
+    for file in @ ~/.devscripts; do
       [ -r $file ] && . $file
     done
 
diff -ruN devscripts/debsign.1 devscripts.new/debsign.1
--- devscripts/debsign.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debsign.1	Tue Jan 18 22:03:43 2005
@@ -86,7 +86,7 @@
 .B \-\-version
 Display version and copyright information and exit successfully.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/debsign.sh devscripts.new/debsign.sh
--- devscripts/debsign.sh	Mon Sep  6 17:30:38 2004
+++ devscripts.new/debsign.sh	Tue Jan 18 22:03:43 2005
@@ -177,7 +177,7 @@
 	    eval "$var=\$DEFAULT_$var"
 	done
 
-	for file in /etc/devscripts.conf ~/.devscripts
+	for file in @ ~/.devscripts
 	  do
 	  [ -r $file ] && . $file
 	done
diff -ruN devscripts/debuild.1 devscripts.new/debuild.1
--- devscripts/debuild.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/debuild.1	Tue Jan 18 22:03:43 2005
@@ -189,7 +189,7 @@
 \fB\-D\fR
 Run \fBdpkg-checkbuilddeps\fR to check build dependencies.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced by a shell in that order to set
 configuration variables.  Command line options can be used to override
 some of these configuration file settings, otherwise the
diff -ruN devscripts/debuild.pl devscripts.new/debuild.pl
--- devscripts/debuild.pl	Fri Sep  3 02:26:27 2004
+++ devscripts.new/debuild.pl	Tue Jan 18 22:03:43 2005
@@ -205,7 +205,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'DEBUILD_PRESERVE_ENV' => 'no',
 		       'DEBUILD_PRESERVE_ENVVARS' => '',
@@ -494,7 +494,7 @@
     $ENV{'PATH'} =~ /^(.*)$/;
     $ENV{'PATH'} = $1;
 } else {
-    $ENV{'PATH'} = "/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11"
+    $ENV{'PATH'} = "/sw/bin:/sw/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11"
 }
 $save_vars{'PATH'}=1;
 $ENV{'TERM'}='dumb' unless exists $ENV{'TERM'};
@@ -823,7 +823,7 @@
 	    warn <<EOT;
 You do not appear to have all build dependencies properly met.
 If you have the pbuilder package installed, you can run
-/usr/lib/pbuilder/pbuilder-satisfydepends as root to install the
+@FINKPREFIX@/lib/pbuilder/pbuilder-satisfydepends as root to install the
 required packages, or you can do it manually using dpkg or apt using
 the error messages just above this message.
 EOT
diff -ruN devscripts/devscripts.1 devscripts.new/devscripts.1
--- devscripts/devscripts.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/devscripts.1	Tue Jan 18 22:03:43 2005
@@ -5,11 +5,11 @@
 The \fBdevscripts\fR package provides a collection of scripts which
 may be of use to Debian developers and others wishing to build Debian
 packages.  For a summary of the available scripts, please see the file
-\fI/usr/share/doc/devscripts/README.gz\fR, and for full details, please
+\fI@FINKPREFIX@/share/doc/devscripts/README.gz\fR, and for full details, please
 see the individual manpages.  They are contributed by multiple
 developers; for details of the authors, please see the code or
 manpages.
 
-Also, the directory \fI/usr/share/doc/devscripts/examples\fR contains
+Also, the directory \fI@FINKPREFIX@/share/doc/devscripts/examples\fR contains
 examples of \fBprocmail\fR and \fBexim\fR scripts for sorting mail
 arriving to Debian mailing lists.
diff -ruN devscripts/devscripts.conf.5 devscripts.new/devscripts.conf.5
--- devscripts/devscripts.conf.5	Thu Jul 29 18:21:56 2004
+++ devscripts.new/devscripts.conf.5	Tue Jan 18 22:03:43 2005
@@ -10,10 +10,10 @@
 Every script in the \fBdevscripts\fR package which makes use of values
 from these configuration files describes the specific settings
 recognised in its own manpage.  (For a list of the scripts, either see
-\fI/usr/share/doc/devscripts/README.gz\fR or look at the output of
-\fIdpkg -L devscripts | grep /usr/bin\fR.)
+\fI@FINKPREFIX@/share/doc/devscripts/README.gz\fR or look at the output of
+\fIdpkg -L devscripts | grep @FINKPREFIX@/bin\fR.)
 .PP
-The two configuration files are \fI/etc/devscripts.conf\fR for
+The two configuration files are \fI@\fR for
 system-wide defaults and \fI~/.devscripts\fR for per-user settings.
 They are written with \fBbash\fR(1) syntax, but should only have
 comments and simple variable assignments in them; they are both
@@ -28,11 +28,11 @@
 .PP
 For a list of all of the available options variables, along with their
 default settings, see the example configuration file
-\fI/usr/share/doc/devscripts/devscripts.conf.ex\fR.  This is copied to
-\fI/etc/devscripts.conf\fR when the \fBdevscripts\fR package is first
+\fI@FINKPREFIX@/share/doc/devscripts/devscripts.conf.ex\fR.  This is copied to
+\fI@\fR when the \fBdevscripts\fR package is first
 installed.  Information about configuration options introduced in
 newer versions of the package will be appended to
-\fI/etc/devscripts.conf\fR when the package is upgraded.
+\fI@\fR when the package is upgraded.
 .PP
 Every script which reads the configuration files can be forced to
 ignore them by using \fB\-\-no-conf\fR as the \fIfirst\fR command-line
@@ -54,7 +54,7 @@
 .SH "SEE ALSO"
 .BR devscripts (1)
 and
-.IR /usr/share/doc/devscripts/README.gz.
+.IR @FINKPREFIX@/share/doc/devscripts/README.gz.
 .SH AUTHOR
 This manpage was written for the \fBdevscripts\fR package by the
 package maintainer Julian Gilbey <jdg@debian.org>.
diff -ruN devscripts/dpkg-depcheck.1 devscripts.new/dpkg-depcheck.1
--- devscripts/dpkg-depcheck.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/dpkg-depcheck.1	Tue Jan 18 22:03:43 2005
@@ -100,7 +100,7 @@
 .BR \-v ", " \-\-version
 Display version and copyright information and exit.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/dpkg-depcheck.pl devscripts.new/dpkg-depcheck.pl
--- devscripts/dpkg-depcheck.pl	Tue Aug 24 21:41:50 2004
+++ devscripts.new/dpkg-depcheck.pl	Tue Jan 18 22:03:43 2005
@@ -23,7 +23,7 @@
 use File::Basename;
 use Getopt::Long;
 
-use lib '/usr/share/devscripts';
+use lib '@FINKPREFIX@/share/devscripts';
 use Devscripts::Set;
 use Devscripts::Packages;
 use Devscripts::Symlinks;
@@ -39,12 +39,12 @@
 
 # libvfork is taken from dpkg-genbuilddeps, written by
 # Ben Collins <bcollins@debian.org>
-our $vforklib = "/usr/lib/devscripts/libvfork.so.0";
+our $vforklib = "@FINKPREFIX@/lib/devscripts/libvfork.so.0";
 
 # A list of files that do not belong to a Debian package but are known
 # to never create a dependency
 our @known_files = ($vforklib, "/etc/ld.so.cache", "/etc/dpkg/shlibs.default",
-		    "/etc/dpkg/dpkg.cfg", "/etc/devscripts.conf");
+		    "/etc/dpkg/dpkg.cfg", "@");
 
 # This will be given information about features later on
 our (%feature, %default_feature);
@@ -146,7 +146,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'DPKG_DEPCHECK_OPTIONS' => '',
 		       );
diff -ruN devscripts/dscverify.1 devscripts.new/dscverify.1
--- devscripts/dscverify.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/dscverify.1	Tue Jan 18 22:03:43 2005
@@ -27,7 +27,7 @@
 .B \-\-version
 Display version and copyright information and exit successfully.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced by a shell in that order to set
 configuration variables.  Environment variable settings are ignored
 for this purpose.  If the first command line option given is
diff -ruN devscripts/dscverify.pl devscripts.new/dscverify.pl
--- devscripts/dscverify.pl	Thu Jul 29 18:21:56 2004
+++ devscripts.new/dscverify.pl	Tue Jan 18 22:03:43 2005
@@ -89,9 +89,9 @@
 sub get_rings {
     my @rings = @_;
     for (qw(/org/keyring.debian.org/keyrings/debian-keyring.gpg
-	    /usr/share/keyrings/debian-keyring.gpg
+	    @FINKPREFIX@/share/keyrings/debian-keyring.gpg
 	    /org/keyring.debian.org/keyrings/debian-keyring.pgp
-	    /usr/share/keyrings/debian-keyring.pgp)) {
+	    @FINKPREFIX@/share/keyrings/debian-keyring.pgp)) {
 	push @rings, $_ if -r;
     }
     return @rings if @rings;
@@ -223,7 +223,7 @@
 	$modified_conf_msg = "  (no configuration files read)";
 	shift @ARGV;
     } else {
-	my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+	my @config_files = ('@', '~/.devscripts');
 	my %config_vars = (
 			   'DSCVERIFY_KEYRINGS' => '',
 			   );
diff -ruN devscripts/grep-excuses.1 devscripts.new/grep-excuses.1
--- devscripts/grep-excuses.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/grep-excuses.1	Tue Jan 18 22:03:43 2005
@@ -22,7 +22,7 @@
 .B \-\-version
 Show version and copyright information.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/grep-excuses.pl devscripts.new/grep-excuses.pl
--- devscripts/grep-excuses.pl	Thu Jul 29 18:21:56 2004
+++ devscripts.new/grep-excuses.pl	Tue Jan 18 22:03:43 2005
@@ -67,7 +67,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'GREP_EXCUSES_MAINTAINER' => '',
 		       );
diff -ruN devscripts/plotchangelog.1 devscripts.new/plotchangelog.1
--- devscripts/plotchangelog.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/plotchangelog.1	Tue Jan 18 22:03:43 2005
@@ -104,7 +104,7 @@
 be display on the same graph. The files may be compressed with gzip. Any
 text in them that is not in Debian changelog format will be ignored.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced by a shell in that order to set
 configuration variables.  The \fB\-\-no\-conf\fR option can be used to
 prevent reading these files.  Environment variable settings are
diff -ruN devscripts/plotchangelog.pl devscripts.new/plotchangelog.pl
--- devscripts/plotchangelog.pl	Thu Jul 29 18:21:56 2004
+++ devscripts.new/plotchangelog.pl	Tue Jan 18 22:03:43 2005
@@ -98,7 +98,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'PLOTCHANGELOG_OPTIONS' => '',
 		       'PLOTCHANGELOG_GNUPLOT' => '',
diff -ruN devscripts/rc-alert.pl devscripts.new/rc-alert.pl
--- devscripts/rc-alert.pl	Thu Jul 29 18:21:56 2004
+++ devscripts.new/rc-alert.pl	Tue Jan 18 22:03:43 2005
@@ -19,7 +19,7 @@
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
 use strict;
-use lib '/usr/share/devscripts';
+use lib '@FINKPREFIX@/share/devscripts';
 use Devscripts::Packages;
 use File::Basename;
 
diff -ruN devscripts/uscan.1 devscripts.new/uscan.1
--- devscripts/uscan.1	Fri Jul 30 20:01:12 2004
+++ devscripts.new/uscan.1	Tue Jan 18 22:03:43 2005
@@ -240,7 +240,7 @@
 .B \-\-version
 Display version information.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced by a shell in that order to set
 configuration variables.  These may be overridden by command line
 options.  Environment variable settings are ignored for this purpose.
diff -ruN devscripts/uscan.pl devscripts.new/uscan.pl
--- devscripts/uscan.pl	Tue Aug 24 21:41:50 2004
+++ devscripts.new/uscan.pl	Tue Jan 18 22:03:43 2005
@@ -28,7 +28,7 @@
 use Cwd;
 use File::Basename;
 use Getopt::Long;
-use lib '/usr/share/devscripts';
+use lib '@FINKPREFIX@/share/devscripts';
 use Devscripts::Versort;
 BEGIN {
     eval { require LWP::UserAgent; };
@@ -117,7 +117,7 @@
     $modified_conf_msg = "  (no configuration files read)";
     shift;
 } else {
-    my @config_files = ('/etc/devscripts.conf', '~/.devscripts');
+    my @config_files = ('@', '~/.devscripts');
     my %config_vars = (
 		       'USCAN_DOWNLOAD' => 'yes',
 		       'USCAN_PASV' => 'default',
diff -ruN devscripts/uupdate.1 devscripts.new/uupdate.1
--- devscripts/uupdate.1	Thu Jul 29 18:21:56 2004
+++ devscripts.new/uupdate.1	Tue Jan 18 22:03:43 2005
@@ -83,7 +83,7 @@
 .B \-\-version
 Display version and copyright information and exit successfully.
 .SH "CONFIGURATION VARIABLES"
-The two configuration files \fI/etc/devscripts.conf\fR and
+The two configuration files \fI@\fR and
 \fI~/.devscripts\fR are sourced in that order to set configuration
 variables.  Command line options can be used to override configuration
 file settings.  Environment variable settings are ignored for this
diff -ruN devscripts/uupdate.sh devscripts.new/uupdate.sh
--- devscripts/uupdate.sh	Sat Nov 27 20:51:03 2004
+++ devscripts.new/uupdate.sh	Tue Jan 18 22:03:43 2005
@@ -126,7 +126,7 @@
 	    eval "$var=\$DEFAULT_$var"
 	done
 
-	for file in /etc/devscripts.conf ~/.devscripts
+	for file in @ ~/.devscripts
 	  do
 	  [ -r $file ] && . $file
 	done
