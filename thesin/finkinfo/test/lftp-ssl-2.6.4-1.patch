diff -ruN lftp-2.6.4.orig/configure lftp-2.6.4/configure
--- lftp-2.6.4.orig/configure	2002-12-25 07:20:54.000000000 -0700
+++ lftp-2.6.4/configure	2003-01-09 00:37:59.000000000 -0700
@@ -3231,7 +3231,7 @@
 cat conftest.$ac_ext >&5
 
 	 old_LIBS="$LIBS"
-	 LIBS="-lsupc++ $LIBS"
+	 LIBS="$LIBS"
 	 cat >conftest.$ac_ext <<_ACEOF
 #line $LINENO "configure"
 #include "confdefs.h"
@@ -7858,6 +7858,7 @@
 else
   enable_shared=yes
 fi;
+
 # Check whether --enable-static or --disable-static was given.
 if test "${enable_static+set}" = set; then
   enableval="$enable_static"
@@ -8111,7 +8112,8 @@
   ;;
 
 darwin* | rhapsody*)
-  lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
+  #lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
+  lt_cv_deplibs_check_method='pass_all'
   lt_cv_file_magic_cmd='/usr/bin/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
@@ -9911,11 +9913,18 @@
     ;;
 
   darwin* | rhapsody*)
-    allow_undefined_flag='-undefined suppress'
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag='-flat_namespace -undefined suppress'     
+      ;;
+    esac
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname $(test -n "$verstring" -a x$verstring != x0.0 && echo $verstring)'
+    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #_LT_AC_TAGVAR(archive_expsym_cmds, )="$_LT_AC_TAGVAR(archive_cmds, )"' && strip -s $export_symbols'
     hardcode_direct=yes
@@ -10131,6 +10140,26 @@
     fix_srcfile_path='`cygpath -w "$srcfile"`'
     ;;
 
+  darwin* | rhapsody*)
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag='-flat_namespace -undefined suppress'
+      ;;
+    esac
+    # FIXME: Relying on posixy $() will cause problems for
+    #        cross-compilation, but unfortunately the echo tests do not
+    #        yet detect zsh echo's removal of \ escapes.
+    archive_cmds='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+    # We need to add '_' to the symbols in $export_symbols first
+    #_LT_AC_TAGVAR(archive_expsym_cmds, )="$_LT_AC_TAGVAR(archive_cmds, )"' && strip -s $export_symbols'
+    hardcode_direct=yes
+    hardcode_shlibpath_var=no
+    whole_archive_flag_spec='-all_load $convenience'
+    ;;
+
   dgux*)
     archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
     hardcode_libdir_flag_spec='-L$libdir'
@@ -12409,6 +12438,25 @@
         ;;
     esac
     ;;
+  darwin* | rhapsody*)
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag_CXX='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag_CXX='-flat_namespace -undefined suppress'
+      ;;
+    esac
+    # FIXME: Relying on posixy $() will cause problems for
+    #        cross-compilation, but unfortunately the echo tests do not
+    #        yet detect zsh echo's removal of \ escapes.
+    archive_cmds_CXX='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+    # We need to add '_' to the symbols in $export_symbols first
+    #_LT_AC_TAGVAR(archive_expsym_cmds, CXX)="$_LT_AC_TAGVAR(archive_cmds, CXX)"' && strip -s $export_symbols'
+    hardcode_direct_CXX=yes
+    hardcode_shlibpath_var_CXX=no
+    whole_archive_flag_spec_CXX='-all_load $convenience'
+    ;;
   dgux*)
     case $cc_basename in
       ec++)
@@ -13402,11 +13450,18 @@
     ;;
 
   darwin* | rhapsody*)
-    allow_undefined_flag_CXX='-undefined suppress'
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag_CXX='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag_CXX='-flat_namespace -undefined suppress'     
+      ;;
+    esac
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds_CXX='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname $(test -n "$verstring" -a x$verstring != x0.0 && echo $verstring)'
+    archive_cmds_CXX='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #_LT_AC_TAGVAR(archive_expsym_cmds, CXX)="$_LT_AC_TAGVAR(archive_cmds, CXX)"' && strip -s $export_symbols'
     hardcode_direct_CXX=yes
@@ -13622,6 +13677,26 @@
     fix_srcfile_path='`cygpath -w "$srcfile"`'
     ;;
 
+  darwin* | rhapsody*)
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag_CXX='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag_CXX='-flat_namespace -undefined suppress'
+      ;;
+    esac
+    # FIXME: Relying on posixy $() will cause problems for
+    #        cross-compilation, but unfortunately the echo tests do not
+    #        yet detect zsh echo's removal of \ escapes.
+    archive_cmds_CXX='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+    # We need to add '_' to the symbols in $export_symbols first
+    #_LT_AC_TAGVAR(archive_expsym_cmds, CXX)="$_LT_AC_TAGVAR(archive_cmds, CXX)"' && strip -s $export_symbols'
+    hardcode_direct_CXX=yes
+    hardcode_shlibpath_var_CXX=no
+    whole_archive_flag_spec_CXX='-all_load $convenience'
+    ;;
+
   dgux*)
     archive_cmds_CXX='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
     hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -15866,11 +15941,18 @@
     ;;
 
   darwin* | rhapsody*)
-    allow_undefined_flag_GCJ='-undefined suppress'
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag_GCJ='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag_GCJ='-flat_namespace -undefined suppress'     
+      ;;
+    esac
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds_GCJ='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts -install_name $rpath/$soname $(test -n "$verstring" -a x$verstring != x0.0 && echo $verstring)'
+    archive_cmds_GCJ='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #_LT_AC_TAGVAR(archive_expsym_cmds, GCJ)="$_LT_AC_TAGVAR(archive_cmds, GCJ)"' && strip -s $export_symbols'
     hardcode_direct_GCJ=yes
@@ -16086,6 +16168,26 @@
     fix_srcfile_path='`cygpath -w "$srcfile"`'
     ;;
 
+  darwin* | rhapsody*)
+    case "$host_os" in
+    rhapsody* | darwin1.[012])
+      allow_undefined_flag_GCJ='-undefined suppress'
+      ;;
+    *) # Darwin 1.3 on
+      allow_undefined_flag_GCJ='-flat_namespace -undefined suppress'
+      ;;
+    esac
+    # FIXME: Relying on posixy $() will cause problems for
+    #        cross-compilation, but unfortunately the echo tests do not
+    #        yet detect zsh echo's removal of \ escapes.
+    archive_cmds_GCJ='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linkopts $(test .$module != .yes && echo -install_name $rpath/$soname $verstring)'
+    # We need to add '_' to the symbols in $export_symbols first
+    #_LT_AC_TAGVAR(archive_expsym_cmds, GCJ)="$_LT_AC_TAGVAR(archive_cmds, GCJ)"' && strip -s $export_symbols'
+    hardcode_direct_GCJ=yes
+    hardcode_shlibpath_var_GCJ=no
+    whole_archive_flag_spec_GCJ='-all_load $convenience'
+    ;;
+
   dgux*)
     archive_cmds_GCJ='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
     hardcode_libdir_flag_spec_GCJ='-L$libdir'
@@ -17849,7 +17951,7 @@
 
 
 
-LIBTOOL="$LIBTOOL --silent"
+LIBTOOL="$LIBTOOL"
 
 
    echo "$as_me:$LINENO: checking if math library is needed" >&5
@@ -20237,7 +20339,7 @@
 for ac_header in fcntl.h sys/time.h errno.h stdlib.h varargs.h dirent.h\
  termios.h termio.h sys/select.h sys/poll.h sys/stropts.h string.h memory.h\
  strings.h sys/ioctl.h dlfcn.h resolv.h arpa/nameser.h netinet/tcp.h\
- langinfo.h endian.h regex.h locale.h
+ langinfo.h machine/endian.h endian.h regex.h locale.h
 do
 as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
 if eval "test \"\${$as_ac_Header+set}\" = set"; then
@@ -22519,39 +22621,35 @@
   cat >conftest.$ac_ext <<_ACEOF
 #line $LINENO "configure"
 #include "confdefs.h"
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char poll(); below.  */
+#include <assert.h>
+/* Override any gcc2 internal prototype to avoid an error.  */
+/* We use char because int might match the return type of a gcc2
+    builtin and then its argument prototype would still apply.  */
+char poll();
 
-	       #include <sys/types.h>
-	       #ifdef HAVE_SYS_POLL_H
-	       #include <sys/poll.h>
-	       #else
-	       #include <poll.h>
-	       #endif
-
-	       int main()
-	       {
-		  struct pollfd pfd={5,POLLOUT}; /* fd 5 is config.log */
-		  return(!(poll(0,0,0)==0 && poll(&pfd,1,0)==1));
-	       }
+int main() {
 
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined (__stub_poll) || defined (__stub___poll)
+choke me
+#else
+poll();
+#endif
+
+; return 0; }
 _ACEOF
-rm -f conftest$ac_exeext
-if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
-  (eval $ac_link) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-  lftp_cv_func_poll_works=yes;
+if { (eval echo configure:7310: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
+  rm -rf conftest*
+  eval "lftp_cv_func_poll_works=yes";
 else
-  echo "$as_me: program exited with status $ac_status" >&5
-echo "$as_me: failed program was:" >&5
-cat conftest.$ac_ext >&5
-( exit $ac_status )
-lftp_cv_func_poll_works=no;
+  echo "$as_me: failed program was:" >&5
+  cat conftest.$ac_ext >&5
+  rm -rf conftest*
+  eval "lftp_cv_func_poll_works=no";
 fi
 rm -f core core.* *.core conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
 fi
diff -ruN lftp-2.6.4.orig/include/config.h.in lftp-2.6.4/include/config.h.in
--- lftp-2.6.4.orig/include/config.h.in	2002-12-25 07:24:18.000000000 -0700
+++ lftp-2.6.4/include/config.h.in	2003-01-07 09:53:45.000000000 -0700
@@ -102,6 +102,9 @@
 /* Define to 1 if you have the <endian.h> header file. */
 #undef HAVE_ENDIAN_H
 
+/* Define to 1 if you have the <machine/endian.h> header file. */
+#undef HAVE_MACHINE_ENDIAN_H
+
 /* define if you have global environ variable */
 #undef HAVE_ENVIRON
 
diff -ruN lftp-2.6.4.orig/ltmain.sh lftp-2.6.4/ltmain.sh
--- lftp-2.6.4.orig/ltmain.sh	2002-06-03 04:59:03.000000000 -0600
+++ lftp-2.6.4/ltmain.sh	2003-01-08 23:29:54.000000000 -0700
@@ -4410,10 +4410,10 @@
 
 # Directory that this library needs to be installed in:
 libdir='$install_libdir'"
-	  if test "$installed" = no && test $need_relink = yes; then
-	    $echo >> $output "\
-relink_command=\"$relink_command\""
-	  fi
+#	  if test "$installed" = no && test $need_relink = yes; then
+#	    $echo >> $output "\
+#relink_command=\"$relink_command\""
+#	  fi
 	done
       fi
 
diff -ruN lftp-2.6.4.orig/src/NetAccess.cc lftp-2.6.4/src/NetAccess.cc
--- lftp-2.6.4.orig/src/NetAccess.cc	2002-12-25 06:44:31.000000000 -0700
+++ lftp-2.6.4/src/NetAccess.cc	2003-01-08 21:26:23.000000000 -0700
@@ -22,6 +22,7 @@
 
 #include <config.h>
 
+#include <sys/types.h>
 #include <errno.h>
 #include <assert.h>
 #include <math.h>
diff -ruN lftp-2.6.4.orig/src/md5.c lftp-2.6.4/src/md5.c
--- lftp-2.6.4.orig/src/md5.c	2000-01-26 06:01:41.000000000 -0700
+++ lftp-2.6.4/src/md5.c	2003-01-07 09:53:14.000000000 -0700
@@ -50,6 +50,13 @@
 # endif
 #endif
 
+#ifdef HAVE_MACHINE_ENDIAN_H
+# include <machine/endian.h>
+# if __BYTE_ORDER==__BIG_ENDIAN
+#  define WORDS_BIGENDIAN 1
+# endif
+#endif
+
 #if defined(WORDS_BIGENDIAN) || defined(_BIG_ENDIAN)
 # define SWAP(n)							\
     (((n) << 24) | (((n) & 0xff00) << 8) | (((n) >> 8) & 0xff00) | ((n) >> 24))
