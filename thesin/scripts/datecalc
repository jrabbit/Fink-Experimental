#!/usr/bin/perl

$| = 1;

use strict;
use warnings;

use Date::Manip;

my $debug = 0;
my ($progname, $date, $change);

# Set name of current program
($progname = $0) =~ s#.*/##;

unless ($ARGV[0] && $ARGV[1] && !$ARGV[2]) {
  do_usage();
} else {
  if ($ARGV[0] =~ /^-s/ || $ARGV[1] =~ /^-s/) {
    if ($ARGV[0] =~ /^-d(.+)/) {
      $date = get_date();
      $change = $1;
    } elsif ($ARGV[1] =~ /^-d(.+)/) {
      $date = get_date();
      $change = $1;
    } elsif ($ARGV[0] =~ /^-c(.+)/) {
      $date = get_date();
      $change = $1;
    } elsif ($ARGV[1] =~ /^-c(.+)/) {
      $date = get_date();
      $change = $1;
    } else {
      do_usage();
    }
  } elsif ($ARGV[0] =~ /^-d/ && $ARGV[1] =~ /^-c/) {
    if ($ARGV[0] =~ /^-d(.+)/) {
      $date = get_date($1);
    } else {
      do_usage();
    }
    if ($ARGV[1] =~ /^-c(.+)/) {
      $change = $1;
    } else {
      do_usage();
    }
  } elsif ($ARGV[0] =~ /^-c/ && $ARGV[1] =~ /^-d/) {
    if ($ARGV[1] =~ /^-d(.+)/) {
      $date = get_date($1);
    } else {
      do_usage();
    }
    if ($ARGV[0] =~ /^-c(.+)/) {
      $change = $1;
    } else {
      do_usage();
    }
  } else {
    do_usage();
  }
}

unless ($change && $date) {
  do_usage();
}

my $output = calc_date($date, $change);

gen_output($output);

### Return the output
sub gen_output {
  $output = shift;

  print $output;

  return;
}

### Get Date or change and call right function
sub calc_date {
  my $date = shift;
  my $change = shift;
  my ($result, $out);

  if ($change =~ /^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/) {
    $out = datediff($date, $change);
  } elsif ($change =~ /^[\-|\+].*$/) {
    $out = new_date($date, $change);
  } else {
    do_usage();
  }

  if ($debug) {
    $result = "Date: $date\nChange: $change\nResult: $out\n";
  } else {
    $result = $out . "\n";
  }

  return $result;
}

### Get the diff
sub datediff {
  my $date = shift;
  my $change = shift;
  my ($result, $mod);

  $result = Date::Manip::DateCalc($date, $change, 1, 1);
  ### result [+|-]#:#:#:#:#:#:#
  ###        [+|-]y:m:w:d:h:m:s
  ### need to parse w*7+d and return years/months/days

  my ($years, $months, $weeks, $days, $hours, $mins, $secs) = split(/:/, $result);

  $result = "";

  if ($years =~ /^([\-|\+])([0-9]+)$/) {
    $mod = $1;
    $years = $2;
  }

  if ($years) {
    if ($years > 1) {
      $result .= "$years years";
    } else {
      $result .= "$years year";
    }
  }

  if ($months) {
    if ($years) {
      $result .= ", ";
    }

    if ($months > 1) {
      $result .= "$months months";
    } else {
      $result .= "$months month";
    }
  }

  if ($weeks or $days) {
    if ($years or $months) {
      $result .= ", ";
    }

    $days = eval(($weeks * 7) + $days);

    if ($days > 1) {
      $result .= "$days days";
    } else {
      $result .= "$days day";
    }
  }

  if ($mod eq "-") {
    $result .= " ago";
  }

  return $result;
}

### Get new date
sub new_date {
  my $date = shift;
  my $change = shift;
  my ($result);

  $result = Date::Manip::UnixDate(Date::Manip::DateCalc($date, $change), "%Y%m%d");

  return $result;
}

### Get current system date and/or parse and  return it
sub get_date {
  my $sysdate = shift || Date::Manip::ParseDate("today");

  $sysdate = Date::Manip::UnixDate($sysdate, "%Y%m%d");

  return $sysdate;
}

### Print help
sub do_usage {
  print "\n";
  print "Usage: $progname [-s] [-d<date>] [-c<date>]\n";
  print "   ie: $progname -s -c+3days\n";
  print "   ie: $progname -s -d2003-01-01\n";
  print "   ie: $progname -d2003-01-01 -c-3days\n";
  print "\n";
  print "Switches\n";
  print "   -s   Use current system date\n";
  print "   -d   Date to use as base for manip\n";
  print "   -c   Change amount in date (should ALWAYS begin with a + or -)\n";
  print "\n";
  print "Note\n";
  print "   1) All dates in or out, execpt -s, should be in YYYYMMDD format\n";
  print "\n";
  print "   2) Usable only requires 2 arguments, ie: -s and -d will give the\n";
  print "   difference between the given date and the systems, and -s and -c\n";
  print "   will return a date with the difference of -c of the current\n";
  print "   system date.\n";
  print "\n";
  exit(1);
}

exit(0);
