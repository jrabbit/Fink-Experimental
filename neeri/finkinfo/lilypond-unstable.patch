diff -ruN lilypond-2.5.8-orig/Documentation/user/GNUmakefile lilypond-2.5.8/Documentation/user/GNUmakefile
--- lilypond-2.5.8-orig/Documentation/user/GNUmakefile	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/Documentation/user/GNUmakefile	Sun Jan 16 16:58:10 2005
@@ -261,7 +261,7 @@
 local-clean: local-delete
 
 local-delete:
-	-for i in $$(seq 0 9); do \
+	-for i in $$(jot 9 0 9); do \
 		for j in dvi eps eps.bbox eps.trans log png tex; do \
 			rm -f $(outdir)/lily-$$i*$$j; \
 		done; \
diff -ruN lilypond-2.5.8-orig/Documentation/user/lilypond.tely lilypond-2.5.8/Documentation/user/lilypond.tely
--- lilypond-2.5.8-orig/Documentation/user/lilypond.tely	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/Documentation/user/lilypond.tely	Sun Jan 16 16:58:10 2005
@@ -27,15 +27,14 @@
 @c    LilyPond  program.
   
 @end ignore
-
-* LilyPond: (lilypond/lilypond).           The GNU music typesetter.
-* abc2ly: (lilypond/lilypond)Invoking abc2ly.          Importing ABC.          
-* convert-ly: (lilypond/lilypond)Invoking convert-ly.  Older LilyPond versions.
-* etf2ly: (lilypond/lilypond)Invoking etf2ly.          Importing Finale.
-* lilypond-book: (lilypond/lilypond)LilyPond-book.     Itegrating text and music.
-* midi2ly: (lilypond/lilypond)Invoking midi2ly.        Importing MIDI.
-* mup2ly: (lilypond/lilypond)Invoking mup2ly.          Importing Mup. 
-* musedata2ly: (lilypond/lilypond)Invoking musedata2ly.        Importing MuseData.
+* LilyPond: (lilypond).           The GNU music typesetter.
+* abc2ly: (lilypond)Invoking abc2ly.          Importing ABC.          
+* convert-ly: (lilypond)Invoking convert-ly.  Older LilyPond versions.
+* etf2ly: (lilypond)Invoking etf2ly.          Importing Finale.
+* lilypond-book: (lilypond)LilyPond-book.     Itegrating text and music.
+* midi2ly: (lilypond)Invoking midi2ly.        Importing MIDI.
+* mup2ly: (lilypond)Invoking mup2ly.          Importing Mup. 
+* musedata2ly: (lilypond)Invoking musedata2ly.        Importing MuseData.
 @end direntry
 
 
diff -ruN lilypond-2.5.8-orig/Documentation/user/music-glossary.tely lilypond-2.5.8/Documentation/user/music-glossary.tely
--- lilypond-2.5.8-orig/Documentation/user/music-glossary.tely	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/Documentation/user/music-glossary.tely	Sun Jan 16 16:58:10 2005
@@ -13,6 +13,11 @@
 PostScript} and @uref{music-glossary.pdf,PDF}.
 @end ifhtml
 
+@dircategory GNU music project
+@direntry
+* Glossary: (music-glossary).                  Glossary of music terms.
+@end direntry
+
 @titlepage
 @title Music Glossary
 @author Christian Mondrup   @c Original author of LilyPond glossary
diff -ruN lilypond-2.5.8-orig/buildscripts/clean-fonts.sh lilypond-2.5.8/buildscripts/clean-fonts.sh
--- lilypond-2.5.8-orig/buildscripts/clean-fonts.sh	Sun Jan 16 16:57:51 2005
+++ lilypond-2.5.8/buildscripts/clean-fonts.sh	Sun Jan 16 16:58:10 2005
@@ -20,6 +20,7 @@
 /var/texfonts
 /var/cache/fonts
 /usr/share/texmf/fonts
+@prefix@/var/lib/texmf
 "
 
 for i in $dirs; do
diff -ruN lilypond-2.5.8-orig/buildscripts/lilypond-profile.sh lilypond-2.5.8/buildscripts/lilypond-profile.sh
--- lilypond-2.5.8-orig/buildscripts/lilypond-profile.sh	Sun Jan 16 16:57:51 2005
+++ lilypond-2.5.8/buildscripts/lilypond-profile.sh	Sun Jan 16 16:58:10 2005
@@ -2,67 +2,6 @@
 
 # Setup TeX/LaTeX Ghostscript environment for LilyPond.
 
-# Red Hat-like systems should install this in /etc/profile.d/
-
-# If run by hand or from you .profile, run as follows
-#   . /PATH/TO/lilypond-profile
-
-
-
-
-
-# In ZSH, $0 is set to the script name, regardless of whether sourced
-# or run in a subshell.
-if [ -n "$ZSH_NAME" ] ; then
-    echo "Make sure that this script is sourced, ie. run as "
-    echo 
-    echo "   . lilypond-profile"
-    echo ""
-    echo "Continuing anyway ..."
-    return 2
-fi
-
-if [ -z "$ZSH_NAME" -a `basename "$0"` = "lilypond-profile" ] ; then 
-    cat >/dev/stderr <<EOF
-    
-Error: This script cannot be run in a subshell; it MUST be sourced.
-
-
-EXAMPLE 1: One time use 
-
-	* Do
-
-	    . $0
-
-
-
-EXAMPLE 2: Install for self
-
-	* Do
-
-	    cp lilypond-profile $HOME/bin/
-
-	* Add
-
-	    .  $HOME/bin/lilypond-profile
-
-	to either $HOME/.profile or $HOME/.bash_profile, 
-
-	* Logout.
-
-
-EXAMPLE 3: Install for all users.
-
-	* Do
-
-	     mv lilypond-profile /etc/profile.d/lilypond.sh
-
-	* Logout
-
-EOF
-
-    return 2
-else
 	if [ -z "$LILYPONDPREFIX" ]; then
 	    datadir=`echo "@local_lilypond_datadir@" | sed 's!//!/!g'`
 	else
@@ -78,7 +17,4 @@
 		TEXMF="{$datadir,"`kpsexpand  \\$TEXMF`"}"
 		export TEXMF
 	fi
-fi
- 	
-
 
diff -ruN lilypond-2.5.8-orig/config.make.in lilypond-2.5.8/config.make.in
--- lilypond-2.5.8-orig/config.make.in	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/config.make.in	Sun Jan 16 16:58:10 2005
@@ -7,10 +7,10 @@
 
 package-depth = @package_depth@
 
-USER_CFLAGS = @CFLAGS@ @CPPFLAGS@ @GUILE_CFLAGS@ @PANGO_FT2_CFLAGS@ @FREETYPE2_CFLAGS@
-USER_CXXFLAGS = @CXXFLAGS@ @CPPFLAGS@ @GUILE_CFLAGS@ @PANGO_FT2_CFLAGS@ @FREETYPE2_CFLAGS@
+USER_CFLAGS = @CFLAGS@ @CPPFLAGS@ @GUILE_CFLAGS@ @FREETYPE2_CFLAGS@ @PANGO_FT2_CFLAGS@ 
+USER_CXXFLAGS = @CXXFLAGS@ @CPPFLAGS@ @GUILE_CFLAGS@ @FREETYPE2_CFLAGS@ @PANGO_FT2_CFLAGS@ 
 USER_LDFLAGS = @LDFLAGS@ @GUILE_LDFLAGS@
-EXTRA_LIBES = @EXTRA_LIBES@ @LIBS@ @PANGO_FT2_LIBS@ @FREETYPE2_LIBS@
+EXTRA_LIBES = @EXTRA_LIBES@ @LIBS@ @FREETYPE2_LIBS@ @PANGO_FT2_LIBS@ 
 
 PACKAGE = @PACKAGE@
 package = @package@
@@ -41,7 +41,7 @@
 
 # move out of config.make.in?
 package_datadir = $(datadir)/$(package)
-package_infodir = $(infodir)/$(package)
+package_infodir = $(infodir)
 package_libdir = $(libdir)/$(package)
 package_docdir = $(docdir)/$(package)
 package_omfdir = $(omfdir)/$(package)
diff -ruN lilypond-2.5.8-orig/configure.in lilypond-2.5.8/configure.in
--- lilypond-2.5.8-orig/configure.in	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/configure.in	Sun Jan 16 16:58:10 2005
@@ -93,8 +93,8 @@
     STEPMAKE_GTK2
 fi
 
-STEPMAKE_FREETYPE2
 STEPMAKE_PANGO_FT2
+STEPMAKE_FREETYPE2
 
 ## Optional tools for building documentation, website, extra fonts.
 
diff -ruN lilypond-2.5.8-orig/configure.in.orig lilypond-2.5.8/configure.in.orig
--- lilypond-2.5.8-orig/configure.in.orig	Wed Dec 31 16:00:00 1969
+++ lilypond-2.5.8/configure.in.orig	Mon Jan 10 14:16:59 2005
@@ -0,0 +1,137 @@
+dnl configure.in   -*-shell-script-*-
+dnl Process this file with autoconf to produce a configure script. 
+
+# Bootstrap the init proces.
+AC_INIT
+
+# Bootstrap StepMake configure
+# For user package:
+AC_CONFIG_AUX_DIR([stepmake/bin])
+# For stepmake package:
+# AC_CONFIG_AUX_DIR(bin)
+
+
+STEPMAKE_INIT
+
+# List a file that identifies your package.
+AC_CONFIG_SRCDIR([lily/main.cc])
+
+# Move to aclocal.m4?
+AC_CONFIG_HEADER([$CONFIGFILE.hh:config.hh.in])
+
+# Uncomment the configuration options your package needs.
+
+
+gui_b=no
+AC_ARG_ENABLE(gui,
+    [  --enable-gui            compile with experimental GNOME output module.  Default: off],
+    [gui_b=$enableval])
+
+# must come before any header checks
+STEPMAKE_COMPILE
+
+STEPMAKE_PYTHON(REQUIRED,2.1)
+STEPMAKE_GCC(REQUIRED, 2.8)
+STEPMAKE_CXX(REQUIRED)
+STEPMAKE_GXX(REQUIRED, 3.0.5)
+STEPMAKE_CXXTEMPLATE
+STEPMAKE_LIB(REQUIRED)
+# Do not use bison 1.50 and 1.75.
+# 1.29 is required fr %locations, but I'm not sure it's enough --ns
+STEPMAKE_BISON(REQUIRED, 1.29)
+STEPMAKE_FLEX(REQUIRED)
+STEPMAKE_FLEXLEXER(REQUIRED)
+AC_LANG_C
+STEPMAKE_LOCALE
+STEPMAKE_GETTEXT
+STEPMAKE_MSGFMT(REQUIRED)
+STEPMAKE_TEXMF(REQUIRED)
+STEPMAKE_TEXMF_DIRS
+STEPMAKE_GUILE_DEVEL(REQUIRED, 1.6)
+STEPMAKE_KPATHSEA
+STEPMAKE_MAKEINFO(REQUIRED)
+STEPMAKE_PYTHON_DEVEL(REQUIRED)
+
+# mftrace for generating pfa's, pfb's
+STEPMAKE_PROGS(MFTRACE, mftrace, REQUIRED, 1.1.1)
+
+# mftrace for generating pfa's, pfb's
+STEPMAKE_PATH_PROG(FONTFORGE, fontforge, REQUIRED, 20041208)
+
+
+AC_CHECK_HEADERS([assert.h sys/stat.h])
+AC_LANG_PUSH(C++)
+AC_CHECK_HEADERS([sstream])
+AC_LANG_POP(C++)
+AC_HEADER_STAT
+AC_FUNC_MEMCMP
+AC_FUNC_VPRINTF
+AC_CHECK_FUNCS([gettext isinf memmem snprintf vsnprintf gettext])
+
+AC_MSG_CHECKING([for ec-fonts-mftraced])
+ecb10=`kpsewhich ecb10.pfa 2>/dev/null`
+if test -n "$ecb10"; then
+    AC_MSG_RESULT([$ecb10])
+else
+    AC_MSG_RESULT(no)
+    AC_MSG_CHECKING([for lmodern])
+    lmr10=`kpsewhich lmr10.pfb 2>/dev/null`
+    if test -n "$lmr10"; then
+	AC_MSG_RESULT([$lmr10])
+    else
+	STEPMAKE_ADD_ENTRY(REQUIRED, 'package ec-fonts-mftraced >= 1.0.5')
+	AC_MSG_CHECKING([for old version of ec-fonts-mftraced])
+	ecrm10=`kpsewhich ecrm10.pfa 2>/dev/null`
+	if test -n "$ecrm10"; then
+	    AC_MSG_RESULT([$ecrm10])
+	    AC_MSG_WARN([old version of ec-fonts-mftraced found, install 1.0.5 or newer])
+	fi
+    fi
+fi
+
+if test "$gui_b" = "yes"; then
+    STEPMAKE_GTK2
+fi
+
+STEPMAKE_FREETYPE2
+STEPMAKE_PANGO_FT2
+
+## Optional tools for building documentation, website, extra fonts.
+
+# guile executable for some scripts
+STEPMAKE_GUILE(OPTIONAL)
+# perl for help2man.
+STEPMAKE_PERL(OPTIONAL)
+
+
+
+# New makeinfo for multi-page website docs Simply always require new
+# makeinfo should avoid bug reports; if people want to build lily
+# without the docs, they can find this comment and use an older
+# makeinfo -- but hopefully won't report makeinfo problems.
+STEPMAKE_PROGS(MAKEINFO, makeinfo, REQUIRED, 4.7)
+AC_SUBST(MAKEINFO_VERSION)
+
+
+if test "$optimise_b" = yes; then
+    DEFINES="$DEFINES -DSTRING_UTILS_INLINED"
+    AC_DEFINE(STRINGS_UTILS_INLINED)
+fi
+
+AC_DEFINE_UNQUOTED(TOPLEVEL_VERSION, "${FULL_VERSION}")
+AC_DEFINE_UNQUOTED(FLOWER_VERSION, "${FULL_FLOWER_VERSION}")
+
+# Gather requirements and generate output.
+STEPMAKE_END
+
+
+test -n "$CONFIGURATION" && mc=" conf=$CONFIGURATION" || mc=""
+
+cat <<EOF
+
+Type:
+    make$mc all       to build LilyPond
+    make$mc install   to install LilyPond
+    make$mc help      to see all possible targets
+
+EOF
diff -ruN lilypond-2.5.8-orig/lexer-gcc-3.1.sh lilypond-2.5.8/lexer-gcc-3.1.sh
--- lilypond-2.5.8-orig/lexer-gcc-3.1.sh	Sun Jan 16 16:57:54 2005
+++ lilypond-2.5.8/lexer-gcc-3.1.sh	Sun Jan 16 16:58:10 2005
@@ -8,7 +8,7 @@
 
 if [ -z "$FLEXLEXER" ]; then
 
-includes="$HOME/usr/include /usr/local/include /usr/include"
+includes="$HOME/usr/include $PREFIX/include /usr/local/include /usr/include" 
 
 for i in $includes; do
     file=$i/FlexLexer.h
@@ -43,9 +43,9 @@
 echo -n "Copying and fixing $file... "
 mkdir -p lily/$outdir
 rm -f lily/$outdir/FlexLexer.h
-sed -e 's/iostream.h/iostream/' \
-    -e 's/\<istream\>/std::istream/' \
-    -e 's/\<ostream\>/std::ostream/' \
+perl -p -e 's/iostream.h/iostream/g;' \
+    -e 's/\bistream\b/std::istream/g;' \
+    -e 's/\bostream\b/std::ostream/' \
     $file > lily/$outdir/FlexLexer.h
 echo "done"
 
@@ -58,9 +58,9 @@
     make conf=$CONF -C lily $outdir/lexer.cc > /dev/null 2>&1 || true
 
     mv $file $file.orig
-    sed -e 's/\<cin\>/std::cin/g' \
-	-e 's/\<cout\>/std::cout/g' \
-	-e 's/\<cerr\>/std::cerr/g' \
+    perl -p -e 's/\bcin\b/std::cin/g;' \
+	-e 's/\bcout\b/std::cout/g;' \
+	-e 's/\bcerr\b/std::cerr/g' \
 	$file.orig > $file
     echo "done"
 fi
diff -ruN lilypond-2.5.8-orig/lily/kpath.cc lilypond-2.5.8/lily/kpath.cc
--- lilypond-2.5.8-orig/lily/kpath.cc	Sun Jan 16 16:57:52 2005
+++ lilypond-2.5.8/lily/kpath.cc	Sun Jan 16 16:58:10 2005
@@ -30,6 +30,7 @@
 #define popen REALLYUGLYKLUDGE
 #define pclose ANOTHERREALLYUGLYKLUDGE
 #define getopt YAKLUDGE
+#define __GNU_LIBRARY__
 
 #if HAVE_KPATHSEA_KPATHSEA_H
 extern "C" {
diff -ruN lilypond-2.5.8-orig/stepmake/aclocal.m4 lilypond-2.5.8/stepmake/aclocal.m4
--- lilypond-2.5.8-orig/stepmake/aclocal.m4	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/stepmake/aclocal.m4	Sun Jan 16 16:58:10 2005
@@ -1117,8 +1117,6 @@
 	AC_DEFINE(HAVE_PANGO16)
 	PANGO_CFLAGS="$PANGO_CFLAGS $GTK2_CFLAGS"
 	PANGO_LIBS="$PANGO_LIBS $GTK2_LIBS"
-	CPPFLAGS="$PANGO_CFLAGS $CPPFLAGS"
-	LIBS="$PANGO_LIBS $LIBS"
 	AC_CHECK_HEADERS([pango/pangofc-fontmap.h])
 	AC_CHECK_FUNCS([pango_fc_font_map_add_decoder_find_func])
 	AC_SUBST(PANGO_CFLAGS)
@@ -1133,8 +1131,6 @@
 	AC_DEFINE(HAVE_PANGO_FT2)
 	PANGO_FT2_CFLAGS="$PANGO_FT2_CFLAGS $GTK2_CFLAGS"
 	PANGO_FT2_LIBS="$PANGO_FT2_LIBS $GTK2_LIBS"
-	CPPFLAGS="$PANGO_FT2_CFLAGS $CPPFLAGS"
-	LIBS="$PANGO_FT2_LIBS $LIBS"
 	AC_CHECK_HEADERS([pango/pangoft2.h])
 	AC_CHECK_FUNCS([pango_ft2_font_map_create_context])
 	AC_SUBST(PANGO_FT2_CFLAGS)
diff -ruN lilypond-2.5.8-orig/stepmake/aclocal.m4.orig lilypond-2.5.8/stepmake/aclocal.m4.orig
--- lilypond-2.5.8-orig/stepmake/aclocal.m4.orig	Wed Dec 31 16:00:00 1969
+++ lilypond-2.5.8/stepmake/aclocal.m4.orig	Sun Jan  9 15:36:54 2005
@@ -0,0 +1,1143 @@
+dnl aclocal.m4   -*-shell-script-*-
+dnl StepMake subroutines for configure.in
+
+
+### mostly interal macros
+
+# Get full path of executable ($1)
+AC_DEFUN(STEPMAKE_GET_EXECUTABLE, [
+    ## which doesn't work in ash, if /usr/bin/which isn't installed
+    ## type -p doesn't work in ash
+    ## command -v doesn't work in zsh
+    ## command -v "$1" 2>&1
+    ## this test should work in ash, bash, pdksh (ksh), zsh
+    type -p "$1" 2>/dev/null | tail -n 1 | awk '{print $NF}'
+])
+
+
+# Get version string from executable ($1)
+AC_DEFUN(STEPMAKE_GET_VERSION, [
+    ## "$1" --version 2>&1 | grep -v '^$' | head -n 1 | awk '{print $NF}'
+    ##
+    ## ARG.
+    ## Workaround for broken Debian gcc version string:
+    ##     gcc (GCC) 3.1.1 20020606 (Debian prerelease)
+    ##
+    ## -V: Workaround for python
+
+    changequote(<<, >>)dnl
+    ##set -x
+    ## Assume and hunt for dotted version multiplet.
+    ## use eval trickery, because we cannot use multi-level $() instead of ``
+    ## for compatibility reasons.
+    ## FIXME: what systems still do not have $() in /bin/sh?
+    eval _ver=\"\`("$1" --version || "$1" -V) 2>&1 | grep '[0-9]\.[0-9]' \
+        | head -n 1 \
+	| sed -e 's/.*[^-.0-9]\([0-9][0-9]*\.[0-9][.0-9]*\).*/\1/' \
+	    -e 's/^[^.0-9]*//' -e 's/[^.0-9]*$//'\`\"
+    if test -z "$_ver"; then
+        ## If empty, try date [fontforge]
+        eval _ver=\"\`("$1" --version || "$1" -V) 2>&1 | grep '[0-9]\{6,8\}' \
+	    | head -n 1 \
+	    | sed -e 's/^[^.0-9]*//' -e 's/[^.0-9]*$//'\`\"
+    fi
+    echo "$_ver"
+    ##set +x
+    changequote([, ])dnl
+])
+
+# Calculate simplistic numeric version from version string ($1)
+# As yet, we have no need for something more elaborate.
+AC_DEFUN(STEPMAKE_NUMERIC_VERSION, [
+    echo "$1" | awk -F. '
+    {
+      if ([$]3) {three = [$]3}
+      else {three = 0}
+    }
+    {printf "%d\n", [$]1*1000000 + [$]2*1000 + three}'
+])
+
+
+# Add item ($2) to list ($1, one of 'OPTIONAL', 'REQUIRED')
+AC_DEFUN(STEPMAKE_ADD_ENTRY, [
+    eval "$1"=\"`eval echo \"'$'$1\" \"$2\"`\"
+])
+
+# Check if tested program ($2) was found ($1).
+# If not, add entry to missing-list ($3, one of 'OPTIONAL', 'REQUIRED').
+# We could abort here if a 'REQUIRED' program is not found
+AC_DEFUN(STEPMAKE_OPTIONAL_REQUIRED, [
+    STEPMAKE_CHECK_SEARCH_RESULT($1)
+    if test $? -ne 0; then
+	STEPMAKE_ADD_ENTRY($3, $2)
+	if test "$3" = "REQUIRED"; then
+	    command="echo ERROR: $2 not found"
+	    # abort configure process here?
+	else
+	    command="- echo $2 not found"
+	fi
+	eval "$1"='$command'
+	false
+    else
+	true
+    fi
+])
+
+
+# Return if tested proram ($1) was found (true) or not (false).
+AC_DEFUN(STEPMAKE_CHECK_SEARCH_RESULT, [
+    r="`eval echo '$'"$1"`"
+    if test -n "$r" -a "$r" != "error" -a "$r" != "no" && expr '`eval echo '$'"$1"`' : '.*\(echo\)' > /dev/null; then
+	true
+    else
+	##STEPMAKE_WARN(cannot find $2. $3)
+	false
+    fi
+])
+
+
+# Check version of program ($1)
+# If version ($4: optional argument, supply if version cannot be
+# parsed using --version or -V ) is smaller than requested ($3), add
+# entry to missing-list ($2, one of 'OPTIONAL', 'REQUIRED').
+AC_DEFUN(STEPMAKE_CHECK_VERSION, [
+    r="`eval echo '$'"$1"`"
+    AC_MSG_CHECKING([$r version])
+    exe=`STEPMAKE_GET_EXECUTABLE($r)`
+    if test -n "$4"; then
+        ver="$4"
+    else
+        ver=`STEPMAKE_GET_VERSION($exe)`
+    fi
+    num=`STEPMAKE_NUMERIC_VERSION($ver)`
+    req=`STEPMAKE_NUMERIC_VERSION($3)`
+    AC_MSG_RESULT([$ver])
+    if test "$num" -lt "$req"; then
+	STEPMAKE_ADD_ENTRY($2, ["$r >= $3 (installed: $ver)"])
+    fi
+    vervar="`echo $1 | tr '[a-z]' '[A-Z]'`_VERSION"
+    eval `echo $vervar=$num`
+##    AC_SUBST(`eval echo $vervar`)
+])
+
+# Check version of program ($1)
+# If version is greater than or equals unsupported ($3),
+# add entry to unsupported list ($2, 'UNSUPPORTED')
+AC_DEFUN(STEPMAKE_CHECK_VERSION_UNSUPPORTED, [
+    r="`eval echo '$'"$1"`"
+    AC_MSG_CHECKING([$r version])
+    exe=`STEPMAKE_GET_EXECUTABLE($r)`
+    ver=`STEPMAKE_GET_VERSION($exe)`
+    num=`STEPMAKE_NUMERIC_VERSION($ver)`
+    sup=`STEPMAKE_NUMERIC_VERSION($3)`
+    AC_MSG_RESULT([$ver])
+    if test "$num" -ge "$sup"; then
+	STEPMAKE_ADD_ENTRY($2, ["$r < $3 (installed: $ver)"])
+    fi
+])
+
+### Macros to build configure.in
+
+
+AC_DEFUN(STEPMAKE_BIBTEX2HTML, [
+    STEPMAKE_PROGS(BIBTEX2HTML, bibtex2html bib2html, $1)
+    if test "$BIBTEX2HTML" = "bib2html"; then
+	BIBTEX2HTML_FLAGS='$< $(@)'
+    else
+	BIBTEX2HTML_FLAGS='-o $(@D)/$(*F) $<'
+    fi
+    AC_SUBST(BIBTEX2HTML)
+    AC_SUBST(BIBTEX2HTML_FLAGS)
+])
+
+
+AC_DEFUN(STEPMAKE_BISON, [
+    # ugh, automake: we want (and check for) bison
+    AC_PROG_YACC
+    
+    STEPMAKE_PROGS(BISON, bison, $1)
+    
+    # urg.  should test functionality rather than version.
+    if test "$BISON" = "bison" -a -n "$2"; then
+	STEPMAKE_CHECK_VERSION(BISON, $1, $2)
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_COMPILE, [
+    # -O is necessary to get inlining
+    CFLAGS=${CFLAGS-""}
+    CXXFLAGS=${CXXFLAGS-$CFLAGS}
+    LDFLAGS=${LDFLAGS-""}
+    optimise_b=yes
+    profile_b=no
+    debug_b=yes
+    pipe_b=yes
+
+    AC_ARG_ENABLE(debugging,
+    [  --enable-debugging      compile with debugging info.  Default: on],
+    [debug_b=$enableval])
+
+    AC_ARG_ENABLE(optimising,
+    [  --enable-optimising     compile with optimising.  Default: on],
+    [optimise_b=$enableval])
+
+    AC_ARG_ENABLE(profiling, 
+    [  --enable-profiling      compile with gprof support.  Default: off],
+    [profile_b=$enableval])
+    
+    AC_ARG_ENABLE(pipe, 
+    [  --enable-pipe           compile with -pipe.  Default: on],
+    [pipe_b=$enableval])
+
+    if test "$optimise_b" = yes; then
+	AC_DEFINE(NDEBUG)
+	DEFINES="$DEFINES -DNDEBUG"
+	OPTIMIZE="-O2 -finline-functions"
+    fi
+
+    if test $profile_b = yes; then
+	EXTRA_LIBES="-pg"
+	OPTIMIZE="$OPTIMIZE -pg"
+    fi
+
+    if test $debug_b = yes; then
+	OPTIMIZE="$OPTIMIZE -g"
+    fi
+ 
+    AC_PROG_CC
+    STEPMAKE_OPTIONAL_REQUIRED(CC, cc, $1)
+    LD='$(CC)'
+    AC_SUBST(LD)
+
+    # If -pipe requested, test if it works and add to CFLAGS.
+    if test "$pipe_b" = yes; then
+	save_cflags="$CFLAGS"
+	CFLAGS="-pipe $CFLAGS";
+	AC_CACHE_CHECK([whether compiler understands -pipe],
+	    [stepmake_cflags_pipe],
+	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[/* -pipe test */]])],
+		[stepmake_cflags_pipe=yes],
+		[stepmake_cflags_pipe=no]))
+	CFLAGS=$save_cflags
+	if test $stepmake_cflags_pipe = yes; then
+	    OPTIMIZE="$OPTIMIZE -pipe"
+	fi
+    fi
+
+    CFLAGS="$CFLAGS $OPTIMIZE"
+    CPPFLAGS=${CPPFLAGS-""}
+
+    AC_MSG_CHECKING([for IEEE-conformance compiler flags])
+    save_cflags="$CFLAGS"
+    case "$host" in
+        alpha*-*-*)
+	    dnl should do compile test?
+	    AC_MSG_RESULT(-mieee)
+	    CFLAGS="-mieee $CFLAGS"
+	    ;;
+	*)
+	    AC_MSG_RESULT([none])
+	    ;;
+    esac
+
+    AC_SUBST(cross_compiling)
+    AC_SUBST(CFLAGS)
+    AC_SUBST(CPPFLAGS)
+    AC_SUBST(LDFLAGS)
+    AC_SUBST(ICFLAGS)
+    AC_SUBST(ILDFLAGS)
+    AC_SUBST(DEFINES)
+    AC_SUBST(EXTRA_LIBES)
+])
+
+AC_DEFUN(STEPMAKE_CXX, [
+    AC_LANG([C++])
+    AC_PROG_CXX
+    STEPMAKE_OPTIONAL_REQUIRED(CXX, c++, $1)
+
+    CPPFLAGS="$CPPFLAGS $DEFINES"
+    CXXFLAGS="$CXXFLAGS $OPTIMIZE"
+    LDFLAGS="$LDFLAGS $EXTRA_LIBES"
+
+    AC_SUBST(CXXFLAGS)
+    AC_SUBST(CXX)
+    LD='$(CXX)'
+    AC_SUBST(LD)
+])
+
+
+AC_DEFUN(STEPMAKE_CXXTEMPLATE, [
+    AC_CACHE_CHECK([whether explicit instantiation is needed],
+	lily_cv_need_explicit_instantiation,
+	AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+    template <class T> struct foo { static int baz; };
+    template <class T> int foo<T>::baz = 1;
+    ]], [[ return foo<int>::baz; ]])],[lily_cv_need_explicit_instantiation=no],[lily_cv_need_explicit_instantiation=yes]))
+    if test x"$lily_cv_need_explicit_instantiation"x = x"yes"x; then
+	AC_DEFINE(NEED_EXPLICIT_INSTANTIATION)
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_DATADIR, [
+    if test "$datadir" = "\${prefix}/share"; then
+	    datadir='${prefix}/share'
+    fi
+    presome=${prefix}
+    if test "$prefix" = "NONE"; then
+	presome=${ac_default_prefix}
+    fi
+    
+    build_package_datadir=$ugh_ugh_autoconf250_builddir/share/$package
+    
+    DATADIR=`echo ${datadir} | sed "s!\\\${prefix}!$presome!"`
+    BUILD_PACKAGE_DATADIR=`echo ${build_package_datadir} | sed "s!\\\${prefix}!$presome!"`
+    
+    AC_SUBST(datadir)
+    AC_SUBST(build_package_datadir)
+    AC_DEFINE_UNQUOTED(DATADIR, ["${DATADIR}"])
+    AC_DEFINE_UNQUOTED(BUILD_PACKAGE_DATADIR, ["${BUILD_PACKAGE_DATADIR}"])
+])
+
+## ugh: cut & paste programming from datadir. 
+AC_DEFUN(STEPMAKE_LIBDIR, [
+
+    if test "$libdir" = "\${exec_prefix}/lib"; then
+ 	libdir='${exec_prefix}/lib'
+    fi
+    presome=$exec_prefix
+    build_package_libdir=$ugh_ugh_autoconf250_builddir/lib/$package
+    
+    LIBDIR=`echo ${libdir} | sed "s!\\\${exec_prefix}!$presome!"`
+    BUILD_PACKAGE_LIBDIR=`echo ${build_package_libdir} | sed "s!\\\${exec_prefix}!$presome!"`
+    
+    AC_SUBST(libdir)
+    AC_SUBST(build_package_libdir)
+    AC_DEFINE_UNQUOTED(LIBDIR, ["${LIBDIR}"])
+    AC_DEFINE_UNQUOTED(BUILD_PACKAGE_LIBDIR, ["${BUILD_PACKAGE_LIBDIR}"])
+])
+
+
+AC_DEFUN(STEPMAKE_END, [
+    AC_SUBST(OPTIONAL)
+    AC_SUBST(REQUIRED)
+    
+    AC_CONFIG_FILES([$CONFIGFILE.make:config.make.in])
+    AC_OUTPUT
+    
+    if test -n "$OPTIONAL"; then
+	echo
+        echo "WARNING: Please consider installing optional programs: $OPTIONAL"
+    fi
+
+    if test -n "$REQUIRED"; then
+	echo
+        echo "ERROR: Please install required programs: $REQUIRED"
+    fi
+    
+    if test -n "$UNSUPPORTED"; then
+	echo
+        echo "ERROR: Please use older version of programs: $UNSUPPORTED"
+    fi
+    
+    if test -n "$OPTIONAL$REQUIRED$UNSUPPORTED"; then
+	echo
+	echo "See INSTALL.txt for more information on how to build $PACKAGE_NAME"
+	if test -f config.cache ; then
+	    echo "Remove config.cache before rerunning ./configure"
+	fi 
+    fi
+    
+    if test -n "$REQUIRED$UNSUPPORTED"; then
+	rm -f $srcdir/GNUmakefile
+        exit 1
+    fi
+
+    # regular in-place build
+    # test for srcdir_build = yes ?
+    if test "$srcdir_build" = "yes"; then
+	rm -f $srcdir/GNUmakefile
+	cp $srcdir/GNUmakefile.in $srcdir/GNUmakefile
+	chmod 444 $srcdir/GNUmakefile
+    else # --srcdir build
+        rm -f GNUmakefile
+    	cp $srcdir/make/srcdir.make.in GNUmakefile
+    	chmod 444 GNUmakefile
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_FLEX, [
+    # ugh, automake: we want (and check for) flex
+    # AC_PROG_LEX
+    # urg: automake 1.3: hope this doesn't break 1.2 ac_cv_pro_lex_root hack...
+
+    # AC_PROG_LEX()
+    # ugh, ugh
+    ac_cv_prog_lex_root=lex.yy
+    STEPMAKE_PROGS(FLEX, flex, $1)
+])
+
+
+AC_DEFUN(STEPMAKE_FLEXLEXER, [
+    AC_CHECK_HEADERS([FlexLexer.h],[true],[false])
+    if test $? -ne 0; then
+	warn='FlexLexer.h (flex package)'
+	STEPMAKE_ADD_ENTRY($1, $warn)
+    fi
+    # check for yyFlexLexer.yy_current_buffer,
+    # in 2.5.4 <= flex < 2.5.29
+    AC_LANG_PUSH(C++)
+    AC_CACHE_CHECK([for yyFlexLexer.yy_current_buffer],
+	[stepmake_flexlexer_yy_current_buffer],
+	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+using namespace std;
+#include <FlexLexer.h>
+class yy_flex_lexer: public yyFlexLexer
+{
+  public:
+    yy_flex_lexer ()
+    {
+      yy_current_buffer = 0;
+    }
+};
+]])],
+	    [stepmake_flexlexer_yy_current_buffer=yes],
+	    [stepmake_flexlexer_yy_current_buffer=no]))
+    if test $stepmake_flexlexer_yy_current_buffer = yes; then
+	AC_DEFINE(HAVE_FLEXLEXER_YY_CURRENT_BUFFER, 1, [Define to 1 if yyFlexLexer has yy_current_buffer.])
+    fi
+    AC_LANG_POP(C++)
+])
+  
+
+AC_DEFUN(STEPMAKE_GCC, [
+    if test "$GCC" = "yes"; then
+        STEPMAKE_CHECK_VERSION(CC, $1, $2)
+    else
+	warn="$CC (Please install *GNU* cc)"
+	STEPMAKE_ADD_ENTRY($1, $warn)
+    fi
+])
+
+AC_DEFUN(STEPMAKE_GETTEXT, [
+    presome=${prefix}
+    if test "$prefix" = "NONE"; then
+	    presome=${ac_default_prefix}
+    fi
+    LOCALEDIR=`echo ${localedir} | sed "s!\\\${prefix}!$presome!"`
+    
+    AC_SUBST(localedir)
+    AC_DEFINE_UNQUOTED(LOCALEDIR, ["${LOCALEDIR}"])
+    # ouch.  autoconf <= 2.57's gettext check fails for
+    # g++ >= 3.3 (with -std=gnu++98, the default).
+    # While the check is OK for g++ -std=c++98,
+    # LilyPond needs GNU g++, so who is to blame here?
+    # Use a workaround until this is resolved:
+    # for g++ >= 3.3, select C language.
+    GCC_UNSUPPORTED=
+    STEPMAKE_CHECK_VERSION_UNSUPPORTED(CXX, GCC_UNSUPPORTED, 3.3)
+    if test -n "$GCC_UNSUPPORTED"; then
+	AC_MSG_WARN([autoconf <= 2.59 with g++ >= 3.3 gettext test broken.])
+	AC_MSG_WARN([Trying gcc, cross fingers.])
+	AC_LANG_PUSH(C)
+    fi
+    AC_CHECK_LIB(intl, gettext)
+    AC_CHECK_FUNCS(gettext)
+    if test -n "$GCC_UNSUPPORTED"; then
+	AC_LANG_POP(C)
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_GUILE, [
+    STEPMAKE_PATH_PROG(GUILE, guile, $1)
+])
+
+
+#   STEPMAKE_GUILE_FLAGS --- set flags for compiling and linking with Guile
+#
+#   This macro runs the guile-config script, installed with Guile,
+#   to find out where Guile's header files and libraries are
+#   installed.  It sets two variables, marked for substitution, as
+#   by AC_SUBST.
+#   
+#     GUILE_CFLAGS --- flags to pass to a C or C++ compiler to build
+#             code that uses Guile header files.  This is almost
+#             always just a -I flag.
+#   
+#     GUILE_LDFLAGS --- flags to pass to the linker to link a
+#             program against Guile.  This includes -lguile for
+#             the Guile library itself, any libraries that Guile
+#             itself requires (like -lqthreads), and so on.  It may
+#             also include a -L flag to tell the compiler where to
+#             find the libraries.
+
+AC_DEFUN([STEPMAKE_GUILE_FLAGS], [
+    exe=`STEPMAKE_GET_EXECUTABLE($guile_config)`
+    if test -x $exe; then
+	AC_MSG_CHECKING([guile compile flags])
+	GUILE_CFLAGS="`$guile_config compile`"
+	AC_MSG_RESULT($GUILE_CFLAGS)
+	AC_MSG_CHECKING([guile link flags])
+	GUILE_LDFLAGS="`$guile_config link`"
+	AC_MSG_RESULT($GUILE_LDFLAGS)
+    fi
+    AC_SUBST(GUILE_CFLAGS)
+    AC_SUBST(GUILE_LDFLAGS)
+])
+
+
+AC_DEFUN(STEPMAKE_GUILE_DEVEL, [
+    ## First, let's just see if we can find Guile at all.
+    AC_MSG_CHECKING([for guile-config])
+    for guile_config in $GUILE_CONFIG guile-config $target-guile-config $build-guile-config; do
+	AC_MSG_RESULT([$guile_config])
+	if ! $guile_config --version > /dev/null 2>&1 ; then
+	    AC_MSG_WARN([cannot execute $guile_config])
+	    AC_MSG_CHECKING([if we are cross compiling])
+	    GUILE_CONFIG='echo no guile-config'
+	else
+	    GUILE_CONFIG=$guile_config
+	    break
+	fi
+    done
+    STEPMAKE_OPTIONAL_REQUIRED(GUILE_CONFIG, $guile_config, $1)
+    if test $? -ne 0; then
+        STEPMAKE_ADD_ENTRY($1, 'guile-config (guile-devel, guile-dev or libguile-dev package)')
+    fi 
+
+    STEPMAKE_CHECK_SEARCH_RESULT(GUILE_CONFIG)
+    # urg.  should test functionality rather than version.
+    if test $? -eq 0 -a -n "$2"; then
+	STEPMAKE_CHECK_VERSION(GUILE_CONFIG, $1, $2)
+    fi
+
+    AC_SUBST(GUILE_CONFIG)
+    
+    guile_version="$ver"
+    changequote(<<, >>)dnl
+    GUILE_MAJOR_VERSION=`expr $guile_version : '\([0-9]*\)'`
+    GUILE_MINOR_VERSION=`expr $guile_version : '[0-9]*\.\([0-9]*\)'`
+    GUILE_PATCH_LEVEL=`expr $guile_version : '[0-9]*\.[0-9]*\.\([0-9]*\)'`
+    changequote([, ])dnl
+    STEPMAKE_GUILE_FLAGS
+    save_CPPFLAGS="$CPPFLAGS"
+    save_LIBS="$LIBS"
+    CPPFLAGS="$GUILE_CFLAGS $CPPFLAGS"
+    LIBS="$GUILE_LDFLAGS $LIBS"
+    AC_CHECK_HEADERS([libguile.h])
+    AC_CHECK_LIB(guile, scm_boot_guile)
+    AC_CHECK_FUNCS(scm_boot_guile,,libguile_b=no)
+    if test "$libguile_b" = "no"; then
+	    warn='libguile (libguile-dev, guile-devel or guile-dev
+   package).'
+	    STEPMAKE_ADD_ENTRY(REQUIRED, $warn)
+    fi
+    CPPFLAGS="$save_CPPFLAGS"
+    LIBS="$save_LIBS"
+    AC_DEFINE_UNQUOTED(GUILE_MAJOR_VERSION, $GUILE_MAJOR_VERSION)
+    AC_DEFINE_UNQUOTED(GUILE_MINOR_VERSION, $GUILE_MINOR_VERSION)
+    AC_DEFINE_UNQUOTED(GUILE_PATCH_LEVEL, $GUILE_PATCH_LEVEL)
+])
+
+
+AC_DEFUN(STEPMAKE_GXX, [
+    if test "$GXX" = "yes"; then
+        STEPMAKE_CHECK_VERSION(CXX, $1, $2)
+    else
+	warn="$CXX (Please install *GNU* c++)"
+	STEPMAKE_ADD_ENTRY($1, $warn)
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_INIT, [
+
+    AC_PREREQ(2.50)
+    . $srcdir/VERSION
+    FULL_VERSION=$MAJOR_VERSION.$MINOR_VERSION.$PATCH_LEVEL
+    if test x$MY_PATCH_LEVEL != x; then
+	FULL_VERSION=$FULL_VERSION.$MY_PATCH_LEVEL
+    fi
+
+    # urg: don't "fix" this: irix doesn't know about [:lower:] and [:upper:]
+    changequote(<<, >>)dnl
+    PACKAGE=`echo $PACKAGE_NAME | tr '[a-z]' '[A-Z]'`
+    package=`echo $PACKAGE_NAME | tr '[A-Z]' '[a-z]'`
+    changequote([, ])dnl
+
+    # No versioning on directory names of sub-packages 
+    # urg, urg
+    stepmake=${datadir}/stepmake
+    presome=${prefix}
+    if test "$prefix" = "NONE"; then
+	    presome=${ac_default_prefix}
+    fi
+    stepmake=`echo ${stepmake} | sed "s!\\\${prefix}!$presome!"`
+
+    # urg, how is this supposed to work?
+    if test "$program_prefix" = "NONE"; then
+	  program_prefix=
+    fi
+    if test "$program_suffix" = "NONE"; then
+	  program_suffix=
+    fi
+
+    AC_MSG_CHECKING(Package)
+    if test "$PACKAGE" = "STEPMAKE"; then
+	AC_MSG_RESULT(Stepmake package!)
+
+	AC_MSG_CHECKING(builddir)
+
+	ugh_ugh_autoconf250_builddir="`pwd`"
+	
+	if test "$srcdir" = "."; then
+	    srcdir_build=yes
+	else
+	    srcdir_build=no
+	    package_builddir="`dirname $ugh_ugh_autoconf250_builddir`"
+	    package_srcdir="`dirname  $srcdir`"
+	fi
+	AC_MSG_RESULT($ugh_ugh_autoconf250_builddir)
+
+	(cd stepmake 2>/dev/null || mkdir stepmake)
+	(cd stepmake; rm -f bin; ln -s ../$srcdir/bin .)
+# only possible with autoconf < 2.50 -- hardcoded in configure.in
+#	AC_CONFIG_AUX_DIR(bin)
+	stepmake=stepmake
+    else
+        AC_MSG_RESULT($PACKAGE)
+
+	AC_MSG_CHECKING(builddir)
+	ugh_ugh_autoconf250_builddir="`pwd`"
+	if test "$srcdir" = "."; then
+	    srcdir_build=yes
+	else
+	    srcdir_build=no
+	fi
+	AC_MSG_RESULT($ugh_ugh_autoconf250_builddir)
+
+	AC_MSG_CHECKING(for stepmake)
+	# Check for installed stepmake
+	if test -d $stepmake; then
+	    AC_MSG_RESULT($stepmake)
+	else
+	    stepmake="`cd $srcdir/stepmake; pwd`"
+	    AC_MSG_RESULT([$srcdir/stepmake  ($datadir/stepmake not found)])
+	fi
+
+# only possible with autoconf < 2.50 -- hardcoded in configure.in
+# 	AC_CONFIG_AUX_DIR(\
+# 	  stepmake/bin\
+# 	  $srcdir/stepmake/bin\
+#	)
+    fi
+
+    AC_SUBST(ugh_ugh_autoconf250_builddir)
+    AC_SUBST(stepmake)
+    AC_SUBST(package)
+    AC_SUBST(PACKAGE)
+    AC_SUBST(PACKAGE_NAME)
+    # We don't need the upper case variant,
+    # so stick to macros are uppercase convention.
+    # AC_DEFINE_UNQUOTED(package, ["${package}"])
+    # AC_DEFINE_UNQUOTED(PACKAGE, ["${PACKAGE}"])
+    AC_DEFINE_UNQUOTED(PACKAGE, ["${package}"])
+    AC_DEFINE_UNQUOTED(PACKAGE_NAME, ["${PACKAGE_NAME}"])
+    AC_DEFINE_UNQUOTED(TOPLEVEL_VERSION, ["${FULL_VERSION}"])
+
+    if test -z "$package_depth"; then
+    	package_depth="."
+    else
+    	package_depth="../$package_depth"
+    fi
+    export package_depth
+    AC_SUBST(package_depth)
+
+    AUTOGENERATE="This file was automatically generated by configure"
+    AC_SUBST(AUTOGENERATE)
+
+    CONFIGSUFFIX=
+    AC_ARG_ENABLE(config,
+    [  --enable-config=CONF    put settings in config-CONF.make and config-CONF.h;
+                            do \`make conf=CONF' to get output in ./out-CONF],
+    [CONFIGURATION=$enableval])
+
+    ##'
+
+    test -n "$CONFIGURATION" && CONFIGSUFFIX="-$CONFIGURATION"
+    CONFIGFILE=config$CONFIGSUFFIX
+    AC_SUBST(CONFIGSUFFIX)
+     
+    AC_CANONICAL_HOST
+    STEPMAKE_PROGS(MAKE, gmake make, REQUIRED)
+    STEPMAKE_PROGS(FIND, find, REQUIRED)
+
+    STEPMAKE_PROGS(TAR, tar, REQUIRED)
+
+    if test "$(echo 2)" != "2" ||
+	test "x`uname`" = "xHP-UX"; then
+	AC_PATH_PROG(KSH, ksh, /bin/ksh)
+	AC_PATH_PROG(BASH, bash, $KSH)
+	STEPMAKE_WARN(avoiding buggy /bin/sh)
+	AC_PATH_PROG(SHELL, bash, $KSH)
+    else
+	SHELL=/bin/sh
+	AC_PATH_PROG(BASH, bash, $SHELL)
+    fi
+    AC_SUBST(SHELL)
+
+    STEPMAKE_PYTHON(REQUIRED, 1.5)
+
+    if expr "$MAKE" : '.*\(echo\)' >/dev/null; then
+ 	$MAKE -v 2> /dev/null | grep GNU > /dev/null
+	if test "$?" = 1; then
+	    warn='make (Please install *GNU* make)'
+	    # STEPMAKE_WARN($warn)
+	    STEPMAKE_ADD_ENTRY(REQUIRED, $warn)
+        fi
+    fi 
+
+    if test "$OSTYPE" = "cygwin" -o "$OSTYPE" = "cygwin32" -o "$OSTYPE" = "Windows_NT"; then
+	LN=cp # hard link does not work under cygnus-nt
+	LN_S='cp -r' # symbolic link does not work for native nt
+	ZIP="zip -r -9" #
+	program_suffix=.exe
+ 	ROOTSEP=':'
+        DIRSEP='/'
+ 	PATHSEP=':'
+	INSTALL="\$(SHELL) \$(stepdir)/../bin/install-dot-exe.sh -c"
+    else
+	ROOTSEP=':'
+	DIRSEP='/'
+	PATHSEP=':'
+	LN=ln
+	LN_S='ln -s'
+	ZIP="zip -r -9"
+        INSTALL="\$(SHELL) \$(stepdir)/../bin/install-sh -c"
+    fi
+    AC_SUBST(program_prefix)
+    AC_SUBST(program_suffix)
+    AC_SUBST(ZIP)
+    AC_SUBST(LN)
+    AC_SUBST(LN_S)
+    AC_SUBST(INSTALL)
+    AC_DEFINE_UNQUOTED(DIRSEP, ['${DIRSEP}'])
+    AC_DEFINE_UNQUOTED(PATHSEP, ['${PATHSEP}'])
+    AC_SUBST(DIRSEP)
+    AC_SUBST(PATHSEP)
+    AC_SUBST(ROOTSEP)
+  
+    STEPMAKE_DATADIR
+    STEPMAKE_LIBDIR
+])
+
+    
+AC_DEFUN(STEPMAKE_KPATHSEA, [
+	
+    AC_ARG_WITH(kpathsea-include,
+	[  --with-kpathsea-include=DIR
+	                  location of the kpathsea include dir],[
+	    if test "$withval" = "yes" -o "$withval" = "no"; then
+		AC_MSG_WARN(Usage: --with-kpathsea-include=includedir)
+	    else
+		CPPFLAGS="$CPPFLAGS -I${withval}"
+	    fi
+	    ])
+    
+    AC_ARG_WITH(kpathsea-lib,
+	[  --with-kpathsea-lib=DIR location of the kpathsea lib dir],[
+	    if test "$withval" = "yes" -o "$withval" = "no"; then
+		AC_MSG_WARN(Usage: --with-kpathsea-lib=libdir)
+	    else
+		LDFLAGS="$LDFLAGS -L${withval}"
+	    fi
+	    ])
+    
+    kpathsea_b=yes
+    #FIXME --with-xxx is meant for specifying a PATH too,
+    # so this should read: --enable-kpathsea,
+    # or --with-kpathsea-include=PATH --with-kpathsea-lib=PATH
+    AC_ARG_WITH(kpathsea,
+    [  --with-kpathsea         use kpathsea lib.  Default: on],
+    [kpathsea_b=$with_kpathsea])
+
+    if test "$kpathsea_b" != "no"; then	
+	AC_CHECK_HEADERS([kpathsea/kpathsea.h],,kpathsea_b=no)
+	AC_CHECK_LIB(kpathsea, kpse_find_file)
+	AC_CHECK_FUNCS(kpse_find_file,,kpathsea_b=no)
+	if test "$kpathsea_b" = "no"; then
+	    warn='kpathsea (libkpathsea-dev, kpathsea-devel or tetex-devel
+   package).
+   Else, please specify the directories where kpathsea/kpathsea.h and
+   libkpathsea.a are installed using --with-kpathsea-include and
+   --with-kpathsea-lib options.  You should install kpathsea; see
+   INSTALL.txt.  Rerun ./configure --without-kpathsea only if kpathsea
+   is not available for your platform.'
+	    STEPMAKE_ADD_ENTRY(REQUIRED, $warn)
+	fi
+    fi
+    AC_MSG_CHECKING(whether to use kpathsea)
+    if test "$kpathsea_b" != no; then
+        AC_MSG_RESULT(yes)
+	KPATHSEA=1
+    else
+        AC_MSG_RESULT(no)
+	KPATHSEA=0
+    fi
+
+    AC_SUBST(KPATHSEA)
+    AC_DEFINE_UNQUOTED(KPATHSEA, $KPATHSEA)
+])
+
+
+AC_DEFUN(STEPMAKE_LIB, [
+    STEPMAKE_PROGS(AR, ar, $1)
+    AC_PROG_RANLIB
+    STEPMAKE_OPTIONAL_REQUIRED(RANLIB, ranlib, $1)
+])
+
+
+AC_DEFUN(STEPMAKE_LIBTOOL, [
+    # libtool.info ...
+    # **Never** try to set library version numbers so that they correspond
+    # to the release number of your package.  This is an abuse that only
+    # fosters misunderstanding of the purpose of library versions.
+
+    REVISION=$PATCH_LEVEL
+    # CURRENT=$MINOR_VERSION
+    CURRENT=`expr $MINOR_VERSION + 1`
+    # AGE=`expr $MAJOR_VERSION + 1`
+    AGE=$MAJOR_VERSION
+    AC_SUBST(CURRENT)
+    AC_SUBST(REVISION)
+    AC_SUBST(AGE)
+])
+
+
+AC_DEFUN(STEPMAKE_LOCALE, [
+    lang=English
+    ALL_LINGUAS="en nl"
+
+    # with/enable ??
+    AC_ARG_WITH(localedir,
+    [  --with-localedir=LOCALE use LOCALE as locale dir.  Default:
+                            PREFIX/share/locale ],
+    localedir=$with_localedir,
+    localedir='${prefix}/share/locale')
+
+    AC_ARG_WITH(lang,
+    [  --with-lang=LANG        use LANG as language to emit messages],
+    language=$with_lang,
+    language=English)
+
+    AC_MSG_CHECKING(language)    
+    case "$language" in
+      En* | en* | Am* | am* | US* | us*)
+	    lang=English;;
+      NL | nl | Du* | du* | Ned* | ned*)
+	    lang=Dutch;;
+      "")
+	    lang=English;;
+      *)
+	    lang=unknown;;
+    esac
+    AC_MSG_RESULT($lang)
+
+    if test "$lang" = "unknown" ; then
+	STEPMAKE_WARN($language not supported; available are: $ALL_LINGUAS)
+    fi
+
+])
+
+
+AC_DEFUN(STEPMAKE_MAKEINFO, [
+    STEPMAKE_PROGS(MAKEINFO, makeinfo, $1)
+    if test "$MAKEINFO" = "makeinfo"; then
+	AC_MSG_CHECKING(whether makeinfo can split html by @node)
+	mkdir -p out
+	makeinfo --html --output=out/split <<EOF
+\input texinfo
+\input texinfo @c -*-texinfo-*-
+@setfilename split.info
+@settitle split.info
+@bye
+EOF
+	if test -d out/split; then
+	    SPLITTING_MAKEINFO=yes
+	    AC_MSG_RESULT(yes)
+	    rm -rf out/split
+	else
+	    AC_MSG_RESULT(no)
+	    STEPMAKE_WARN(your html documentation will be one large file)
+	    rm -rf out/split
+	fi
+    fi
+    AC_SUBST(SPLITTING_MAKEINFO)
+])
+
+
+
+AC_DEFUN(STEPMAKE_MAN, [
+    STEPMAKE_PROGS(GROFF, groff ditroff, $1)
+    AC_SUBST(GROFF)
+    STEPMAKE_PROGS(TROFF, troff, $1)
+    AC_SUBST(TROFF)
+    STEPMAKE_PROGS(TBL, tbl, $1)
+    AC_SUBST(TBL)
+])
+
+
+AC_DEFUN(STEPMAKE_MSGFMT, [
+    STEPMAKE_PROGS(MSGFMT, msgfmt, $1)
+])
+
+
+# Check for program ($2), set full path result to ($1).
+# If missing, add entry to missing-list ($3, one of 'OPTIONAL', 'REQUIRED')
+AC_DEFUN(STEPMAKE_PATH_PROG, [
+    AC_CHECK_PROGS($1, $2, no)
+    STEPMAKE_OPTIONAL_REQUIRED($1, $2, $3)
+    if test $? -eq 0; then
+	AC_PATH_PROG($1, $2)
+	if test -n "$4"; then
+	    STEPMAKE_CHECK_VERSION($1, $3, $4)
+	fi
+    fi
+])
+
+
+# Check for program in set of names ($2), set result to ($1) .
+# If missing, add entry to missing-list ($3, one of 'OPTIONAL', 'REQUIRED')
+# If exists, and a minimal version ($4) is required
+AC_DEFUN(STEPMAKE_PROGS, [
+    AC_CHECK_PROGS($1, $2, no)
+    STEPMAKE_OPTIONAL_REQUIRED($1, $2, $3)
+    if test $? -eq 0 -a -n "$4"; then
+	STEPMAKE_CHECK_VERSION($1, $3, $4)
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_PERL, [
+    STEPMAKE_PATH_PROG(PERL, perl, $1)
+])
+
+
+AC_DEFUN(STEPMAKE_PYTHON, [
+    unset pv
+    AC_MSG_CHECKING([for python])
+    for python in $PYTHON python python2 python2.3 python2.2 python2.1 python2.0; do
+	AC_MSG_RESULT([$python])
+	if ! $python -V > /dev/null 2>&1 ; then
+	    #AC_MSG_WARN([cannot execute $python])
+	    PYTHON='echo no python'
+	else
+	    unset pv
+	    STEPMAKE_CHECK_VERSION(python, pv, $2)
+	    if test -z "$pv"; then
+		PYTHON=$python
+		break
+	    fi
+	fi
+    done
+    if test -n "$pv"; then
+	STEPMAKE_ADD_ENTRY($1, $pv)
+    fi
+    AC_PATH_PROG(PYTHON, $PYTHON)
+    AC_SUBST(PYTHON)
+])
+
+AC_DEFUN(STEPMAKE_PYTHON_DEVEL, [
+    unset PYTHON_HEADER PYTHON_INCLUDE
+    if test -n "$PYTHON"; then
+	changequote(<<, >>)dnl
+	# alternatively, for python >= 2.0
+	# 'import sys, distutils.sysconfig; sys.stdout.write (distutils.sysconfig.get_python_inc ())'
+	PYTHON_INCLUDE=`$PYTHON -c 'import sys; sys.stdout.write ("%s/include/python%s" % (sys.prefix, sys.version[:3]))'`
+	changequote([, ])dnl
+    fi
+    
+    ##AC_CHECK_HEADERS([Python.h],[PYTHON_HEADER=yes])
+    if test -z "$PYTHON_HEADER"; then
+	#URG -- how to extend include path?
+	ac_compile="$ac_compile -I$PYTHON_INCLUDE"
+	ac_cpp="$ac_cpp -I$PYTHON_INCLUDE"
+	CPPFLAGS="$CPPFLAGS -I$PYTHON_INCLUDE"
+	AC_CHECK_HEADERS([Python.h],[PYTHON_HEADER=yes])
+    fi
+    
+    if test -z "$PYTHON_HEADER"; then
+	warn="$PYTHON_INCLUDE/Python.h (python-devel, python-dev or libpython-dev package)"
+	STEPMAKE_ADD_ENTRY($1, $warn)
+    fi
+])
+
+
+AC_DEFUN(STEPMAKE_TEXMF_DIRS, [
+    AC_ARG_ENABLE(tfm-path,
+    [  --enable-tfm-path=PATH  set path of tex directories where tfm files live,
+                            esp.: cmr10.tfm.  Default: use kpsewhich],
+    [tfm_path=$enableval],
+    [tfm_path=auto] )
+
+    # ugh
+    STEPMAKE_PROGS(KPSEWHICH, kpsewhich, OPTIONAL)
+    AC_MSG_CHECKING(for tfm path)
+
+    TFM_FONTS="cmr msam"
+
+    if test "x$tfm_path" = xauto ; then
+	if test "x$KPSEWHICH" != "xno" ; then
+	    for i in $TFM_FONTS; do
+		dir=`$KPSEWHICH tfm ${i}10.tfm`
+		TFM_PATH="$TFM_PATH `dirname $dir`"
+	    done
+	else
+	    STEPMAKE_WARN(Please specify where cmr10.tfm lives:
+    ./configure --enable-tfm-path=/usr/local/TeX/lib/tex/fonts)
+	fi
+    else
+         TFM_PATH=$tfm_path
+    fi
+
+    TFM_PATH=`echo $TFM_PATH | tr ':' ' '`
+    AC_MSG_RESULT($TFM_PATH)
+    AC_SUBST(TFM_PATH)
+])
+
+
+AC_DEFUN(STEPMAKE_TEXMF, [
+    # urg, never know what names these teTeX guys will think up
+
+    STEPMAKE_PROGS(METAFONT, mf-nowin mf mfw mfont, $1)
+    STEPMAKE_PROGS(INIMETAFONT, inimf inimfont, $1)
+
+    AC_MSG_CHECKING(for working metafont mode)
+    modelist='ljfour lj4 lj3 lj2 ljet laserjet'
+    for MFMODE in $modelist; do
+    	$METAFONT "\mode:=$MFMODE; mode_setup; end." > /dev/null 2>&1
+	if test -f mfput.tfm; then
+	    break;
+	fi
+    done
+    AC_MSG_RESULT($MFMODE)
+
+    rm -f mfput.*
+
+    AC_SUBST(MFMODE)
+])
+
+
+AC_DEFUN(STEPMAKE_WARN, [
+    AC_MSG_WARN($1)
+    warn_b=yes
+])
+
+
+dnl PKG_CHECK_MODULES(GSTUFF, gtk+-2.0 >= 1.3 glib = 1.3.4, action-if, action-not)
+dnl defines GSTUFF_LIBS, GSTUFF_CFLAGS, see pkg-config man page
+dnl also defines GSTUFF_PKG_ERRORS on error
+AC_DEFUN(PKG_CHECK_MODULES, [
+  succeeded=no
+
+  if test -z "$PKG_CONFIG"; then
+    AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
+  fi
+
+  if test "$PKG_CONFIG" = "no" ; then
+     echo "*** The pkg-config script could not be found. Make sure it is"
+     echo "*** in your path, or set the PKG_CONFIG environment variable"
+     echo "*** to the full path to pkg-config."
+     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
+  else
+     PKG_CONFIG_MIN_VERSION=0.9.0
+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
+        AC_MSG_CHECKING(for $2)
+
+        if $PKG_CONFIG --exists "$2" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING($1_CFLAGS)
+            $1_CFLAGS=`$PKG_CONFIG --cflags "$2"`
+            AC_MSG_RESULT($$1_CFLAGS)
+
+            AC_MSG_CHECKING($1_LIBS)
+            $1_LIBS=`$PKG_CONFIG --libs "$2"`
+            AC_MSG_RESULT($$1_LIBS)
+        else
+            $1_CFLAGS=""
+            $1_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            $1_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "$2"`
+            ifelse([$4], ,echo $$1_PKG_ERRORS,)
+        fi
+
+        AC_SUBST($1_CFLAGS)
+        AC_SUBST($1_LIBS)
+     else
+        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
+        echo "*** See http://www.freedesktop.org/software/pkgconfig"
+     fi
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$3], , :, [$3])
+  else
+     ifelse([$4], , AC_MSG_ERROR([Library requirements ($2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.]), [$4])
+  fi
+])
+
+
+AC_DEFUN(STEPMAKE_FREETYPE2, [
+    PKG_CHECK_MODULES(FREETYPE2, freetype2 >= 0, have_freetype2=true, true)
+    if $have_freetype2 ; then
+	AC_DEFINE(HAVE_FREETYPE2)
+	AC_SUBST(FREETYPE2_CFLAGS)
+	AC_SUBST(FREETYPE2_LIBS)
+    fi
+])
+
+AC_DEFUN(STEPMAKE_GTK2, [
+    PKG_CHECK_MODULES(GTK2, gtk+-2.0 >= 2.4.0, have_gtk2=true, true)
+    if $have_gtk2 ; then
+	AC_DEFINE(HAVE_GTK2)
+	AC_SUBST(GTK2_CFLAGS)
+	AC_SUBST(GTK2_LIBS)
+    fi
+])
+
+AC_DEFUN(STEPMAKE_PANGO, [
+    PKG_CHECK_MODULES(PANGO, pango >= 1.6.0, have_pango16=true, true)
+    if $have_pango16 ; then
+	AC_DEFINE(HAVE_PANGO16)
+	PANGO_CFLAGS="$PANGO_CFLAGS $GTK2_CFLAGS"
+	PANGO_LIBS="$PANGO_LIBS $GTK2_LIBS"
+	CPPFLAGS="$PANGO_CFLAGS $CPPFLAGS"
+	LIBS="$PANGO_LIBS $LIBS"
+	AC_CHECK_HEADERS([pango/pangofc-fontmap.h])
+	AC_CHECK_FUNCS([pango_fc_font_map_add_decoder_find_func])
+	AC_SUBST(PANGO_CFLAGS)
+	AC_SUBST(PANGO_LIBS)
+fi
+])
+
+
+AC_DEFUN(STEPMAKE_PANGO_FT2, [
+    PKG_CHECK_MODULES(PANGO_FT2, pangoft2 >= 1.6.0, have_pangoft2=true, true)
+    if $have_pangoft2 ; then
+	AC_DEFINE(HAVE_PANGO_FT2)
+	PANGO_FT2_CFLAGS="$PANGO_FT2_CFLAGS $GTK2_CFLAGS"
+	PANGO_FT2_LIBS="$PANGO_FT2_LIBS $GTK2_LIBS"
+	CPPFLAGS="$PANGO_FT2_CFLAGS $CPPFLAGS"
+	LIBS="$PANGO_FT2_LIBS $LIBS"
+	AC_CHECK_HEADERS([pango/pangoft2.h])
+	AC_CHECK_FUNCS([pango_ft2_font_map_create_context])
+	AC_SUBST(PANGO_FT2_CFLAGS)
+	AC_SUBST(PANGO_FT2_LIBS)
+fi
+])
diff -ruN lilypond-2.5.8-orig/stepmake/stepmake/c++-rules.make lilypond-2.5.8/stepmake/stepmake/c++-rules.make
--- lilypond-2.5.8-orig/stepmake/stepmake/c++-rules.make	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/stepmake/stepmake/c++-rules.make	Sun Jan 16 16:58:10 2005
@@ -26,3 +26,4 @@
 
 $(outdir)/%.cc: %.ll
 	$(FLEX) -Cfe -p -p -o$@ $< 
+	perl -i.bak -pe 's/^class istream;/#include <iostream>;\nusing namespace std;/' $@
\ No newline at end of file
diff -ruN lilypond-2.5.8-orig/stepmake/stepmake/c-vars.make lilypond-2.5.8/stepmake/stepmake/c-vars.make
--- lilypond-2.5.8-orig/stepmake/stepmake/c-vars.make	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/stepmake/stepmake/c-vars.make	Sun Jan 16 16:58:10 2005
@@ -14,4 +14,4 @@
 
 ALL_C_SOURCES += $(H_FILES) $(C_FILES) $(Y_FILES) $(L_FILES)
 
-ALL_CFLAGS = $(CFLAGS) $(ICFLAGS) $(DEFINES) $(addprefix -I,$(INCLUDES)) $(USER_CFLAGS) $(EXTRA_CFLAGS) $(MODULE_CFLAGS)
+ALL_CFLAGS = $(CFLAGS) $(CPPFLAGS) $(ICFLAGS) $(DEFINES) $(addprefix -I,$(INCLUDES)) $(USER_CFLAGS) $(EXTRA_CFLAGS) $(MODULE_CFLAGS)
diff -ruN lilypond-2.5.8-orig/stepmake/stepmake/compile-vars.make lilypond-2.5.8/stepmake/stepmake/compile-vars.make
--- lilypond-2.5.8-orig/stepmake/stepmake/compile-vars.make	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/stepmake/stepmake/compile-vars.make	Sun Jan 16 16:58:10 2005
@@ -3,7 +3,7 @@
 ALL_LDFLAGS = $(LDFLAGS) $(ILDFLAGS) $(EXTRA_LDFLAGS) $($(PACKAGE)_LDFLAGS) $(MODULE_LDFLAGS) $(USER_LDFLAGS)
 
 PIC_FLAGS = -fpic -fPIC
-SHARED_FLAGS = -shared
+SHARED_FLAGS = -bundle -flat_namespace -undefined suppress
 
 o-dep-out = $(outdir)/$(subst .o,.dep,$(notdir $@))#
 DO_O_DEP = rm -f $(o-dep-out); DEPENDENCIES_OUTPUT="$(o-dep-out) $(outdir)/$(notdir $@)"
diff -ruN lilypond-2.5.8-orig/stepmake/stepmake/install-out-targets.make lilypond-2.5.8/stepmake/stepmake/install-out-targets.make
--- lilypond-2.5.8-orig/stepmake/stepmake/install-out-targets.make	Sun Jan 16 16:57:53 2005
+++ lilypond-2.5.8/stepmake/stepmake/install-out-targets.make	Sun Jan 16 16:58:10 2005
@@ -6,13 +6,13 @@
 # urg, parameterise
 local-install-outfiles: $(INSTALLATION_OUT_FILES) $(foreach suff, $(INSTALLATION_OUT_SUFFIXES), $(INSTALLATION_OUT_FILES$(suff)))
 	-$(INSTALL) -d $(INSTALLATION_OUT_DIR)
-	$(foreach i, $(INSTALLATION_OUT_FILES), \
-		$(INSTALL) -m 644 $(i) $(INSTALLATION_OUT_DIR)/ && ) true
+	for i in $(INSTALLATION_OUT_FILES) ; do \
+		$(INSTALL) -m 644 $$i $(INSTALLATION_OUT_DIR)/; done
 	$(foreach suff, $(INSTALLATION_OUT_SUFFIXES),  \
 		($(INSTALL) -d $(INSTALLATION_OUT_DIR$(suff))/ || true) && \
-		$(foreach i, $(INSTALLATION_OUT_FILES$(suff)), \
-			$(INSTALL) -m 644 $(i) $(INSTALLATION_OUT_DIR$(suff))/ && ) true && ) true
-
+		for i in $(INSTALLATION_OUT_FILES$(suff)); do \
+			$(INSTALL) -m 644 $$i $(INSTALLATION_OUT_DIR$(suff))/; \
+			done && ) true
 
 local-uninstall: local-uninstall-outfiles local-uninstall-files 
 
