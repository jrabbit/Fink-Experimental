? .DS_Store
? PkgVersion.pm.runtimedep
? Reporting.pm
Index: Engine.pm
===================================================================
RCS file: /cvsroot/fink/fink/perlmod/Fink/Engine.pm,v
retrieving revision 1.175
diff -u -r1.175 Engine.pm
--- Engine.pm	10 May 2004 06:07:39 -0000	1.175
+++ Engine.pm	25 May 2004 04:46:54 -0000
@@ -31,6 +31,7 @@
 use File::Find;
 use Fink::Status;
 use Fink::Command qw(mkdir_p);
+use Fink::Reporting qw(&report_stable &report_unstable &report_feedback &report_allcontents &report_contents &report_deb_contents);
 
 use strict;
 use warnings;
@@ -93,6 +94,7 @@
 	  'splits' => [\&cmd_splitoffs, 1, 0],
 	  'showparent' => [\&cmd_showparent, 1, 0],
 	  'dumpinfo' => [\&cmd_dumpinfo, 1, 0],
+	  'report' => [\&cmd_report, 1, 1],
 	);
 
 END { }				# module clean-up code here (global destructor)
@@ -1621,7 +1623,6 @@
 	}
 }
 
-
 ### display a pkg's package description (parsed .info file)
 sub cmd_dumpinfo {
 
@@ -1851,5 +1852,61 @@
 	}
 }
 
+### Reporting options for fink packages
+
+sub cmd_report {
+	my ($pkg, $package, @plist, $arg, $wanthelp);
+	my ($contents, $allcontents, $feedback, $stable, $unstable);
+	use Getopt::Long;
+	
+	my @temp_ARGV = @ARGV;
+	@ARGV=@_;
+	Getopt::Long::Configure(qw(bundling ignore_case require_order no_getopt_compat prefix_pattern=(--|-)));
+	
+	GetOptions(
+		'contents|c'	=> \$contents,
+		'allcontents|C'	=> \$allcontents,
+		'feedback|f'	=> \$feedback,
+		'stable|s'	=> \$stable,
+		'unstable|u'	=> \$unstable,
+		'help|h'	=> \$wanthelp
+	) or die "fink report: unknown option\nType 'fink report --help' for more information.\n";
+
+	if ($wanthelp) {
+		require Fink::FinkVersion;
+		my $version = Fink::FinkVersion::fink_version();
+
+		print <<"EOF";
+Fink $version
+
+Usage: fink report [options] [string]
+
+Options:
+  -c,  --contents      - Reports file contents for a list of packages to the fink website
+  -C, --allcontents   - Reports file contents on ALL packages to the fink website
+  -f,  --feedback      - Send feedback on the package to its maintainer
+  -s,  --stable        - Send a simple stable report on one or more packages
+  -u,  --unstable      - Send a simple unstable report on one or more packages
+  -h,  --help          - This help text.
+
+EOF
+		exit 0;
+	} elsif ($contents) {
+		&report_contents(&expand_packages(@ARGV));
+	} elsif ($allcontents) {
+		&report_allcontents();
+	} elsif ($feedback) {
+		&report_feedback(&expand_packages(@ARGV));
+	} elsif ($stable) {
+		&report_stable(&expand_packages(@ARGV));
+	} elsif ($unstable) {
+		&report_unstable(&expand_packages(@ARGV));
+	}
+	print "\n";
+	@_ = @ARGV;
+	@ARGV = @temp_ARGV;
+}
+
+
 ### EOF
 1;
Index: PkgVersion.pm
===================================================================
RCS file: /cvsroot/fink/fink/perlmod/Fink/PkgVersion.pm,v
retrieving revision 1.263
diff -u -r1.263 PkgVersion.pm
--- PkgVersion.pm	24 May 2004 01:21:38 -0000	1.263
+++ PkgVersion.pm	25 May 2004 04:46:59 -0000
@@ -38,6 +38,7 @@
 use Fink::VirtPackage;
 use Fink::Bootstrap qw(&get_bsbase);
 use Fink::Command qw(mkdir_p rm_f rm_rf symlink_f du_sk);
+use Fink::Reporting qw(&report_deb_contents);
 
 use File::Basename qw(&dirname);
 
@@ -2350,6 +2351,11 @@
 							"the directory manually to save disk space. ".
 							"Continuing with normal procedure.");
 	}
+	
+	### report deb file contents
+	if ($config->param_boolean("ReportContents") and not Fink::Config::get_option("no_report")) {
+		&report_deb_contents($self->get_tree(), $self->get_name(), $self->get_fullversion(), $self->get_debname());
+	}
 }
 
 ### activate
Index: Services.pm
===================================================================
RCS file: /cvsroot/fink/fink/perlmod/Fink/Services.pm,v
retrieving revision 1.112
diff -u -r1.112 Services.pm
--- Services.pm	11 May 2004 18:28:09 -0000	1.112
+++ Services.pm	25 May 2004 04:47:01 -0000
@@ -387,9 +387,9 @@
 Executes $cmd as a single string via a perl system() call and returns
 the exit code from it. The command is printed on STDOUT before being
 executed. If $cmd begins with a # (preceeded optionally by whitespace)
-it is treated as a comment and is not executed. If $quiet is false (or
-not given) and the command failed, a message including the return code
-is sent to STDOUT.
+it is treated as a comment and is not executed. If $quiet is < 2, the
+command is echoed to STDOUT. If $quiet is false (or not given) and the 
+command failed, a message including the return code is sent to STDOUT.
 
 =cut
 
@@ -401,7 +401,9 @@
 	my ($commandname);
 
 	return if ($cmd =~ /(^\s*$)|(^\s*#)/); # Ignore empty commands and comments
-	print "$cmd\n";
+	if($quiet < 2) {
+		print "$cmd\n";
+	}
 	system($cmd);
 	$? >>= 8 if defined $? and $? >= 256;
 	if ($? and not $quiet) {
