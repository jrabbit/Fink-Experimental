diff -uNr kdebase-3.1.93/kcontrol/fonts/Makefile.am kdebase-3.1.93-new/kcontrol/fonts/Makefile.am
--- kdebase-3.1.93/kcontrol/fonts/Makefile.am	Tue Sep  2 09:53:59 2003
+++ kdebase-3.1.93-new/kcontrol/fonts/Makefile.am	Sat Nov  1 17:36:47 2003
@@ -1,12 +1,18 @@
-# $Id$
+# $Id$
+
+noinst_LTLIBRARIES = libkxftconfig.la
+
+libkxftconfig_la_SOURCES = kxftconfig.cpp
+libkxftconfig_la_LIBADD = $(LIBFONTCONFIG_LIBS)
+libkxftconfig_la_LDFLAGS = $(LIBFONTCONFIG_RPATH)
 
 INCLUDES = $(all_includes) $(LIBFONTCONFIG_CFLAGS)
 
 kde_module_LTLIBRARIES = kcm_fonts.la
 
-kcm_fonts_la_SOURCES = fonts.cpp kxftconfig.cpp
+kcm_fonts_la_SOURCES = fonts.cpp
 kcm_fonts_la_LDFLAGS = $(KDE_RPATH) $(LIBFONTCONFIG_RPATH) -module -avoid-version $(all_libraries) -no-undefined
-kcm_fonts_la_LIBADD = $(LIB_KDEUI) $(LIBFONTCONFIG_LIBS)
+kcm_fonts_la_LIBADD = $(LIB_KDEUI) libkxftconfig.la $(LIBFONTCONFIG_LIBS)
 kcm_fonts_la_METASOURCES = fonts.moc
 
 noinst_HEADERS = fonts.h kxftconfig.h
diff -uNr kdebase-3.1.93/kcontrol/fonts/fonts.desktop kdebase-3.1.93-new/kcontrol/fonts/fonts.desktop
--- kdebase-3.1.93/kcontrol/fonts/fonts.desktop	Sun Oct 26 05:46:17 2003
+++ kdebase-3.1.93-new/kcontrol/fonts/fonts.desktop	Sat Nov  1 17:36:47 2003
@@ -51,6 +51,7 @@
 Name[pt_BR]=Fontes
 Name[ro]=Fonturi
 Name[ru]=Шрифты
+Name[se]=Fonttat
 Name[sk]=Písma
 Name[sl]=Pisave
 Name[sr]=Фонтови
@@ -75,7 +76,7 @@
 Comment[ar]=ضبط الخطوط
 Comment[az]=Yazı növü qurğuları
 Comment[be]=Настройкі шрыфтоў
-Comment[bg]=Настройки за шрифтове
+Comment[bg]=Настройки за шрифтовете на системата
 Comment[br]=KefluniaÃ± ar fontoÃ¹
 Comment[bs]=Postavke fontova
 Comment[ca]=Arranjament de les fonts
@@ -114,6 +115,7 @@
 Comment[pt_BR]=Preferências de Fontes de Letra
 Comment[ro]=Configurează fonturile de sistem
 Comment[ru]=Настройка шрифтов
+Comment[se]=Fontaheivehusat
 Comment[sk]=Nastavenie písiem
 Comment[sl]=Nastavitve pisav
 Comment[sr]=Поставке фонта
@@ -134,6 +136,7 @@
 
 Keywords=fonts,font size,styles,charsets,character sets,panel,kicker,control panel,desktops,FileManager,Toolbars,Menu,Window Title,Title
 Keywords[az]=yazı növləri,yazı böyüklüyü,tərz,hərf köməsi,panel,kicker,idarə masası,masa üstü,masa üstləri,Vasitə Çubuğu,Menyu,Pəncərə Başlığı,Başlıq
+Keywords[bg]=шрифт,шрифтове,размер,символи,знаци,системен панел,fonts,font size,styles,charsets,character sets,panel,kicker,control panel,desktops,FileManager,Toolbars,Menu,Window Title,Title
 Keywords[ca]=fonts,mida de font,estils,jocs de caràcters,plafó,kicker,plafó de control,escriptoris,Gestor de fitxers,Barres d'eines,Menú,Títol de finestra,Títol
 Keywords[cs]=Písma,Velikost písem,Styly,Znaková sada,Panel,Kicker,Ovládací centrum,Plocha,Správce souborů,Nástrojová lišta,Nabídka,Titulek okna,Titulek
 Keywords[cy]=ffontiau,maint ffontiau,arddulliau,setiau nodau,panel,ciciwr,rheolydd panel,penbyrddau,Rheolwr Ffeiliau,Barrau Offer,Dewislen,Teitl Ffenestr,Teitl
@@ -164,6 +167,7 @@
 Keywords[pt]=tipo de letra,tipos de letra,fontes,fonte,tamanho de fonte,estilo,mapa de caracteres,painel,kicker,painel de controlo,ecrãs,gestor de ficheiros,barras de ferramentas,menu,título da janela,título
 Keywords[pt_BR]=fontes,letras,tipos de letra,tamanho de fonte,tamanho de letra,estilo,conjunto de caracteres,painel,gerenciador de janelas,painel de controle,ambientes,Gerenciador de arquivos,barras de ferramentas,título da janela,título
 Keywords[ro]=fonturi,font,mărime,stil,set de caractere,panou,kicker,panou de control,ecrane,manager de fişiere,bară de unelte,meniu,titlu fereastră,titlu
+Keywords[se]=fonttat,fontasturrodat,stiila,charsets,character sets,panela,kicker,stivrenpanela, čállinbeavddit,fiilagieđahalli,neavvoholggat,fálut,lássanamahusat,namahus
 Keywords[sk]=písma,písmo,veľkosť písma,panel,ovládací panel,znakové sady,kódovanie,štýly,kicker,plochy,Správca súborov,Panely nástrojov,Ponuka,menu,titulok,titulok okna
 Keywords[sl]=pisava,pisave,velikost pisave,slog,stil,znakovni nabor,pult,kicker,nadzorna plošča,upravljalnik datotek,orodna vrstica,naslov okna,naslov
 Keywords[sr]=fonts,фонт size,styles,charsets,character sets,панел,kicker,control панел,desktops,FileManager,Toolbars,Menu,Window Title,Title,стилови,мени,прозор,трака са алатима,менаџер фајлова,радна површина,скуп знакова
diff -uNr kdebase-3.1.93/kcontrol/fonts/kxftconfig.cpp kdebase-3.1.93-new/kcontrol/fonts/kxftconfig.cpp
--- kdebase-3.1.93/kcontrol/fonts/kxftconfig.cpp	Sun Oct 26 05:46:17 2003
+++ kdebase-3.1.93-new/kcontrol/fonts/kxftconfig.cpp	Sat Nov  1 17:36:47 2003
@@ -38,7 +38,7 @@
 
 using namespace std;
 
-static QString contractHome(QString path)
+QString KXftConfig::contractHome(QString path)
 {
     if (!path.isEmpty() && '/'==path[0])
     {
@@ -56,7 +56,7 @@
     return path;
 }
 
-static QString expandHome(QString path)
+QString KXftConfig::expandHome(QString path)
 {
     if(!path.isEmpty() && '~'==path[0])
         return 1==path.length() ? QDir::homeDirPath() : path.replace(0, 1, QDir::homeDirPath());
diff -uNr kdebase-3.1.93/kcontrol/fonts/kxftconfig.h kdebase-3.1.93-new/kcontrol/fonts/kxftconfig.h
--- kdebase-3.1.93/kcontrol/fonts/kxftconfig.h	Fri Aug  1 03:46:12 2003
+++ kdebase-3.1.93-new/kcontrol/fonts/kxftconfig.h	Sat Nov  1 17:36:47 2003
@@ -119,6 +119,9 @@
 
     public:
 
+    static QString contractHome(QString path);
+    static QString expandHome(QString path);
+
     //
     // Constructor
     //    required - This should be a bitmask of 'RequiredData', and indicates the data to be
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kcmfontinst/KFileFontIconView.cpp kdebase-3.1.93-new/kcontrol/kfontinst/kcmfontinst/KFileFontIconView.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/kcmfontinst/KFileFontIconView.cpp	Sun Sep 21 04:34:46 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kcmfontinst/KFileFontIconView.cpp	Sat Nov  1 17:34:38 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 31/05/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -60,6 +60,7 @@
 
 bool CKFileFontIconView::acceptDrag(QDropEvent *e) const
 {
+#if 0 // Crashes - seems to be called to quick???
     bool       ok=false;
     KURL::List urls;
 
@@ -80,4 +81,7 @@
     }
 
     return ok;
+#endif
+    return KURLDrag::canDecode(e) && (e->source()!= const_cast<CKFileFontIconView*>(this)) &&
+           (QDropEvent::Copy==e->action() || QDropEvent::Move==e->action());
 }
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kcmfontinst/KFileFontView.cpp kdebase-3.1.93-new/kcontrol/kfontinst/kcmfontinst/KFileFontView.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/kcmfontinst/KFileFontView.cpp	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kcmfontinst/KFileFontView.cpp	Sat Nov  1 17:34:38 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 31/05/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -191,7 +191,8 @@
 
 void CKFileFontView::selected(QListViewItem *item)
 {
-    if (item && KGlobalSettings::singleClick())
+    if (item && !(KApplication::keyboardModifiers() & (KApplication::ShiftModifier|KApplication::ControlModifier)) &&
+         KGlobalSettings::singleClick())
     {
         const KFileItem *fi = ((CFontListViewItem*)item)->fileInfo();
 
@@ -202,7 +203,7 @@
 
 void CKFileFontView::highlighted( QListViewItem *item )
 {
-    if (item )
+    if (item)
     {
         const KFileItem *fi = ((CFontListViewItem*)item)->fileInfo();
 
@@ -492,10 +493,12 @@
 
 bool CKFileFontView::acceptDrag(QDropEvent *e) const
 {
+#if 0   // Following doesn't seem to work, why???
     bool       ok=false;
     KURL::List urls;
 
-    if(KURLDrag::canDecode(e) && (e->source()!=const_cast<CKFileFontView *>(this)) &&
+
+    if((e->source()!=const_cast<CKFileFontView *>(this)) &&
        (QDropEvent::Copy==e->action() || QDropEvent::Move==e->action()) &&
        KURLDrag::decode(e, urls) && !urls.isEmpty())
     {
@@ -512,6 +515,10 @@
     }
 
     return ok;
+#endif
+
+    return KURLDrag::canDecode(e) && (e->source()!= const_cast<CKFileFontView*>(this)) &&
+           (QDropEvent::Copy==e->action() || QDropEvent::Move==e->action());
 }
 
 void CKFileFontView::contentsDragEnterEvent(QDragEnterEvent *e)
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kcmfontinst/kcmfontinst.desktop kdebase-3.1.93-new/kcontrol/kfontinst/kcmfontinst/kcmfontinst.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/kcmfontinst/kcmfontinst.desktop	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kcmfontinst/kcmfontinst.desktop	Sat Nov  1 17:34:38 2003
@@ -15,7 +15,7 @@
 Name=Font Installer
 Name[af]=Skrif tipe Installeerder
 Name[az]=Yazı Növü Qurucusu
-Name[bg]=Инсталатор на шрифт
+Name[bg]=Инсталатор на шрифтове
 Name[bs]=Dodavanje fontova
 Name[ca]=Instalador de fonts
 Name[cs]=Instalátor písem
@@ -51,6 +51,7 @@
 Name[pt_BR]=Instalador de Fontes
 Name[ro]=Instalator fonturi
 Name[ru]=Установка шрифтов
+Name[se]=Fontasajáiduhttejeaddji
 Name[sk]=Inštalátor písiem
 Name[sl]=Namestilnik pisav
 Name[sr]=Инсталатер фонтова
@@ -72,7 +73,7 @@
 Comment[af]=Installeer & voorskou skriftipes
 Comment[az]=Yazı növü qur & nümayiş et
 Comment[be]=Усталяваць і праглядзець шрыфты
-Comment[bg]=Инсталира и преглежда шрифтове
+Comment[bg]=Инсталиране и преглед на шрифтове
 Comment[bs]=Dodavanje i pregledanje fontova
 Comment[ca]=Instal·la i previsualitza fonts
 Comment[cs]=Instalace a náhled písem
@@ -107,6 +108,7 @@
 Comment[pt_BR]=Instalar e visualizar fontes
 Comment[ro]=Instalează şi previzualizează fonturi
 Comment[ru]=Установка и просмотр шрифтов
+Comment[se]=Sajáiduhtte ja čájet fonttaid
 Comment[sk]=Inštaluje a zobrazuje písma
 Comment[sl]=Namesti in prikaže pisave
 Comment[sr]=Инсталација и преглед фонтова
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kfile-plugin/KFileFont.cpp kdebase-3.1.93-new/kcontrol/kfontinst/kfile-plugin/KFileFont.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/kfile-plugin/KFileFont.cpp	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kfile-plugin/KFileFont.cpp	Sat Nov  1 17:34:38 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 20/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -31,7 +31,7 @@
 #include "Misc.h"
 #include "CompressedFile.h"
 #include "Global.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include <kgenericfactory.h>
 #include <kdeversion.h>
 #include <qfile.h>
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kfile-plugin/kfile_font.desktop kdebase-3.1.93-new/kcontrol/kfontinst/kfile-plugin/kfile_font.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/kfile-plugin/kfile_font.desktop	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kfile-plugin/kfile_font.desktop	Sat Nov  1 17:34:38 2003
@@ -4,7 +4,7 @@
 Name=Font Information
 Name[af]=Skrif tipe Informasie
 Name[be]=Інфармацыя аб шрыфце
-Name[bg]=Информация за Шрифт
+Name[bg]=Информация за шрифт
 Name[bs]=Informacije o fontu
 Name[ca]=Informació de la font
 Name[cs]=Informace o písmu
@@ -36,6 +36,7 @@
 Name[pt]=Informação do Tipo de Letra
 Name[pt_BR]=Informações sobre a Fonte
 Name[ru]=Сведения о шрифте
+Name[se]=Fontadieđut
 Name[sk]=Informácie o písmach
 Name[sl]=Informacije o pisavi
 Name[sr]=Информације о фонту
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kfontinst/Main.cpp kdebase-3.1.93-new/kcontrol/kfontinst/kfontinst/Main.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/kfontinst/Main.cpp	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kfontinst/Main.cpp	Sat Nov  1 17:34:38 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 20/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -28,7 +28,7 @@
 
 #include "Global.h"
 #include "Misc.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Fontmap.h"
 #include "XConfig.h"
 #include "kxftconfig.h"
@@ -77,7 +77,10 @@
 #endif
 
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(ds));
 #endif
@@ -90,12 +93,17 @@
 //
 // Try to ensure both xftconfig/fonts.conf and X11 config have the same
 // direcories listed.
-static int kfi_sync_dirs()
+static void kfi_sync_dirs()
 {
     //
     // *Always* ensure top-level folders are in path...
-    CGlobal::userXcfg().addPath(CGlobal::cfg().getUserFontsDir());
-    CGlobal::userXft().addDir(CGlobal::cfg().getUserFontsDir());
+    QStringList::ConstIterator uIt;
+
+    for(uIt=CGlobal::cfg().getUserFontsDirs().begin(); uIt!=CGlobal::cfg().getUserFontsDirs().end(); ++uIt)
+    {
+        CGlobal::userXcfg().addPath(*uIt);
+        CGlobal::userXft().addDir(*uIt);
+    }
 
     QStringList           xftDirs(CGlobal::userXft().getDirs()),
                           x11Dirs,
@@ -126,7 +134,10 @@
             CGlobal::userXft().addDir(*it);
         CGlobal::userXft().apply();
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         for(it=inX11NotXft.begin(); it!=inX11NotXft.end(); ++it)
             CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*it));
@@ -152,8 +163,12 @@
 
     if(CGlobal::userXft().changed()) // Would only happen if top-level added only
     {
+        QStringList::ConstIterator xftIt;
+
         CGlobal::userXft().apply();
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
     }
 }
 
@@ -172,14 +187,15 @@
         CGlobal::create(true, true);
         kfi_sync_dirs();
 
-        CGlobal::xcfg().addPath(CGlobal::cfg().getUserFontsDir());
         CGlobal::xcfg().removePath(ds);
-        CGlobal::xft().addDir(CGlobal::cfg().getUserFontsDir());
         CGlobal::xft().removeDir(ds);
         rv=CGlobal::xcfg().writeConfig() && CGlobal::xft().apply() ? 0 : -4;
 
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(ds));
 #endif
@@ -195,18 +211,18 @@
 
 static int kfi_mkdir(const char *dir, bool make=true)
 {
+    KInstance kinst("kfontinst");
+
+    CGlobal::create(true, true);
+
     QString ds(CMisc::dirSyntax(dir));
     int     rv=!make || CMisc::createDir(ds) ? 0 : -2;
 
     if(0==rv)
     {
-        KInstance kinst("kfontinst");
-
-        CGlobal::create(true, true);
         kfi_sync_dirs();
 
         chmod(dir, CMisc::DIR_PERMS);
-        CGlobal::xcfg().addPath(CGlobal::cfg().getUserFontsDir());
         CGlobal::xcfg().addPath(ds);
 
 #ifdef HAVE_FONTCONFIG
@@ -217,12 +233,14 @@
 #endif
 
         CFontmap::createLocal(ds);
-        CGlobal::xft().addDir(CGlobal::cfg().getUserFontsDir());
         CGlobal::xft().addDir(ds);
         rv=CGlobal::xcfg().writeConfig() && CGlobal::xft().apply() ? 0 : -4;
 
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(ds));
 #endif 
@@ -230,9 +248,9 @@
         if(CMisc::root())
             CGlobal::cfg().storeSysXConfigFileTs();
         CMisc::setTimeStamps(ds);
-
-        CGlobal::destroy();
     }
+
+    CGlobal::destroy();
     
     return rv;
 }
@@ -264,12 +282,25 @@
 
 static int kfi_install(const char *from, const char *to)
 {
+    KInstance kinst("kfontinst");
+    int       rv=-2;
+        
+    CGlobal::create(true, true);
+
+    QString dir(CMisc::getDir(to));
+
+    if(!CMisc::dExists(dir))
+        CMisc::createDir(dir);
+
     if(CMisc::doCmd("cp", "-f", from, to))
     {
         chmod(to, CMisc::FILE_PERMS);
-        return 0;
+        rv=0;
     }
-    return -2;
+
+    CGlobal::destroy();
+
+    return rv;
 }
 
 static int kfi_rename(const char *from, const char *to)
@@ -286,9 +317,6 @@
         CGlobal::create(true, true);
         kfi_sync_dirs();
 
-        CGlobal::xcfg().addPath(CGlobal::cfg().getUserFontsDir());
-        CGlobal::xft().addDir(CGlobal::cfg().getUserFontsDir());
-
         if(!CMisc::hidden(to, true))
         {
             CGlobal::xcfg().addPath(toDs);
@@ -315,7 +343,10 @@
         rv=CGlobal::xcfg().writeConfig() && CGlobal::xft().apply() ? 0 : -4;
 
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         if(-1!=slash)
             CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(fromDs.left(slash+1)));
@@ -374,9 +405,9 @@
     }
 
     if(-1==rv)
-        std::cerr << "Usage: " << argv[0] << "<command> <dir/font> [<to>]\n"
-                  << "       " << argv[0] << "refresh\n"
-                  << "       " << argv[0] << "createfontmap\n"
+        std::cerr << "Usage: " << argv[0] << " <command> <dir/font> [<to>]\n"
+                  << "       " << argv[0] << " refresh\n"
+                  << "       " << argv[0] << " createfontmap\n"
                   << "           Commands:\n"
                   << "               mkdir     Create directory, and add to config files\n"
                   << "               rmdir     Remove directory, and remove from config files\n"
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kio/KioFonts.cpp kdebase-3.1.93-new/kcontrol/kfontinst/kio/KioFonts.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/kio/KioFonts.cpp	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kio/KioFonts.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 05/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -62,6 +62,7 @@
 #include "XConfig.h"
 #include "kxftconfig.h"
 #include <kdesu/su.h>
+#include <kprocess.h>
 
 #define MAX_IPC_SIZE  (1024*32)
 #define TIMEOUT       2         // Time between last mod and writing files...
@@ -97,6 +98,25 @@
     return 0;
 }
 
+enum ExistsType
+{
+    EXISTS_DIR,
+    EXISTS_FILE,
+    EXISTS_NO
+};
+
+static ExistsType checkIfExists(const QStringList &list, const QString &item)
+{
+    QStringList::ConstIterator it;
+    KDE_struct_stat            buff;
+
+    for(it=list.begin(); it!=list.end(); ++it)
+        if(-1!=KDE_stat(QFile::encodeName(*it+item).data(), &buff))
+            return S_ISDIR(buff.st_mode) ? EXISTS_DIR : EXISTS_FILE;
+
+    return EXISTS_NO;
+}
+
 static bool isSpecialDir(const QString &sub, bool sys)
 {
     if(sys || CMisc::root())
@@ -164,6 +184,16 @@
         addAtom(entry, KIO::UDS_GUESSED_MIME_TYPE, 0, "application/octet-stream");
         return true;
     }
+    else if (!CMisc::root() && CGlobal::cfg().getSysFontsDirs().first()==path)
+    {
+        QStringList::ConstIterator it=CGlobal::cfg().getSysFontsDirs().begin();
+
+        it++;  // Skip 1st one - thats this one!!!
+        for(; it!=CGlobal::cfg().getSysFontsDirs().end(); ++it)
+            if(createUDSEntry(entry, name, *it, mime))
+                return true;
+        return createUDSEntry(entry, name, "/", mime);
+    }
 
     return false;
 }
@@ -261,7 +291,7 @@
     return; \
 }
 
-static void checkPath(const QCString path, bool &exists, bool &hidden)
+static void checkPath(const QCString &path, bool &exists, bool &hidden)
 {
     int slashPos=path.findRev('/', path.length()-2);
 
@@ -290,6 +320,20 @@
     }
     else
         hidden=false;
+
+    KDE_DBUG << "checkPath " << path << " " << hidden << " " << exists << endl;
+}
+
+static void checkPath(const QStringList &dirs, const QString &item, bool &exists, bool &hidden)
+{
+    QStringList::ConstIterator it;
+    bool                       le=false,
+                               lh=false;
+
+    for(it=dirs.begin(); it!=dirs.end() && !le; ++it)
+        checkPath(QFile::encodeName(*it+item), le, lh);
+    exists=le;
+    hidden=lh;
 }
 
 CKioFonts::CKioFonts(const QCString &pool, const QCString &app)
@@ -323,31 +367,28 @@
 
     if(CMisc::root())
     {
-        size=getSize(CMisc::dirSyntax(CGlobal::cfg().getUserFontsDir()+url.encodedPathAndQuery(-1)));
+        size=getSize(CGlobal::cfg().getUserFontsDirs(), url.encodedPathAndQuery(-1), false);
         totalSize(size);
-        listDir(CGlobal::cfg().getRealTopDir(), url.encodedPathAndQuery(-1), false);
+        listDir(CGlobal::cfg().getUserFontsDirs(), url.encodedPathAndQuery(-1), false);
     }
     else if(QStringList::split('/', url.path(), false).count()==0)
     {
         size=2;
         totalSize(size);
-        createDirEntry(entry, i18n(KIO_FONTS_USER), CGlobal::cfg().getUserFontsDir(), false);
+        createDirEntry(entry, i18n(KIO_FONTS_USER), CGlobal::cfg().getUserFontsDirs().first(), false);
         listEntry(entry, false);
-        createDirEntry(entry, i18n(KIO_FONTS_SYS), CGlobal::cfg().getSysFontsDir(), true);
+        createDirEntry(entry, i18n(KIO_FONTS_SYS), CGlobal::cfg().getSysFontsDirs().first(), true);
         listEntry(entry, false);
-        addDir(CGlobal::cfg().getUserFontsDir());
-        cfgDir(CGlobal::cfg().getUserFontsDir());
+        addDir(CGlobal::cfg().getUserFontsDirs().first());
+        cfgDir(CGlobal::cfg().getUserFontsDirs().first());
     }
     else
     {
-        QString top(CGlobal::cfg().getRealTopDir(url.path()));
+        const QStringList &top=CGlobal::cfg().getRealTopDirs(url.path());
 
-        if(!top.isNull())
-        {
-            size=getSize(CMisc::dirSyntax(top+CMisc::getSub(url.path())));
-            totalSize(size);
-            listDir(top, CMisc::getSub(url.path()), i18n(KIO_FONTS_SYS)==CMisc::getSect(url.path()));
-        }
+        size=getSize(top, CMisc::getSub(url.path()), i18n(KIO_FONTS_SYS)==CMisc::getSect(url.path()));
+        totalSize(size);
+        listDir(top, CMisc::getSub(url.path()), i18n(KIO_FONTS_SYS)==CMisc::getSect(url.path()));
     }
 
     listEntry(size ? entry : KIO::UDSEntry(), true);
@@ -356,75 +397,97 @@
     KDE_DBUG << "listDir - finished!" << endl;
 }
 
-int CKioFonts::getSize(const QString &ds)
+int CKioFonts::getSize(const QStringList &top, const QString &sub, bool sys)
 {
-    KDE_DBUG << "getSize " << ds << endl;
+    KDE_DBUG << "getSize " << top.first() << ", " << sub << ", " << sys << endl;
 
-    QDir                dir(ds);
-    const QFileInfoList *files=dir.entryInfoList(QDir::Dirs|QDir::Files|QDir::Hidden);
+    QStringList                entries;
+    QStringList::ConstIterator it;
 
-    int                 size=0;
-
-    if(files)
+    for(it=top.begin(); it!=top.end(); ++it)
     {
-        QFileInfoListIterator it(*files);
-        QFileInfo             *fInfo;
+        QString             ds(CMisc::dirSyntax(*it+sub));
+        QDir                dir(ds);
+        const QFileInfoList *files=dir.entryInfoList(QDir::Dirs|QDir::Files|QDir::Hidden);
 
-        for(; NULL!=(fInfo=it.current()); ++it)
-            if("."!=fInfo->fileName() && ".."!=fInfo->fileName() &&
-               (fInfo->isDir() || CFontEngine::isAFont(QFile::encodeName(fInfo->fileName()))
-                               || CFontEngine::isAAfm(QFile::encodeName(fInfo->fileName()))) )
-                    size++;
+        KDE_DBUG << "Looking in " << ds << endl;
+
+        if(files)
+        {
+            QFileInfoListIterator it(*files);
+            QFileInfo             *fInfo;
+
+            for(; NULL!=(fInfo=it.current()); ++it)
+                if("."!=fInfo->fileName() && ".."!=fInfo->fileName() &&
+                   (fInfo->isDir() || CFontEngine::isAFont(QFile::encodeName(fInfo->fileName()))
+                                   || CFontEngine::isAAfm(QFile::encodeName(fInfo->fileName()))) &&
+                   !isSpecialDir(fInfo->fileName(), sys) &&
+                   !entries.contains(fInfo->fileName()))
+                    entries.append(fInfo->fileName());
+        }
     }
 
-    KDE_DBUG << "Size:" << size << endl;
-    return size;
+    KDE_DBUG << "Size:" << entries.count() << endl;
+    return entries.count();
 }
 
-void CKioFonts::listDir(const QString &top, const QString &sub, bool sys)
+void CKioFonts::listDir(const QStringList &top, const QString &sub, bool sys)
 {
-    KDE_DBUG << "listDir " << top << ", " << sub << ", " << sys << endl;
+    KDE_DBUG << "listDir " << top.first() << ", " << sub << ", " << sys << endl;
 
-    KIO::UDSEntry       entry;
-    QString             dPath(CMisc::dirSyntax(top+sub)),
-                        name(CMisc::getName(sub));
-    QDir                dir(dPath);
-    const QFileInfoList *files=dir.entryInfoList(QDir::Dirs|QDir::Files|QDir::Hidden);
-    CXConfig            &xcfg=sys ? CGlobal::sysXcfg() : CGlobal::userXcfg();
+    QStringList                entries;
+    QStringList::ConstIterator it;
 
-    //
-    // Ensure this dir is in fontpath - if it exists, and it contains fonts!
-    if(!sys && (sub.isNull() || (!name.isNull() && !sys && QChar('.')!=name[0] && !isSpecialDir(name, sys))))
+    for(it=top.begin(); it!=top.end(); ++it)
     {
-        addDir(dPath);
-        cfgDir(dPath);
-    }
+        KIO::UDSEntry       entry;
+        QString             dPath(CMisc::dirSyntax(*it+sub)),
+                            name(CMisc::getName(sub));
+        QDir                dir(dPath);
+        const QFileInfoList *files=dir.entryInfoList(QDir::Dirs|QDir::Files|QDir::Hidden);
+        CXConfig            &xcfg=sys ? CGlobal::sysXcfg() : CGlobal::userXcfg();
 
-    if(files)
-    {
-        QFileInfoListIterator it(*files);
-        QFileInfo             *fInfo;
+        KDE_DBUG << "Looking in " << dPath << endl;
 
-        for(; NULL!=(fInfo=it.current()); ++it)
-            if("."!=fInfo->fileName() && ".."!=fInfo->fileName())
-                if(fInfo->isDir())
-                {
-                    if(!isSpecialDir(fInfo->fileName(), sys))
-                    {
-                        QString ds(CMisc::dirSyntax(fInfo->filePath()));
+        //
+        // Ensure this dir is in fontpath - if it exists, and it contains fonts!
+        if(!sys && (sub.isNull() || (!name.isNull() && !sys && QChar('.')!=name[0] && !isSpecialDir(name, sys))))
+        {
+            addDir(dPath);
+            cfgDir(dPath);
+        }
+
+        if(files)
+        {
+            QFileInfoListIterator it(*files);
+            QFileInfo             *fInfo;
 
-                        if((QChar('.')==fInfo->fileName()[0] || (!sys && addDir(ds)) || xcfg.subInPath(ds)) &&
-                           createDirEntry(entry, fInfo->fileName(), ds, sys && !CMisc::root()))
+            for(; NULL!=(fInfo=it.current()); ++it)
+                if("."!=fInfo->fileName() && ".."!=fInfo->fileName())
+                    if(fInfo->isDir())
+                    {
+                        if(!entries.contains(fInfo->fileName()) && !isSpecialDir(fInfo->fileName(), sys))
                         {
-                            if(!sys && QChar('.')!=fInfo->fileName()[0])
-                                cfgDir(ds);
-                            listEntry(entry, false);
+                            QString ds(CMisc::dirSyntax(fInfo->filePath()));
+
+                            if((QChar('.')==fInfo->fileName()[0] || (!sys && addDir(ds)) || xcfg.subInPath(ds)) &&
+                               createDirEntry(entry, fInfo->fileName(), ds, sys && !CMisc::root()))
+                            {
+                                if(!sys && QChar('.')!=fInfo->fileName()[0])
+                                    cfgDir(ds);
+                                listEntry(entry, false);
+                                entries.append(fInfo->fileName());
+                            }
                         }
                     }
-                }
-                else if(( CFontEngine::isAFont(QFile::encodeName(fInfo->fileName())) || CFontEngine::isAAfm(QFile::encodeName(fInfo->fileName())) ) &&
-                        createFileEntry(entry, fInfo->fileName(), fInfo->filePath()))
-                    listEntry(entry, false);
+                    else if(( CFontEngine::isAFont(QFile::encodeName(fInfo->fileName())) || CFontEngine::isAAfm(QFile::encodeName(fInfo->fileName())) ) &&
+                            !entries.contains(fInfo->fileName()) &&
+                            createFileEntry(entry, fInfo->fileName(), fInfo->filePath()))
+                    {
+                        listEntry(entry, false);
+                        entries.append(fInfo->fileName());
+                    }
+        }
     }
 }
 
@@ -441,16 +504,16 @@
     switch(path.count())
     {
         case 0:
-            err=!createDirEntry(entry, i18n("Fonts"), CGlobal::cfg().getRealTopDir(), false);
+            err=!createDirEntry(entry, i18n("Fonts"), CGlobal::cfg().getUserFontsDirs().first(), false);
             break;
         case 1:
             if(CMisc::root())
                 err=!createStatEntry(entry, url);
             else
                 if(i18n(KIO_FONTS_USER)==path[0])
-                    err=!createDirEntry(entry, i18n(KIO_FONTS_USER), CGlobal::cfg().getRealTopDir(url.path()), false);
+                    err=!createDirEntry(entry, i18n(KIO_FONTS_USER), CGlobal::cfg().getUserFontsDirs().first(), false);
                 else if(path[0]==i18n(KIO_FONTS_SYS))
-                    err=!createDirEntry(entry, i18n(KIO_FONTS_SYS), CGlobal::cfg().getRealTopDir(url.path()), true);
+                    err=!createDirEntry(entry, i18n(KIO_FONTS_SYS), CGlobal::cfg().getSysFontsDirs().first(), true);
                 else
                 {
                     error(KIO::ERR_SLAVE_DEFINED, i18n("Please specify \"%1\" or \"%2\".").arg(KIO_FONTS_USER).arg(KIO_FONTS_SYS));
@@ -475,37 +538,36 @@
 {
     KDE_DBUG << "createStatEntry " << url.path() << endl;
 
-    QString top(CGlobal::cfg().getRealTopDir(url.path())),
-            sub(CMisc::getSub(url.path())),
-            ds(CMisc::dirSyntax(top+sub));
 
-    QDir d(ds);
+    const QStringList          top=CGlobal::cfg().getRealTopDirs(url.path());
+    QStringList::ConstIterator it;
+    QString                    name(CMisc::getName(url.path()));
 
-    if(d.exists())
+    for(it=top.begin(); it!=top.end(); ++it)
     {
-//        return (QChar('.')==sub[0] || CGlobal::userXcfg().inPath(ds) || CGlobal::sysXcfg().inPath(ds)) &&
-//               createDirEntry(entry, CMisc::getName(url.path()), top+sub, !CMisc::root() && i18n(KIO_FONTS_SYS)==CMisc::getSect(url.path()));
+        QString sub(CMisc::getSub(url.path())),
+                ds(CMisc::dirSyntax(*it+sub));
 
-        QString name(CMisc::getName(url.path()));
+        QDir d(ds);
 
-        if(!isSpecialDir(name, sys))
+        if(d.exists())
         {
-            CXConfig xcfg=sys ? CGlobal::sysXcfg() : CGlobal::userXcfg();
-
-            if((QChar('.')==name[0] || xcfg.inPath(ds) || (!sys && addDir(ds))) && createDirEntry(entry, name, ds, sys && !CMisc::root()))
+            if(!isSpecialDir(name, sys))
             {
-                if(!sys && QChar('.')!=name[0])
-                    cfgDir(ds);
-                return true;
+                CXConfig xcfg=sys ? CGlobal::sysXcfg() : CGlobal::userXcfg();
+
+                if((QChar('.')==name[0] || xcfg.inPath(ds) || (!sys && addDir(ds))) && createDirEntry(entry, name, ds, sys && !CMisc::root()))
+                {
+                    if(!sys && QChar('.')!=name[0])
+                        cfgDir(ds);
+                    return true;
+                }
             }
         }
-    }
-    else
-    {
-        QString fName(CMisc::getName(url.path()));
-
-        return (CFontEngine::isAFont(QFile::encodeName(fName)) || CFontEngine::isAAfm(QFile::encodeName(fName))) &&
-                createFileEntry(entry, fName, top+sub);
+        else if(CMisc::fExists(*it+sub) &&
+                (CFontEngine::isAFont(QFile::encodeName(name)) || CFontEngine::isAAfm(QFile::encodeName(name))) &&
+                CMisc::fExists(*it+sub) && createFileEntry(entry, name, *it+sub))
+            return true;
     }
 
     return false;
@@ -516,7 +578,7 @@
     KDE_DBUG << "get " << url.path() << endl;
     CHECK_URL(url)
 
-    QCString realPath=QFile::encodeName(convertUrl(url));
+    QCString realPath=QFile::encodeName(convertUrl(url, true));
 
     KDE_struct_stat buff;
     if (-1==KDE_stat(realPath.data(), &buff))
@@ -588,7 +650,7 @@
 {
     KDE_DBUG << "put " << u.path() << endl;
 
-    QString  destOrig(convertUrl(u));
+    QString  destOrig(convertUrl(u, false));
     QCString destOrigC(QFile::encodeName(destOrig));
 
     // Check mime-type - only want to copy fonts, or AFM files...
@@ -602,22 +664,21 @@
     if(!confirmUrl(url))
         return;
 
-    destOrig=convertUrl(url);
+    destOrig=convertUrl(url, false);
     destOrigC=(QFile::encodeName(destOrig));
 
-    KDE_struct_stat buffOrig;
-    bool            origExists=(-1!=KDE_stat(destOrigC.data(), &buffOrig));
+    ExistsType origExists=checkIfExists(CGlobal::cfg().getRealTopDirs(url.path()), CMisc::getSub(url.path()));
 
-    if (origExists && !overwrite && !resume)
+    if (EXISTS_NO!=origExists && !overwrite && !resume)
     {
-        error(S_ISDIR(buffOrig.st_mode) ? KIO::ERR_DIR_ALREADY_EXIST : KIO::ERR_FILE_ALREADY_EXIST, destOrig);
+        error(EXISTS_DIR==origExists ? KIO::ERR_DIR_ALREADY_EXIST : KIO::ERR_FILE_ALREADY_EXIST, url.path());
         return;
     }
 
     bool otherExists,
          otherHidden;
 
-    checkPath(destOrigC, otherExists, otherHidden);
+    checkPath(CGlobal::cfg().getRealTopDirs(u.path()), CMisc::getSub(u.path()), otherExists, otherHidden);
 
     if(otherExists)
     {
@@ -642,16 +703,25 @@
 
             tmpFile.setAutoDelete(true);
 
-            if(putReal(tmpFile.name(), tmpFileC, origExists, mode, resume))
+            if(putReal(tmpFile.name(), tmpFileC, EXISTS_NO!=origExists, mode, resume))
             {
-                QCString cmd("cp -f "); // "kfontinst install ");
-
-                cmd+=tmpFileC;
-                cmd+=" ";
-                cmd+=destOrigC;
+                QCString cmd;
 
-                cmd+="; chmod 0644 ";
-                cmd+=destOrigC;
+                if(CMisc::dExists(CMisc::getDir(destOrig)))
+                {
+                    cmd+=("cp -f "); // "kfontinst install ");
+                    cmd+=tmpFileC;
+                    cmd+=" ";
+                    cmd+=destOrigC;
+                    cmd+="; chmod 0644 ";
+                }
+                else
+                {
+                    cmd+=("kfontinst install ");
+                    cmd+=tmpFileC;
+                    cmd+=" ";
+                    cmd+=destOrigC;
+                }
 
                 // Get root to move this to fonts folder...
                 if(doRootCmd(cmd, passwd))
@@ -664,7 +734,7 @@
         if(err)
             error(KIO::ERR_SLAVE_DEFINED, i18n("Could not access \"%1\" folder.").arg(KIO_FONTS_SYS));
     }
-    else if(putReal(destOrig, destOrigC, origExists, mode, resume))
+    else if(putReal(destOrig, destOrigC, EXISTS_NO!=origExists, mode, resume))
         modifiedDir(CMisc::getDir(destOrig));
 
     if(++itsNewFonts>MAX_NEW_FONTS)
@@ -798,10 +868,9 @@
     KDE_DBUG << "copy " << src.path() << " - " << d.path() << endl;
     CHECK_URL(src)
 
-    QCString        realSrc=QFile::encodeName(convertUrl(src)),
-                    realDest=QFile::encodeName(convertUrl(d));
-    KDE_struct_stat buffSrc,
-                    buffDest;
+    QCString        realSrc=QFile::encodeName(convertUrl(src, true)),
+                    realDest=QFile::encodeName(convertUrl(d, false));
+    KDE_struct_stat buffSrc;
 
     KDE_DBUG << "REAL:" << realSrc << " TO REAL:" << realDest << endl;
     if(S_ISDIR(buffSrc.st_mode))
@@ -820,11 +889,13 @@
     if(!confirmUrl(dest))
         return;
 
-    realDest=QFile::encodeName(convertUrl(dest));
+    realDest=QFile::encodeName(convertUrl(dest, false));
+
+    ExistsType destExists=checkIfExists(CGlobal::cfg().getRealTopDirs(dest.path()), CMisc::getSub(dest.path()));
 
-    if(-1!=KDE_stat(realDest.data(), &buffDest))
+    if (EXISTS_NO!=destExists)
     {
-        if(S_ISDIR(buffDest.st_mode))
+        if(EXISTS_DIR==destExists)
         {
            error(KIO::ERR_DIR_ALREADY_EXIST, dest.path());
            return;
@@ -838,7 +909,7 @@
 
     if(nonRootSys(dest))
     {
-        QCString cmd("cp -f ");
+        QCString cmd(CMisc::dExists(CMisc::getDir(realDest)) ? "cp -f " : "kfontinst install ");
 
         cmd+=realSrc;
         cmd+=" ";
@@ -955,8 +1026,9 @@
     CHECK_URL(src)
     CHECK_ALLOWED(src)
 
-    QCString srcPath(QFile::encodeName(convertUrl(src.path())));
-    QCString destPath(QFile::encodeName(convertUrl(dest.path())));
+    QCString srcPath(QFile::encodeName(convertUrl(src.path(), true)));
+    QString  sSub(CMisc::getSub(src.path())),
+             dSub(CMisc::getSub(dest.path()));
 
     KDE_struct_stat buffSrc;
 
@@ -966,11 +1038,15 @@
         return;
     }
 
-    KDE_struct_stat buffDest;
+    QCString destPath(QFile::encodeName(CMisc::getDir(srcPath)+CMisc::getFile(dest.path())));
 
-    if(-1!=KDE_stat(destPath.data(), &buffDest))
+    KDE_DBUG << "rename " << srcPath << " to " << destPath << endl;
+
+    ExistsType destExists=checkIfExists(CGlobal::cfg().getRealTopDirs(dest.path()), dSub);
+
+    if(EXISTS_NO!=destExists)
     {
-        if(S_ISDIR(buffDest.st_mode))
+        if(EXISTS_DIR==destExists)
         {
            error(KIO::ERR_DIR_ALREADY_EXIST, dest.path());
            return;
@@ -982,45 +1058,68 @@
         }
     }
 
-    bool nrs=false;
+    bool                       nrs=false,
+                               dir=S_ISDIR(buffSrc.st_mode),
+                               linkDir=S_ISLNK(buffSrc.st_mode) && !(CFontEngine::isAFont(srcPath)||CFontEngine::isAAfm(srcPath));
+    QStringList::ConstIterator it;
+    QStringList                list=CGlobal::cfg().getRealTopDirs(src.path());
 
     if(nonRootSys(dest))
     {
-        QCString cmd(S_ISDIR(buffSrc.st_mode) ? "kfontinst rename " : "mv -f ");
+        QCString cmd;
+        bool     first=true,
+                 found=false;
+
+        for(it=list.begin(); it!=list.end(); ++it)
+            if(dir ? CMisc::dExists(*it+sSub) : CMisc::fExists(*it+sSub) || CMisc::isLink(*it+sSub))
+            {
+                if(first)
+                    first=false;
+                else
+                    cmd+=" ; ";
+                cmd+=dir ? "kfontinst rename " : "mv -f ";
+                cmd+=QFile::encodeName(KProcess::quote(*it+sSub));
+                cmd+=" ";
+                cmd+=QFile::encodeName(KProcess::quote(*it+dSub));
+                found=true;
+            }
 
-        cmd+=srcPath;
-        cmd+=" ";
-        cmd+=destPath;
         nrs=true;
 
-        if(!doRootCmd(cmd))
+        if(!found || !doRootCmd(cmd))
         {
             error(KIO::ERR_CANNOT_RENAME, src.path());
             return;
         }
     }
     else
-        if(::rename(srcPath.data(), destPath.data()))
-        {
-            switch(errno)
+        for(it=list.begin(); it!=list.end(); ++it)
+            if(dir ? CMisc::dExists(*it+sSub) : CMisc::fExists(*it+sSub) || CMisc::isLink(*it+sSub))
             {
-                case EACCES:
-                case EPERM:
-                    error(KIO::ERR_ACCESS_DENIED, dest.path());
-                    break;
-                case EXDEV:
-                    error(KIO::ERR_UNSUPPORTED_ACTION, QString::fromLatin1("rename"));
-                    break;
-                case EROFS: // The file is on a read-only filesystem
-                    error(KIO::ERR_CANNOT_DELETE, src.path());
-                    break;
-                default:
-                    error(KIO::ERR_CANNOT_RENAME, src.path());
+                KDE_DBUG << "rename " << *it+sSub << " to " << *it+dSub << endl;
+
+                if(::rename(QFile::encodeName(*it+sSub).data(), QFile::encodeName(*it+dSub).data()))
+                {
+                    switch(errno)
+                    {
+                        case EACCES:
+                        case EPERM:
+                            error(KIO::ERR_ACCESS_DENIED, dest.path());
+                            break;
+                        case EXDEV:
+                            error(KIO::ERR_UNSUPPORTED_ACTION, QString::fromLatin1("rename"));
+                            break;
+                        case EROFS: // The file is on a read-only filesystem
+                            error(KIO::ERR_CANNOT_DELETE, src.path());
+                            break;
+                        default:
+                            error(KIO::ERR_CANNOT_RENAME, src.path());
+                    }
+                    return;
+                }
             }
-            return;
-        }
 
-    if(S_ISDIR(buffSrc.st_mode))
+    if(dir || linkDir)
     {
         if(!CMisc::hidden(srcPath, true))
             deletedDir(srcPath, nrs);
@@ -1046,12 +1145,11 @@
     KDE_DBUG << "mkdir " << url.path() << endl;
     CHECK_URL(url)
 
-    QCString        realPath=QFile::encodeName(convertUrl(url));
+    QCString        realPath=QFile::encodeName(convertUrl(url, false));
     bool            sys=nonRootSys(url);
     CXConfig        &xcfg=sys ? CGlobal::sysXcfg() : CGlobal::userXcfg();   // for root, syscfg==usercfg
-    KDE_struct_stat buff;
-    bool            exists=-1!=KDE_stat(realPath.data(), &buff),
-                    otherExists,
+    ExistsType      exists=checkIfExists(CGlobal::cfg().getRealTopDirs(url.path()), CMisc::getSub(url.path()));
+    bool            otherExists,
                     otherHidden;
 
     if(isSpecialDir(CMisc::getName(url.path()), sys))
@@ -1062,10 +1160,10 @@
                       : i18n("You cannot create a folder named \"kde-override\", as this is a special KDE folder."));
     else
     {
-        checkPath(realPath, otherExists, otherHidden);
+        checkPath(CGlobal::cfg().getRealTopDirs(url.path()), CMisc::getSub(url.path()), otherExists, otherHidden);
 
-        if(exists && xcfg.inPath(realPath))
-            error(S_ISDIR(buff.st_mode) ? KIO::ERR_DIR_ALREADY_EXIST : KIO::ERR_FILE_ALREADY_EXIST, url.path());
+        if(EXISTS_NO!=exists && xcfg.inPath(realPath))
+            error(EXISTS_DIR==exists ? KIO::ERR_DIR_ALREADY_EXIST : KIO::ERR_FILE_ALREADY_EXIST, url.path());
         else if(otherExists)
         {
             error(KIO::ERR_SLAVE_DEFINED, otherHidden ? i18n("A hidden/disabled folder (starting with a '.') already exists.\n"
@@ -1076,7 +1174,7 @@
         else
             if(sys)
             {
-                QCString cmd(exists ? "kfontinst adddir " : "kfontinst mkdir ");
+                QCString cmd(EXISTS_NO!=exists ? "kfontinst adddir " : "kfontinst mkdir ");
                 cmd+=realPath;
 
                 if(doRootCmd(cmd))
@@ -1089,7 +1187,7 @@
                     error(KIO::ERR_SLAVE_DEFINED, i18n("Could not access \"%1\" folder.").arg(KIO_FONTS_SYS));
             }
             else
-                if (!exists && 0!=::mkdir(realPath.data(), 0777 /*umask will be applied*/ ))
+                if (EXISTS_NO==exists && 0!=::mkdir(realPath.data(), 0777 /*umask will be applied*/ ))
                     error(EACCES==errno
                                   ? KIO::ERR_ACCESS_DENIED
                                   : ENOSPC==errno
@@ -1110,7 +1208,7 @@
     KDE_DBUG << "chmod " << url.path() << endl;
     CHECK_URL(url)
 
-    QCString realPath=QFile::encodeName(convertUrl(url));
+    QCString realPath=QFile::encodeName(convertUrl(url, true));
 
     if(nonRootSys(url))
     {
@@ -1138,77 +1236,104 @@
     CHECK_URL(url)
     CHECK_ALLOWED(url)
 
-    QString  realPath=convertUrl(url);
-    KDE_DBUG << "real " << realPath << endl;
+    QString                    sub(CMisc::getSub(url.path()));
+    QStringList::ConstIterator constIt;
+    QStringList::Iterator      it;
+    const QStringList          &list=CGlobal::cfg().getRealTopDirs(url.path());
+    QStringList                items;
+
+    for(constIt=list.begin(); constIt!=list.end(); ++constIt)
+        if((isFile && CMisc::fExists(*constIt+sub)) ||
+           (!isFile && CMisc::dExists(*constIt+sub)))
+            items.append(*constIt+sub);
+ 
+    KDE_DBUG << "real " << items << endl;
 
-    if(isFile)
-    {
-        QCString realPathC(QFile::encodeName(realPath));
-
-        if(nonRootSys(url))
+    if(items.count())
+        if(isFile)
         {
-            QCString cmd("rm -f "); // "kfontinst rmfont ");
-            cmd+=realPathC;
-
-            if(doRootCmd(cmd))
-                modifiedDir(CMisc::getDir(realPath), true);
-            else
-                error(KIO::ERR_SLAVE_DEFINED, i18n("Could not access \"%1\" folder.").arg(KIO_FONTS_SYS));
-        }
-        else
-            if (0!=unlink(realPathC.data()))
+            if(nonRootSys(url))
             {
-                if(EACCES==errno || EPERM==errno)
-                    error(KIO::ERR_ACCESS_DENIED, url.path());
-                else if(EISDIR==errno)
-                    error(KIO::ERR_IS_DIRECTORY, url.path());
-                else
-                    error(KIO::ERR_CANNOT_DELETE, url.path());
+                QCString cmd("rm -f "); // "kfontinst rmfont ");
 
-                return;
-            }
-            else
-            {
-                // Remove any other associated files - file.afm
-                // NO - AFMs are now displayed! CMisc::removeAssociatedFiles(realPath);
-                modifiedDir(CMisc::getDir(realPath));
-            }
-    }
-    else
-    {
-        QCString realPathC=QFile::encodeName(realPath);
-
-        if(nonRootSys(url))
-        {
-            QCString cmd("kfontinst rmdir ");
-            cmd+=realPathC;
+                for(it=items.begin(); it!=items.end(); ++it)
+                {
+                    cmd+=QFile::encodeName(KProcess::quote(*it));
+                    cmd+=" ";
+                }
 
-            if(doRootCmd(cmd))
-            {
-                CGlobal::cfg().storeSysXConfigFileTs();
-                deletedDir(realPath, true);
+                if(doRootCmd(cmd))
+                {
+                    for(it=items.begin(); it!=items.end(); ++it)
+                        modifiedDir(CMisc::getDir(*it), true);
+                }
+                else
+                    error(KIO::ERR_SLAVE_DEFINED, i18n("Could not access \"%1\" folder.").arg(KIO_FONTS_SYS));
             }
             else
-                error(KIO::ERR_SLAVE_DEFINED, i18n("Could not access \"%1\" folder.").arg(KIO_FONTS_SYS));
+                for(it=items.begin(); it!=items.end(); ++it)
+                    if (0!=unlink(QFile::encodeName(*it).data()))
+                    {
+                        if(EACCES==errno || EPERM==errno)
+                            error(KIO::ERR_ACCESS_DENIED, url.path());
+                        else if(EISDIR==errno)
+                            error(KIO::ERR_IS_DIRECTORY, url.path());
+                        else
+                            error(KIO::ERR_CANNOT_DELETE, url.path());
+
+                        return;
+                    }
+                    else
+                    {
+                        // Remove any other associated files - file.afm
+                        // NO - AFMs are now displayed! CMisc::removeAssociatedFiles(realPath);
+                        modifiedDir(CMisc::getDir(*it));
+                    }
         }
         else
         {
-            // 1st may need to remove any fonts.dir, fonts.scale, encodings.dir, XftCache*,
-            // fonts.cache*
-            CMisc::removeAssociatedFiles(realPath, true);
-
-            if(-1==::rmdir(realPathC.data()))
-                if(EACCES==errno || EPERM==errno)
-                    error(KIO::ERR_ACCESS_DENIED, url.path());
-                else
+            if(nonRootSys(url))
+            {
+                QCString cmd("kfontinst rmdir ");
+
+                for(it=items.begin(); it!=items.end(); ++it)
                 {
-                    error(KIO::ERR_COULD_NOT_RMDIR, url.path());
-                    return;
+                    cmd+=QFile::encodeName(KProcess::quote(*it));
+                    cmd+=" ";
+                }
+
+                if(doRootCmd(cmd))
+                {
+                    CGlobal::cfg().storeSysXConfigFileTs();
+                    for(it=items.begin(); it!=items.end(); ++it)
+                        deletedDir(*it, true);
                 }
+                else
+                    error(KIO::ERR_SLAVE_DEFINED, i18n("Could not access \"%1\" folder.").arg(KIO_FONTS_SYS));
+            }
             else
-                deletedDir(realPath);
+            {
+                // 1st may need to remove any fonts.dir, fonts.scale, encodings.dir, XftCache*,
+                // fonts.cache*
+                for(it=items.begin(); it!=items.end(); ++it)
+                {
+                    // 1st may need to remove any fonts.dir, fonts.scale, encodings.dir, XftCache*,
+                    // fonts.cache*
+                    CMisc::removeAssociatedFiles(*it, true);
+
+                    if(-1==::rmdir(QFile::encodeName(*it).data()))
+                        if(EACCES==errno || EPERM==errno)
+                            error(KIO::ERR_ACCESS_DENIED, url.path());
+                        else
+                        {
+                            error(KIO::ERR_COULD_NOT_RMDIR, url.path());
+                            return;
+                        }
+                    else
+                        deletedDir(*it);
+                }
+            }
         }
-    }
 
     finished();
 }
@@ -1220,7 +1345,7 @@
 {
     KDE_DBUG << "addDir " << ds << endl;
 
-    if(!CGlobal::userXcfg().inPath(ds))  // Check it's not already in path though!!!
+    if(!CGlobal::userXcfg().inPath(ds) && CMisc::dExists(ds))  // Check it's not already in path though!!!
     {
 #ifdef ADD_DIR_SHOULD_CHECK_FOR_PRESENCE_OF_FONTS
         QDir                dir(ds);
@@ -1263,7 +1388,7 @@
     //
     // Check that it's not one that we're gonna update later, and that either fonts.dir does not exist, or
     // the fonts.dir is much older than the last mod time of the dir
-    if(-1==itsModifiedDirs.findIndex(ds))    // Ensure its not one that we're gonna update later...
+    if(-1==itsModifiedDirs.findIndex(ds) && CMisc::dExists(ds))    // Ensure its not one that we're gonna update later...
     {
         time_t dTs=CMisc::getTimeStamp(ds);
         bool   doTs=false;
@@ -1292,7 +1417,10 @@
             if(CGlobal::userXft().changed())
                 CGlobal::userXft().apply();
 #ifdef HAVE_FONTCONFIG
-            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+            QStringList::ConstIterator xftIt;
+
+            for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+                CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
             CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(ds));
 #endif
@@ -1322,8 +1450,14 @@
 {
     //
     // *Always* ensure top-level folders are in path...
-    CGlobal::userXcfg().addPath(CGlobal::cfg().getUserFontsDir());
-    CGlobal::userXft().addDir(CGlobal::cfg().getUserFontsDir());
+
+    QStringList::ConstIterator uIt;
+
+    for(uIt=CGlobal::cfg().getUserFontsDirs().begin(); uIt!=CGlobal::cfg().getUserFontsDirs().end(); ++uIt)
+    {
+        CGlobal::userXcfg().addPath(*uIt);
+        CGlobal::userXft().addDir(*uIt);
+    }
 
     QStringList           xftDirs(CGlobal::userXft().getDirs()),
                           x11Dirs,
@@ -1358,7 +1492,10 @@
         }
         CGlobal::userXft().apply();
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         for(it=inX11NotXft.begin(); it!=inX11NotXft.end(); ++it)
             CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*it));
@@ -1384,7 +1521,11 @@
     if(CGlobal::userXft().changed()) // Would only happen if top-level added only
     {
         CGlobal::userXft().apply();
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
     }
 }
 
@@ -1456,7 +1597,10 @@
         CGlobal::userXft().addDir(ds);
 
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        QStringList::ConstIterator xftIt;
+
+        for(xftIt=CGlobal::cfg().getUserFontsDirs().begin(); xftIt!=CGlobal::cfg().getUserFontsDirs().end(); ++xftIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*xftIt));
 #else
         if(symFamilies.count())
         {
@@ -1485,11 +1629,11 @@
 
     if(sys)
     {
-        if(!CGlobal::sysXcfg().inPath(ds) || !CGlobal::sysXft().hasDir(ds)
-#ifdef HAVE_FONTCONFIG   // Ensure toop-level is also in
-               || !CGlobal::sysXft().hasDir(CGlobal::cfg().getSysFontsDir())
-#endif
-          )
+        if(!CGlobal::sysXcfg().inPath(ds) || !CGlobal::sysXft().hasDir(ds))
+// CPD: FIXME????
+// #ifdef HAVE_FONTCONFIG   // Ensure top-level is also in
+//                || !CGlobal::sysXft().hasDir(CGlobal::cfg().getSysFontsDir())
+// #endif
         {
             QCString cmd(CMisc::dExists(ds) ? "kfontinst adddir " : "kfontinst mkdir ");
 
@@ -1561,6 +1705,8 @@
 
     if(itsModifiedDirs.count())
     {
+        QStringList::ConstIterator constIt;
+
         for(it=itsModifiedDirs.begin(); it!=itsModifiedDirs.end(); ++it)
         {
             QString ds(CMisc::dirSyntax(*it));
@@ -1582,14 +1728,18 @@
             CGlobal::userXft().apply();
         CFontmap::createTopLevel();
 #ifdef HAVE_FONTCONFIG
-        CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(CGlobal::cfg().getUserFontsDir()));
+        for(constIt=CGlobal::cfg().getUserFontsDirs().begin(); constIt!=CGlobal::cfg().getUserFontsDirs().end(); ++constIt)
+            CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*constIt));
 #else
         for(it=itsModifiedDirs.begin(); it!=itsModifiedDirs.end(); ++it)
             CMisc::doCmd(XFT_CACHE_CMD, CMisc::xDirSyntax(*it));
 #endif
         for(it=itsModifiedDirs.begin(); it!=itsModifiedDirs.end(); ++it)
             CMisc::setTimeStamps(CMisc::dirSyntax(*it));
-        CMisc::setTimeStamps(CGlobal::cfg().getUserFontsDir());
+
+        for(constIt=CGlobal::cfg().getUserFontsDirs().begin(); constIt!=CGlobal::cfg().getUserFontsDirs().end(); ++constIt)
+            CMisc::setTimeStamps(*constIt);
+
         itsModifiedDirs.clear();
         CGlobal::userXcfg().refreshPaths();
     }
@@ -1667,18 +1817,20 @@
                     case CFontEngine::TRUE_TYPE:
                     case CFontEngine::OPEN_TYPE:
                     case CFontEngine::TT_COLLECTION:
-                        url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CGlobal::cfg().getSysTTSubDir()+
-                                    CMisc::getFile(url.path()));
+                        if(CGlobal::cfg().getSysTTSubDir().isNull())
+                            url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CMisc::getFile(url.path()));
+                        else
+                            url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CGlobal::cfg().getSysTTSubDir()+CMisc::getFile(url.path()));
                         break;
                     case CFontEngine::TYPE_1:
                     case CFontEngine::TYPE_1_AFM:
-                        url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CGlobal::cfg().getSysT1SubDir()+
-                                    CMisc::getFile(url.path()));
+                        if(CGlobal::cfg().getSysT1SubDir().isNull())
+                            url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CMisc::getFile(url.path()));
+                        else
+                            url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CGlobal::cfg().getSysT1SubDir()+CMisc::getFile(url.path()));
                         break;
                     default:
-                        error(KIO::ERR_SLAVE_DEFINED, i18n("To install bitmap (.bdf, .pcf, .snf), or Speedo (.spd) "
-                                                           "fonts\n in the \"%1\" folder you must specify a sub-folder.").arg(KIO_FONTS_SYS));
-                        return false;
+                            url.setPath(QChar('/')+i18n(KIO_FONTS_SYS)+QChar('/')+CMisc::getFile(url.path()));
                 }
             }
             else
@@ -1691,10 +1843,23 @@
     return true;
 }
 
-QString CKioFonts::convertUrl(const KURL &url)
+QString CKioFonts::convertUrl(const KURL &url, bool checkExists)
 {
     if(CMisc::root())
-        return CGlobal::cfg().getRealTopDir(url.path())+CMisc::getSub(url.path());
+    {
+        if(!checkExists)
+            return CGlobal::cfg().getUserFontsDirs().first()+CMisc::getSub(url.path());
+        else
+        {
+            QStringList::ConstIterator it;
+            QString                    sub(CMisc::getSub(url.path()));
+
+            for(it=CGlobal::cfg().getUserFontsDirs().begin(); it!=CGlobal::cfg().getUserFontsDirs().end(); ++it)
+                if(CMisc::fExists(*it+sub) || CMisc::dExists(*it+sub))
+                    return *it+sub;
+            return CGlobal::cfg().getUserFontsDirs().first()+sub;
+        }
+    }
     else
     {
         QString sect(CMisc::getSect(url.path()));
@@ -1702,6 +1867,22 @@
         if(i18n(KIO_FONTS_USER)!=sect && i18n(KIO_FONTS_SYS)!=sect)
             return url.path();
         else
-            return CGlobal::cfg().getRealTopDir(url.path())+CMisc::getSub(url.path());
+        {
+            const QStringList &list=i18n(KIO_FONTS_USER)==sect
+                                         ? CGlobal::cfg().getUserFontsDirs()
+                                         : CGlobal::cfg().getSysFontsDirs();
+            if(!checkExists)
+                return list.first()+CMisc::getSub(url.path());
+            else
+            {
+                QStringList::ConstIterator it;
+                QString                    sub(CMisc::getSub(url.path()));
+
+                for(it=list.begin(); it!=list.end(); ++it)
+                    if(CMisc::fExists(*it+sub) || CMisc::dExists(*it+sub))
+                        return *it+sub;
+                return list.first()+sub;
+            }
+        }
     }
 }
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kio/KioFonts.h kdebase-3.1.93-new/kcontrol/kfontinst/kio/KioFonts.h
--- kdebase-3.1.93/kcontrol/kfontinst/kio/KioFonts.h	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kio/KioFonts.h	Sat Nov  1 17:34:39 2003
@@ -7,7 +7,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 05/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -37,7 +37,7 @@
 #include <qfile.h>
 #include <qstringlist.h>
 #include "Misc.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Global.h"
 
 class CKioFonts : public KIO::SlaveBase
@@ -48,8 +48,8 @@
     virtual ~CKioFonts();
 
     void listDir(const KURL &url);
-    int  getSize(const QString &ds);
-    void listDir(const QString &top, const QString &sub, bool sys=true);
+    int  getSize(const QStringList &top, const QString &sub, bool sys=true);
+    void listDir(const QStringList &top, const QString &sub, bool sys=true);
     void stat(const KURL &url);
     bool createStatEntry(KIO::UDSEntry &entry, const KURL &url, bool sys=true);
     void get(const KURL &url);
@@ -77,7 +77,7 @@
     bool    doRootCmd(const char *cmd, bool askPasswd=true) { return doRootCmd(cmd, getRootPasswd(askPasswd)); }
     bool    confirmUrl(KURL &url);
 
-    static QString convertUrl(const KURL &url);
+    static QString convertUrl(const KURL &url, bool checkExists);
 
     private:
 
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kio/folder.desktop kdebase-3.1.93-new/kcontrol/kfontinst/kio/folder.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/kio/folder.desktop	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kio/folder.desktop	Sat Nov  1 17:34:39 2003
@@ -2,7 +2,7 @@
 Encoding=UTF-8
 Comment=Fonts folder
 Comment[be]=Тэчка шрыфтоў
-Comment[bg]=Папка с шрифтове
+Comment[bg]=Директория за шрифтове
 Comment[ca]=Carpeta de fonts
 Comment[cs]=Složka písem
 Comment[da]=Skrifttypemappe
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kio/fonts.desktop kdebase-3.1.93-new/kcontrol/kfontinst/kio/fonts.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/kio/fonts.desktop	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kio/fonts.desktop	Sat Nov  1 17:34:39 2003
@@ -44,6 +44,7 @@
 Name[pt_BR]=Fontes
 Name[ro]=Fonturi
 Name[ru]=Шрифты
+Name[se]=Fonttat
 Name[sk]=Písma
 Name[sl]=Pisave
 Name[sr]=Фонтови
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/kio/system-folder.desktop kdebase-3.1.93-new/kcontrol/kfontinst/kio/system-folder.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/kio/system-folder.desktop	Sun Oct 26 05:46:20 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/kio/system-folder.desktop	Sat Nov  1 17:34:39 2003
@@ -2,7 +2,7 @@
 Encoding=UTF-8
 Comment=System fonts folder
 Comment[be]=Тэчка сыстэмных шрыфтоў
-Comment[bg]=Папка сзс системни шрифтове
+Comment[bg]=Директория за системните шрифтове
 Comment[ca]=Carpeta de fonts per al sistema
 Comment[cs]=Složka se systémovými písmy
 Comment[da]=Mappe til systemets skrifttyper
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/Encodings.cpp kdebase-3.1.93-new/kcontrol/kfontinst/lib/Encodings.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/lib/Encodings.cpp	Fri Jul 18 18:46:16 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/Encodings.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 29/04/2001
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -28,7 +28,7 @@
 
 #include "Encodings.h"
 #include "Global.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Misc.h"
 #include "CompressedFile.h"
 #include <qdir.h>
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/FontEngine.cpp kdebase-3.1.93-new/kcontrol/kfontinst/lib/FontEngine.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/lib/FontEngine.cpp	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/FontEngine.cpp	Sat Nov  1 17:07:42 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 29/04/2001
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -56,7 +56,7 @@
 
 #include "FontEngine.h"
 #include "Global.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Misc.h"
 #include "CompressedFile.h"
 #include <ctype.h>
@@ -114,9 +114,14 @@
         ptr=ptr;
 
         if(err)
-            err=FT_New_Face(lib, QFile::encodeName(
-                                   CGlobal::cfg().getRealTopDir(id->path)+CMisc::getSub(id->path)),
-                            id->faceNo, face);
+        {
+            const QStringList          &list=CGlobal::cfg().getRealTopDirs(id->path);
+            QStringList::ConstIterator it;
+
+            for(it=list.begin(); it!=list.end(); it++)
+                if((err=FT_New_Face(lib, QFile::encodeName(*it+CMisc::getSub(id->path)), id->faceNo, face)))
+                    break;
+        }
         return err;
     }
 }
@@ -135,6 +140,7 @@
     itsEncoding=itsAfmEncoding=QString::null;
     itsFt.open=false;
     itsNumFaces=1;
+    itsPath=file;
 
     switch(itsType)
     {
@@ -191,7 +197,21 @@
 
 bool CFontEngine::openKioFont(const QString &file, unsigned short mask, bool force, int face)
 {
-    return openFont(file, mask, force, face) ? true : openFont(CGlobal::cfg().getRealTopDir(file)+CMisc::getSub(file), mask, force, face);
+    if(openFont(file, mask, force, face))
+        return true;
+    else
+    {
+        const QStringList          &list=CGlobal::cfg().getRealTopDirs(file);
+        QStringList::ConstIterator it;
+
+        for(it=list.begin(); it!=list.end(); it++)
+            if(openFont(*it+CMisc::getSub(file), mask, force, face))
+            {
+                itsPath=*it+CMisc::getSub(file);
+                return true;
+            }
+    }
+    return false; 
 }
 
 void CFontEngine::closeFont()
@@ -474,7 +494,7 @@
     painter.drawText(x, y, s);
 }
 
-void CFontEngine::createPreview(const QString &path, int width, int height, QPixmap &pix, int faceNo)
+void CFontEngine::createPreview(int width, int height, QPixmap &pix, int faceNo)
 {
     static const struct
     {
@@ -500,7 +520,7 @@
     FT_Size        size;
     FTC_Image_Desc font;
 
-    font.font.face_id=getId(path, faceNo);
+    font.font.face_id=getId(itsPath, faceNo);
     font.font.pix_width=font.font.pix_height=point2Pixel(sizes[s].font);
     font.image_type=ftc_image_grays;
 
@@ -518,10 +538,9 @@
     {
         QString name(itsFullName),
                 info;
-        bool    bmp=CFontEngine::isABitmap(QFile::encodeName(path));
         QFont   title(KGlobalSettings::generalFont());
 
-        if(bmp)
+        if(BITMAP==itsType)
         {
             int pos=name.findRev('(');
 
@@ -535,7 +554,7 @@
         y=painter.fontMetrics().height();
         drawText(painter, x, y, width, name);
 
-        if(bmp)
+        if(BITMAP==itsType)
         {
             y+=2+painter.fontMetrics().height();
             drawText(painter, x, y, width, info);
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/FontEngine.h kdebase-3.1.93-new/kcontrol/kfontinst/lib/FontEngine.h
--- kdebase-3.1.93/kcontrol/kfontinst/lib/FontEngine.h	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/FontEngine.h	Sat Nov  1 17:34:39 2003
@@ -7,7 +7,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 29/04/2001
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -250,7 +250,7 @@
     QString         createName(const QString &file, bool force=false);
 
 #ifdef HAVE_FT_CACHE
-    void            createPreview(const QString &path, int width, int height, QPixmap &pix, int faceNo);
+    void            createPreview(int width, int height, QPixmap &pix, int faceNo);
 
     static int      point2Pixel(int point)
     {
@@ -365,7 +365,8 @@
                    itsEncoding,    // Used only for Type1 fonts
                    itsAfmEncoding, // Used only for Type1 fonts
                    itsXlfd,        // Used for Bitmap fonts
-                   itsFoundry;
+                   itsFoundry,
+                   itsPath;
     float          itsItalicAngle;
     int            itsNumFaces;
     TFtData        itsFt;
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/Fontmap.cpp kdebase-3.1.93-new/kcontrol/kfontinst/lib/Fontmap.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/lib/Fontmap.cpp	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/Fontmap.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 06/06/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -26,7 +26,7 @@
 // (C) Craig Drummond, 2003
 ////////////////////////////////////////////////////////////////////////////////
 
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Fontmap.h"
 #include "Global.h"
 #include "FontEngine.h"
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/GetPid.c kdebase-3.1.93-new/kcontrol/kfontinst/lib/GetPid.c
--- kdebase-3.1.93/kcontrol/kfontinst/lib/GetPid.c	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/GetPid.c	Sat Nov  1 17:35:11 2003
@@ -5,7 +5,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 19/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -80,12 +80,13 @@
 #if defined OS_Linux || defined __Linux__
 
 #include <dirent.h>
+#include <ctype.h>
 
 #define FOUND_NAME 1
 #define FOUND_PPID 2
 #define FOUND_ALL (FOUND_NAME+FOUND_PPID)
 
-static unsigned int getPid(const char *proc, unsigned int ppid)
+unsigned int kfi_getPid(const char *proc, unsigned int ppid)
 {
     bool           error=false;
     unsigned int   pid=0;
@@ -152,7 +153,7 @@
     return error ? 0 : pid;
 }
 
-#elif defined OS_FreeBSD || defined OS_NetBSD || defined __FreeBSD__ || defined __NetBSD__
+#elif defined OS_FreeBSD || defined OS_NetBSD || defined __FreeBSD__ || defined __NetBSD__ || defined __APPLE__
 
 #include <ctype.h>
 #include <dirent.h>
@@ -166,7 +167,7 @@
 #include <sys/time.h>
 #include <sys/user.h>
 #include <unistd.h>
-static unsigned int getPid(const char *proc, unsigned int ppid)
+unsigned int kfi_getPid(const char *proc, unsigned int ppid)
 {
     bool              error=false;
     unsigned int      pid=0;
@@ -238,7 +239,7 @@
 #endif 
 #include <sys/sysinfo.h>
 
-static unsigned int getPid(const char *proc, pid_t ppid)
+unsigned int kfi_getPid(const char *proc, pid_t ppid)
 {
     DIR	         *procdir;
     bool         error=false;
@@ -297,7 +298,7 @@
 #include <sys/pstat.h>
 #define MAX_PROCS 50
 
-static unsigned int getPid(const char *proc, unsigned int ppid)
+unsigned int kfi_getPid(const char *proc, unsigned int ppid)
 {
     bool              error=false;
     unsigned int      pid=0;
@@ -326,7 +327,7 @@
 #include <procinfo.h>
 #define MAX_PROCS 50
 
-static unsigned int getPid(const char *proc, unsigned int ppid)
+unsigned int kfi_getPid(const char *proc, unsigned int ppid)
 {
     bool             error=false;
     unsigned int     pid=0;
@@ -377,7 +378,7 @@
     return strcmp(proc, cmd);
 }
 
-static unsigned int getPid(const char *proc, unsigned int ppid)
+unsigned int kfi_getPid(const char *proc, unsigned int ppid)
 {
     bool         error=false;
     unsigned int pid=0;
@@ -475,7 +476,7 @@
 int main(int argc, char *argv[])
 {
     if(3==argc)
-        printf("PID %u\n", getPid(argv[1], atoi(argv[2])));
+        printf("PID %u\n", kfi_getPid(argv[1], atoi(argv[2])));
     else
         printf("Usage: %s <process> <parent-process-id>\n", argv[0]);
     return 0;
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/Global.cpp kdebase-3.1.93-new/kcontrol/kfontinst/lib/Global.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/lib/Global.cpp	Fri Aug  1 03:46:14 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/Global.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 05/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -28,14 +28,14 @@
 
 #include "Global.h"
 #include "FontEngine.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Encodings.h"
 #include "XConfig.h"
 #include "kxftconfig.h"   // CPD: This should really be a symlik!
 #include <stdio.h>
 
 CFontEngine * CGlobal::theirFontEngine=NULL;
-CConfig     * CGlobal::theirConfig=NULL;
+CKfiConfig  * CGlobal::theirConfig=NULL;
 CEncodings  * CGlobal::theirEncodings=NULL;
 CXConfig    * CGlobal::theirSysXcfg=NULL;
 CXConfig    * CGlobal::theirUserXcfg=NULL;
@@ -44,7 +44,7 @@
 
 void CGlobal::create(bool checkDirs, bool checkX)
 {
-    theirConfig=new CConfig(true, checkDirs, checkX);
+    theirConfig=new CKfiConfig(true, checkDirs, checkX);
 }
 
 void CGlobal::destroy()
@@ -86,10 +86,10 @@
     return *theirFontEngine;
 }
 
-CConfig & CGlobal::cfg()
+CKfiConfig & CGlobal::cfg()
 {
     if(NULL==theirConfig)
-        theirConfig=new CConfig;
+        theirConfig=new CKfiConfig;
  
     return *theirConfig;
 }
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/Global.h kdebase-3.1.93-new/kcontrol/kfontinst/lib/Global.h
--- kdebase-3.1.93/kcontrol/kfontinst/lib/Global.h	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/Global.h	Sat Nov  1 17:34:39 2003
@@ -7,7 +7,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 05/03/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -32,7 +32,7 @@
 #include "Misc.h"
 
 class CFontEngine;
-class CConfig;
+class CKfiConfig;
 class CEncodings;
 class CXConfig;
 class KXftConfig;
@@ -49,7 +49,7 @@
     static void destroy();
 
     static CFontEngine & fe();
-    static CConfig &     cfg();
+    static CKfiConfig &  cfg();
     static CEncodings &  enc();
     static CXConfig &    sysXcfg();
     static CXConfig &    userXcfg();
@@ -61,7 +61,7 @@
     private:
 
     static CFontEngine *theirFontEngine;
-    static CConfig     *theirConfig;
+    static CKfiConfig  *theirConfig;
     static CEncodings  *theirEncodings;
     static CXConfig    *theirSysXcfg;
     static CXConfig    *theirUserXcfg;
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/KfiConfig.cpp kdebase-3.1.93-new/kcontrol/kfontinst/lib/KfiConfig.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/lib/KfiConfig.cpp	Wed Dec 31 19:00:00 1969
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/KfiConfig.cpp	Sat Nov  1 13:10:02 2003
@@ -0,0 +1,526 @@
+////////////////////////////////////////////////////////////////////////////////
+//
+// Class Name    : CKfiConfig
+// Author        : Craig Drummond
+// Project       : K Font Installer
+// Creation Date : 05/03/2003
+// Version       : $Revision$ $Date$
+//
+////////////////////////////////////////////////////////////////////////////////
+//
+// This program is free software; you can redistribute it and/or
+// modify it under the terms of the GNU General Public License
+// as published by the Free Software Foundation; either version 2
+// of the License, or (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program; if not, write to the Free Software
+// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+//
+////////////////////////////////////////////////////////////////////////////////
+// (C) Craig Drummond, 2003
+////////////////////////////////////////////////////////////////////////////////
+
+#include "KfiConfig.h"
+#include "Global.h"
+#include "Misc.h"
+#include <qdir.h>
+#include <qfile.h>
+#include <kapplication.h>
+#include <unistd.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <klocale.h>
+#include <fstream>
+
+#define KCONFIG_GROUP "KFontinst"
+
+static const QString constDefaultSysX11FontsDir     ("/usr/X11R6/lib/X11/fonts/");
+static const QString constDefaultSysTTSubDir        ("TrueType/");
+static const QString constDefaultSysT1SubDir        ("Type1/");
+static const QString constDefaultXConfigFile        ("/etc/X11/XF86Config-4");
+static const QString constDefaultXfsConfigFile      ("/etc/X11/fs/config");
+#ifndef HAVE_FONT_ENC
+static const QString constDefaultEncodingsDir       ("/usr/X11R6/lib/X11/fonts/encodings/");
+#endif
+static const QString constDefaultGhostscriptDir     ("/usr/share/ghostscript/");
+static const QString constNonRootDefaultXConfigFile ("fontpaths");
+
+static QString getDir(const QString &entry, const QString *posibilities, const QString &base=QString::null)
+{
+    if(CMisc::dExists(base+entry))
+        return entry;
+    else
+    {
+        int d;
+
+        for(d=0; !posibilities[d].isNull(); ++d)
+            if(CMisc::dExists(base+posibilities[d]))
+                break;
+
+        return posibilities[d];
+    }
+}
+
+static const QString & getFile(const QString &entry, const QString *posibilities)
+{
+    if(CMisc::fExists(entry))
+        return entry;
+    else
+    {
+        int f;
+
+        for(f=0; !posibilities[f].isNull(); ++f)
+            if(CMisc::fExists(posibilities[f]))
+                break;
+
+        return posibilities[f];
+    }
+}
+
+static QString locateFile(const QString &dir, const QString file, int level=0)
+{
+    if(level<CMisc::MAX_SUB_DIRS)
+    {
+        QDir d(dir);
+
+        if(d.isReadable())
+        {
+            const QFileInfoList *fList=d.entryInfoList();
+
+            if(fList)
+            {
+                QFileInfoListIterator it(*fList);
+                QFileInfo             *fInfo;
+                QString               str;
+
+                for(; NULL!=(fInfo=it.current()); ++it)
+                    if("."!=fInfo->fileName() && ".."!=fInfo->fileName())
+                        if(fInfo->isDir())
+                        {
+                            if(!(str=locateFile(fInfo->filePath()+"/", file, level+1)).isNull())
+                                return str;
+                        }
+                        else
+                            if(fInfo->fileName()==file)
+                                return fInfo->filePath();
+            }
+        }
+    }
+
+    return QString::null;
+}
+
+static QString locateFile(const QString &file, const QString *dirs)
+{
+    int     d;
+    QString str;
+
+    for(d=0; !dirs[d].isNull(); ++d)
+        if(!(str=locateFile(dirs[d], file)).isNull())
+            return str;
+
+    return QString::null;
+}
+
+static const QString constSysX11FontsDirs[]=
+{
+    constDefaultSysX11FontsDir,
+    "/usr/lib/X11/fonts/",
+    "/usr/openwin/lib/X11/fonts/",
+    QString::null
+};
+
+static const QString constTTSubDirs[]=
+{
+    constDefaultSysTTSubDir,
+    "truetype/",
+    "Truetype/",
+    "ttf/",
+    "TTF/",
+    "Ttf/",
+    "tt",
+    "TT",
+    "True_Type/",
+    "true_type/",
+    "True_type/",
+    "ttf.st/typefaces/",
+    "ttf.st/",
+    QString::null
+};
+
+static const QString constT1SubDirs[]=
+{
+    constDefaultSysT1SubDir,
+    "type1/",
+    "T1/",
+    "t1/",
+    "Postscript/",
+    "PSType1/",
+    "pstype1/",
+    "PsType1/",
+    "Pstype1/",
+    "type1.st/typefaces/",
+    "type1.st/",
+    QString::null
+};
+
+#ifndef HAVE_FONT_ENC
+static const QString constEncodingsSubDirs[]=
+{
+    "encodings/",
+    "Encodings/",
+    "enc/",
+    QString::null
+};
+#endif
+
+static const QString constXConfigFiles[]=
+{
+    constDefaultXConfigFile,
+    "/etc/X11/XF86Config",
+    "/etc/XF86Config-4",
+    "/etc/XF86Config",
+    //"/usr/X11R6/etc/X11/XF86Config.$HOSTNAME"
+    "/usr/X11R6/etc/X11/XF86Config-4",
+    "/usr/X11R6/etc/X11/XF86Config",
+    //"/usr/X11R6/lib/X11/XF86Config.$HOSTNAME",
+    "/usr/X11R6/lib/X11/XF86Config-4",
+    "/usr/X11R6/lib/X11/XF86Config",
+    QString::null
+};
+
+static const QString constXfsConfigFiles[]=
+{
+    constDefaultXfsConfigFile,
+    "/usr/openwin/lib/X11/fonts/fontserver.cfg",
+    QString::null
+};
+
+static const QString constGhostscriptDirs[]=
+{
+    constDefaultGhostscriptDir,
+    "/usr/local/share/ghostscript/",
+    QString::null
+};
+
+CKfiConfig::CKfiConfig(bool all, bool checkDirs, bool checkX)
+          : KConfig("kfontinstrc")
+{
+    QString sysX11FontsDir,
+            defaultSysXConfigFile,
+            defaultUserXConfigFile,
+            origUserFontsDir,
+            origSysX11FontsDir,
+            origSysXConfigFile,
+            origSysXfsConfigFile,
+            origUserXConfigFile,
+#ifndef HAVE_FONT_ENC
+            origEncodingsDir,
+#endif
+            origSysTTSubDir,
+            origSysT1SubDir,
+            origFontmapDir,
+            origGhostscriptFile,
+            home;
+    bool    configured=false,
+            origConfigured=false,
+            origSysXfs=false,
+            root=CMisc::root();
+    int     origSysXConfigFileTs=0,
+            sysXConfigFileTs=0;
+
+    KConfigGroupSaver saver(this, KCONFIG_GROUP);
+
+    itsSysFontsDirs.append("/usr/local/share/fonts/");
+    itsSysFontsDirs.append("/usr/share/fonts/");
+    
+    if(!root)
+    {
+        char * kdeHome=getenv("KDEHOME");
+        itsUserFontsDirs.append(QFile::encodeName(CMisc::dirSyntax(QDir::homeDirPath()+"/.fonts/")));
+
+        if(kdeHome)
+            itsUserFontsDirs.append(QFile::encodeName(CMisc::dirSyntax(QString(kdeHome)+"/share/fonts/")));
+    }
+
+    if(all)
+    {
+        defaultSysXConfigFile=constDefaultXConfigFile;
+        defaultUserXConfigFile=root ? defaultSysXConfigFile : (itsUserFontsDirs.first()+constNonRootDefaultXConfigFile);
+    }
+
+    configured=readBoolEntry("Configured", false);
+    sysX11FontsDir=CMisc::dirSyntax(readPathEntry("SysX11FontsDir", constDefaultSysX11FontsDir));
+
+    if(all)
+    {
+        itsSysXConfigFile=readPathEntry("SysXConfigFile", defaultSysXConfigFile);
+        itsSysXfsConfigFile=readPathEntry("SysXfsConfigFile", constDefaultXfsConfigFile);
+        sysXConfigFileTs=readNumEntry("SysXConfigFileTs", 0);
+        itsUserXConfigFile=readPathEntry("UserXConfigFile", defaultUserXConfigFile);
+#ifndef HAVE_FONT_ENC
+        itsEncodingsDir=CMisc::dirSyntax(readPathEntry("EncodingsDir", constDefaultEncodingsDir));
+#endif
+        itsSysXfs=readBoolEntry("SysXfs", false);
+        itsSysTTSubDir=CMisc::dirSyntax(readEntry("SysTTSubDir", constDefaultSysTTSubDir));
+        itsSysT1SubDir=CMisc::dirSyntax(readEntry("SysT1SubDir", constDefaultSysT1SubDir));
+        itsFontmapDir=CMisc::dirSyntax(readPathEntry("FontmapDir", root ? "/etc/fonts" : itsUserFontsDirs.first()));
+
+        origConfigured=configured;
+        origSysX11FontsDir=sysX11FontsDir;
+        origSysXConfigFile=itsSysXConfigFile;
+        origSysXfsConfigFile=itsSysXfsConfigFile;
+        origUserXConfigFile=itsUserXConfigFile;
+#ifndef HAVE_FONT_ENC
+        origEncodingsDir=itsEncodingsDir;
+#endif
+        origSysTTSubDir=itsSysTTSubDir;
+        origSysT1SubDir=itsSysT1SubDir;
+        origSysXfs=itsSysXfs;
+        origSysXConfigFileTs=sysXConfigFileTs;
+        origFontmapDir=itsFontmapDir;
+
+        if(root)
+        {
+            itsGhostscriptFile=readPathEntry("GhostscriptFile", QString::null);
+            origGhostscriptFile=itsGhostscriptFile;
+        }
+    }
+
+    // Now check the read in data...
+    if(!(sysX11FontsDir=getDir(sysX11FontsDir, constSysX11FontsDirs)).isNull())
+        itsSysFontsDirs.append(sysX11FontsDir);
+
+    if(root) // For root, these are *always* the same
+        itsUserFontsDirs=itsSysFontsDirs;
+    //
+    // First of all, if this is the first time KFontinst has been run, check for the existance of
+    // /usr/local/share/fonts or $HOME/.fonts - if it doesn't exist then try to create
+    if(!CMisc::dExists(itsUserFontsDirs.first()))
+        CMisc::createDir(itsUserFontsDirs.first());
+
+    if(!configured && !CMisc::dExists(itsFontmapDir))
+        CMisc::createDir(itsFontmapDir);
+
+    if(all)
+    {
+        //
+        // Try to determine location for X and xfs config files...
+        // ...note on some systems (Solaris and HP-UX) only the xfs file will be found
+        itsSysXConfigFile=getFile(itsSysXConfigFile, constXConfigFiles);
+        itsSysXfsConfigFile=getFile(itsSysXfsConfigFile, constXfsConfigFiles);
+
+        // If found xfs, but not X - then assume that xfs is being used...
+        if(!itsSysXfsConfigFile.isNull() && itsSysXConfigFile.isNull())
+            itsSysXfs=true;
+        else
+            itsSysXfs=false;
+        //
+        // Check to see whether user has switched from X to xfs, or vice versa...
+        if(configured && checkX && CMisc::fExists(itsSysXConfigFile))
+        {
+            int ts=CMisc::getTimeStamp(itsSysXConfigFile);
+
+            //
+            // The X config file is where the system will specify whether xfs is being used or not,
+            // so check if the timestamp of this has changed. If so, then set xfs to false - so that
+            // a re-check of the X config file will be performed.
+            if(sysXConfigFileTs!=ts)
+                itsSysXfs=false;
+            else   // OK, file has not been modified, therefore no reason to force a check
+                checkX=false;
+        }
+
+        if(!configured || checkDirs)
+        {
+            if(root)
+            {
+                if(itsGhostscriptFile.isNull() || !CMisc::fExists(itsGhostscriptFile))
+                    itsGhostscriptFile=locateFile("Fontmap", constGhostscriptDirs);
+            }
+
+            QStringList::Iterator it;
+            bool                  foundTT=false,
+                                  foundT1=false;
+
+            for(it=itsSysFontsDirs.begin(); it!=itsSysFontsDirs.end() && (!foundTT || !foundT1); ++it)
+            {
+                if(CMisc::dExists(*it+itsSysTTSubDir))
+                    foundTT=true;
+                if(CMisc::dExists(*it+itsSysT1SubDir))
+                    foundT1=true;
+            }
+
+            for(it=itsSysFontsDirs.begin(); it!=itsSysFontsDirs.end() && (!foundTT || !foundT1); ++it)
+            {
+                if(!foundTT && !(itsSysTTSubDir=getDir(constDefaultSysTTSubDir, constTTSubDirs, *it)).isNull())
+                    foundTT=true;
+                if(!foundT1 && !(itsSysT1SubDir=getDir(constDefaultSysT1SubDir, constT1SubDirs, *it)).isNull())
+                    foundT1=true;
+
+            }
+            
+
+#ifndef HAVE_FONT_ENC
+            if(!CMisc::dExists(itsEncodingsDir))
+            {
+                QString top[]={ sysX11FontsDir.isNull() ? constDefaultSysX11FontsDir : sysX11FontsDir, "/usr/share/", "/usr/local/share/", QString::null };
+                bool    found=false;
+                int     t,
+                        s;
+
+                for(t=0; !top[t].isNull() && !found; ++t)
+                    for(s=0; !constEncodingsSubDirs[s].isNull() && !found; ++s)
+                        if(CMisc::dExists(top[t]+constEncodingsSubDirs[s]))
+                        {
+                            itsEncodingsDir=top[t]+constEncodingsSubDirs[s];
+                            found=true;
+                        }
+
+                if(!found)
+                    itsEncodingsDir=sysX11FontsDir.isEmpty() ? itsSysFontsDirs.first() : sysX11FontsDir;
+            }
+#endif
+        }
+
+        if(!configured || checkX)
+            checkAndModifyXConfigFile();
+
+        configured=true;
+
+        if(root)
+            if(origGhostscriptFile!=itsGhostscriptFile)
+                writeEntry("GhostscriptFile", itsGhostscriptFile);
+
+        if(origConfigured!=configured)
+            writeEntry("Configured", configured);
+        if(origSysX11FontsDir!=sysX11FontsDir)
+            writePathEntry("SysX11FontsDir", sysX11FontsDir);
+
+        if(all)
+        {
+            if(origSysTTSubDir!=itsSysTTSubDir)
+                writeEntry("SysTTSubDir", itsSysTTSubDir);
+            if(origSysT1SubDir!=itsSysT1SubDir)
+                writeEntry("SysT1SubDir", itsSysT1SubDir);
+            if(origSysXConfigFile!=itsSysXConfigFile)
+                writePathEntry("SysXConfigFile", itsSysXConfigFile);
+            if(origSysXfsConfigFile!=itsSysXfsConfigFile)
+                writePathEntry("SysXfsConfigFile", itsSysXfsConfigFile);
+            if(origSysXConfigFileTs!=sysXConfigFileTs)
+                writeEntry("SysXConfigFileTs", sysXConfigFileTs);
+            if(origSysXfs!=itsSysXfs)
+                writeEntry("SysXfs", itsSysXfs);
+            if(origUserXConfigFile!=itsUserXConfigFile)
+                writePathEntry("UserXConfigFile", itsUserXConfigFile);
+#ifndef HAVE_FONT_ENC
+            if(origEncodingsDir!=itsEncodingsDir)
+                writePathEntry("EncodingsDir", itsEncodingsDir);
+#endif
+            if(origFontmapDir!=itsFontmapDir)
+                writePathEntry("FontmapDir", itsFontmapDir);
+        }
+    }
+
+    // Restore KConfig group...
+    sync();
+}
+
+void CKfiConfig::checkAndModifyXConfigFile()
+{
+    //
+    // Check if XF86Config has been selected by CKfiConfig, and if so, have a look to see wether it has
+    // 'unix/<hostname>:<port>' as the fontpath - if so then look for the fontserver 'config' file instead...
+    if(!itsSysXfs)
+    {
+        int slashPos=itsSysXConfigFile.findRev('/');
+
+        if(slashPos!=-1)
+        {
+            QString file=itsSysXConfigFile.mid(slashPos+1);
+
+            if(file.find("XF86Config")!=-1)
+            {
+                std::ifstream f(QFile::encodeName(itsSysXConfigFile));
+
+                if(f)
+                {
+                    const int constMaxLineLen=1024;
+
+                    char line[constMaxLineLen],
+                         str1[constMaxLineLen],
+                         str2[constMaxLineLen];
+                    bool inFiles=false,
+                         useXfs=false;
+
+                    do
+                    {
+                        f.getline(line, constMaxLineLen);
+
+                        if(f.good())
+                        {
+                            line[constMaxLineLen-1]='\0';
+
+                            if('#'!=line[0] && sscanf(line, "%s %s", str1, str2)==2)
+                            {
+                                if(!inFiles)
+                                {
+                                    if(strcmp(str1, "Section")==0 && strcmp(str2, "\"Files\"")==0)
+                                        inFiles=true;
+                                }
+                                else
+                                    if(strcmp(str1, "FontPath")==0 && str2[0]=='\"')
+                                    {
+                                        unsigned int s2len=strlen(str2);
+
+                                        if(s2len>8 && str2[s2len-1]=='\"' && &str2[1]==strstr(&str2[1], "unix/") && strchr(&str2[1], ':')!=NULL)
+                                            useXfs=true;
+                                    }
+                            }
+                            else
+                                if(inFiles && sscanf(line, "%s", str1)==1 && strcmp(str1, "EndSection")==0)
+                                    break;
+                        }
+                    }
+                    while(!f.eof() && !useXfs);
+
+                    f.close();
+
+                    if(useXfs)
+                        for(int i=0; !constXfsConfigFiles[i].isNull(); ++i)
+                            if(CMisc::fExists(constXfsConfigFiles[i]))
+                            {
+                                itsSysXfsConfigFile=constXfsConfigFiles[i];
+                                itsSysXfs=true;
+                                break;
+                            }
+                }
+            }
+        }
+    }
+}
+
+const QStringList & CKfiConfig::getRealTopDirs(const QString &f)
+{
+    return CMisc::root() || CMisc::getSect(f)==i18n(KIO_FONTS_SYS)
+               ? itsSysFontsDirs
+               : itsUserFontsDirs;
+}
+
+void CKfiConfig::storeSysXConfigFileTs()
+{
+    int ts=CMisc::getTimeStamp(itsSysXConfigFile);
+
+    if(0!=ts)
+    {
+        KConfigGroupSaver saver(this, KCONFIG_GROUP);
+
+        writeEntry("SysXConfigFileTs", ts);
+    }
+}
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/KfiConfig.h kdebase-3.1.93-new/kcontrol/kfontinst/lib/KfiConfig.h
--- kdebase-3.1.93/kcontrol/kfontinst/lib/KfiConfig.h	Wed Dec 31 19:00:00 1969
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/KfiConfig.h	Sat Nov  1 13:10:02 2003
@@ -0,0 +1,86 @@
+#ifndef __KFI_CONFIG_H__
+#define __KFI_CONFIG_H__
+
+////////////////////////////////////////////////////////////////////////////////
+//
+// Class Name    : CKfiConfig
+// Author        : Craig Drummond
+// Project       : K Font Installer
+// Creation Date : 05/03/2003
+// Version       : $Revision$ $Date$
+//
+////////////////////////////////////////////////////////////////////////////////
+//
+// This program is free software; you can redistribute it and/or
+// modify it under the terms of the GNU General Public License
+// as published by the Free Software Foundation; either version 2
+// of the License, or (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program; if not, write to the Free Software
+// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+//
+////////////////////////////////////////////////////////////////////////////////
+// (C) Craig Drummond, 2003
+////////////////////////////////////////////////////////////////////////////////
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <qstring.h>
+#include <qnamespace.h>
+#include <qstringlist.h>
+#include <kconfig.h>
+
+class CKfiConfig : public KConfig
+{
+    public:
+
+    CKfiConfig(bool all=false, bool checkDirs=true, bool checkX=false);
+    virtual ~CKfiConfig()                    { }
+
+    const QStringList & getRealTopDirs(const QString &f=QString::null);
+
+    const QStringList & getUserFontsDirs() { return itsUserFontsDirs; }
+    const QStringList & getSysFontsDirs()  { return itsSysFontsDirs; }
+    const QString &   getSysXConfigFile()  { return itsSysXfs ? itsSysXfsConfigFile : itsSysXConfigFile; }
+    const QString &   getUserXConfigFile() { return itsUserXConfigFile; }
+#ifndef HAVE_FONT_ENC
+    const QString &   getEncodingsDir()    { return itsEncodingsDir; }
+#endif
+    bool              getSysXfs()          { return itsSysXfs; }
+    const QString &   getSysTTSubDir( )    { return itsSysTTSubDir; }
+    const QString &   getSysT1SubDir( )    { return itsSysT1SubDir; }
+    const QString &   getFontmapDir()      { return itsFontmapDir; }       // Where top-level Fontmap file is placed
+    const QString &   getGhostscriptFile() { return itsGhostscriptFile; }  // GS Fontmap file - this will .runlibfile our Fontmap
+
+    void              storeSysXConfigFileTs();
+
+    private:
+
+    void checkAndModifyXConfigFile();
+
+    private:
+
+    QStringList itsUserFontsDirs,
+                itsSysFontsDirs;
+    QString     itsSysXConfigFile,
+                itsSysXfsConfigFile,
+                itsUserXConfigFile,
+#ifndef HAVE_FONT_ENC
+                itsEncodingsDir,
+#endif
+                itsSysTTSubDir,
+                itsSysT1SubDir,
+                itsFontmapDir,
+                itsGhostscriptFile;
+    bool        itsSysXfs;
+};
+
+#endif
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/Makefile.am kdebase-3.1.93-new/kcontrol/kfontinst/lib/Makefile.am
--- kdebase-3.1.93/kcontrol/kfontinst/lib/Makefile.am	Tue Sep  2 09:54:02 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/Makefile.am	Sat Nov  1 17:34:39 2003
@@ -2,25 +2,25 @@
 
 libkfontinst_la_SOURCES = \
 CompressedFile.cpp \
-Config.cpp \
 Encodings.cpp \
 FontEngine.cpp \
 Fontmap.cpp \
+GetPid.c \
 Global.cpp \
+KfiConfig.cpp \
 Misc.cpp \
 XConfig.cpp
 
 noinst_HEADERS = \
 CompressedFile.h \
-Config.h \
 Encodings.h \
 FontEngine.h \
 Fontmap.h \
 Global.h \
+KfiConfig.h \
 Misc.h \
-XConfig.h \
-GetPid.c
+XConfig.h
 
-libkfontinst_la_LIBADD = $(LIB_FONT_ENC) $(LIB_KIO) $(LIBFONTCONFIG_LIBS) $(LIBFREETYPE_LIBS)
+libkfontinst_la_LIBADD = $(LIB_FONT_ENC) $(LIB_KIO) ../../fonts/libkxftconfig.la $(LIBFONTCONFIG_LIBS) $(LIBFREETYPE_LIBS)
 libkfontinst_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) $(LIBFONTCONFIG_RPATH) $(LIBFREETYPE_RPATH) -no-undefined
 INCLUDES= $(LIBFREETYPE_CFLAGS) $(LIBFONTCONFIG_CFLAGS) -DOS_$(UNAME) -I$(srcdir)/../../fonts $(all_includes)
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/lib/XConfig.cpp kdebase-3.1.93-new/kcontrol/kfontinst/lib/XConfig.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/lib/XConfig.cpp	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/lib/XConfig.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 05/05/2001
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -29,13 +29,13 @@
 #include "XConfig.h"
 #include "Global.h"
 #include "FontEngine.h"
+#include "kxftconfig.h"
 #include <fstream>
 #include <string.h>
 #include <qdir.h>
 #include <klocale.h>
 
-#include "kxftconfig.cpp" // CPD: HACK!!! How to sym-link in CVS???
-#include "GetPid.c"  // #included as want function to be static...
+extern "C" unsigned int kfi_getPid(const char *proc, unsigned int ppid);
 
 static const QCString constFontpaths ("# KFontinst fontpaths file -- DO NOT EDIT");
 #define UNSCALED ":unscaled"
@@ -251,7 +251,7 @@
 
     if(CMisc::root() && XFS==itsType)
     {
-        unsigned int xfsPid=getPid("xfs", 1);
+        unsigned int xfsPid=kfi_getPid("xfs", 1);
 
         if(xfsPid)
         {
@@ -328,7 +328,7 @@
                     processPath(line, path, unscaled);
 
                     if(NULL==findPath(path))
-                        itsPaths.append(new TPath(expandHome(path), false, false, true));
+                        itsPaths.append(new TPath(KXftConfig::expandHome(path), false, false, true));
                 }
             }
         }
@@ -355,7 +355,7 @@
         cfg << constFontpaths << endl;
         for(path=itsPaths.first(); path; path=itsPaths.next())
             if(!path->disabled && CMisc::dExists(path->dir))
-                cfg << QFile::encodeName(contractHome(CMisc::xDirSyntax(path->dir))) << endl;
+                cfg << QFile::encodeName(KXftConfig::contractHome(CMisc::xDirSyntax(path->dir))) << endl;
 
         cfg.close();
     }
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/thumbnail/FontThumbnail.cpp kdebase-3.1.93-new/kcontrol/kfontinst/thumbnail/FontThumbnail.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/thumbnail/FontThumbnail.cpp	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/thumbnail/FontThumbnail.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 02/08/2003
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -31,7 +31,7 @@
 #include "Misc.h"
 #include "CompressedFile.h"
 #include "Global.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include <qimage.h>
 #include <qbitmap.h>
 #include <qpainter.h>
@@ -62,7 +62,7 @@
     if(CGlobal::fe().openKioFont(path, CFontEngine::NAME, true, 0))
     {
         QPixmap pix;
-        CGlobal::fe().createPreview(path, width, height, pix, 0);
+        CGlobal::fe().createPreview(width, height, pix, 0);
 
         img=pix.convertToImage();
 
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/thumbnail/fontthumbnail.desktop kdebase-3.1.93-new/kcontrol/kfontinst/thumbnail/fontthumbnail.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/thumbnail/fontthumbnail.desktop	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/thumbnail/fontthumbnail.desktop	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 Name=Font Files
 Name[af]=Skrif tipe Lêers
 Name[be]=Файлы шрыфтоў
-Name[bg]=Файлове с Шрифтове
+Name[bg]=Файлове с шрифтове
 Name[bs]=Datoteke sa fontovima
 Name[ca]=Fitxers de font
 Name[cs]=Soubory s písmy
@@ -36,6 +36,7 @@
 Name[pt]=Ficheiros de Tipos de Letra
 Name[pt_BR]=Arquivos de fonte
 Name[ru]=Файлы шрифтов
+Name[se]=Fontafiillat
 Name[sk]=Súbory písiem
 Name[sl]=Datoteke s pisavami
 Name[sr]=Фајлови фонтова
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/viewpart/FontPreview.cpp kdebase-3.1.93-new/kcontrol/kfontinst/viewpart/FontPreview.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/viewpart/FontPreview.cpp	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/viewpart/FontPreview.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 04/11/2001
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -75,7 +75,7 @@
     if(CGlobal::fe().openKioFont(itsCurrentUrl.path(), CFontEngine::NAME, true, itsCurrentFace-1))
     {
         setEraseColor(Qt::white);
-        CGlobal::fe().createPreview(itsCurrentUrl.path(), itsLastWidth, itsLastHeight, itsPixmap, itsCurrentFace-1);
+        CGlobal::fe().createPreview(itsLastWidth, itsLastHeight, itsPixmap, itsCurrentFace-1);
         update();
         emit status(true);
         CGlobal::fe().closeFont();
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/viewpart/FontViewPart.cpp kdebase-3.1.93-new/kcontrol/kfontinst/viewpart/FontViewPart.cpp
--- kdebase-3.1.93/kcontrol/kfontinst/viewpart/FontViewPart.cpp	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/viewpart/FontViewPart.cpp	Sat Nov  1 17:34:39 2003
@@ -4,7 +4,7 @@
 // Author        : Craig Drummond
 // Project       : K Font Installer
 // Creation Date : 03/08/2002
-// Version       : $Revision$ $Date$
+// Version       : $Revision$ $Date$
 //
 ////////////////////////////////////////////////////////////////////////////////
 //
@@ -30,7 +30,7 @@
 #include "FontPreview.h"
 #include "FontEngine.h"
 #include "Global.h"
-#include "Config.h"
+#include "KfiConfig.h"
 #include "Misc.h"
 #include <klocale.h>
 #include <qlayout.h>
@@ -125,7 +125,7 @@
 
     if(KMessageBox::Cancel!=resp)
     {
-        QString sub("/");
+        QString sub("");
 
         if(CMisc::root() || KMessageBox::No==resp)
             switch(CFontEngine::getType(QFile::encodeName(m_url.path())))
@@ -133,18 +133,24 @@
                 case CFontEngine::TRUE_TYPE:
                 case CFontEngine::OPEN_TYPE:
                 case CFontEngine::TT_COLLECTION:
-                    sub=CGlobal::cfg().getSysTTSubDir()+QString("/");
+                    if(!CGlobal::cfg().getSysTTSubDir().isNull())
+                        sub=CGlobal::cfg().getSysTTSubDir();
                     break;
                 case CFontEngine::TYPE_1:
-                    sub=CGlobal::cfg().getSysT1SubDir()+QString("/");
+                    if(!CGlobal::cfg().getSysT1SubDir().isNull())
+                        sub=CGlobal::cfg().getSysT1SubDir();
                     break;
                 default:
                     break;
             }
 
-        QString       destDir(CMisc::root() ? sub : QString((KMessageBox::Yes==resp ? i18n(KIO_FONTS_USER) : i18n(KIO_FONTS_SYS)))+QChar('/')+sub);
-        KURL          destUrl(QString("fonts:/")+destDir+CMisc::getFile(m_url.path()));
         KIO::UDSEntry uds;
+        KURL          destUrl(QString("fonts:/")+
+                                      (CMisc::root()
+                                           ? sub
+                                           : QString((KMessageBox::Yes==resp ? i18n(KIO_FONTS_USER) : i18n(KIO_FONTS_SYS))+QChar('/')+sub)
+                                      )+
+                                      CMisc::getFile(m_url.path()));
 
         if(KIO::NetAccess::stat(destUrl, uds, itsFrame->parentWidget()))
             KMessageBox::error(itsFrame, i18n("%1:%2 already installed!").arg(m_url.protocol()).arg(m_url.path()), i18n("Error"));
diff -uNr kdebase-3.1.93/kcontrol/kfontinst/viewpart/kfontviewpart.desktop kdebase-3.1.93-new/kcontrol/kfontinst/viewpart/kfontviewpart.desktop
--- kdebase-3.1.93/kcontrol/kfontinst/viewpart/kfontviewpart.desktop	Sun Oct 26 05:46:21 2003
+++ kdebase-3.1.93-new/kcontrol/kfontinst/viewpart/kfontviewpart.desktop	Sat Nov  1 17:34:39 2003
@@ -2,7 +2,7 @@
 Encoding=UTF-8
 Name=Font Viewer
 Name[af]=Skrif tipe Aansig
-Name[bg]=Преглед на Шрифт
+Name[bg]=Преглед на шрифт
 Name[bs]=Preglednik fontova
 Name[ca]=Visor de fonts
 Name[cs]=Prohlížeč písem
@@ -34,6 +34,7 @@
 Name[pt]=Visualizador do Tipo de Letra
 Name[pt_BR]=Visualizador de Fontes
 Name[ru]=Просмотр шрифтов
+Name[se]=Fontačájeheaddji
 Name[sk]=Prehliadač písiem
 Name[sl]=Prikazovalnik pisav
 Name[sr]=Приказивач фонтова
--- kdebase-3.1.93/startkde	Sun Oct 26 05:45:35 2003
+++ kdebase-3.1.93-new/startkde	Fri Nov  7 17:45:23 2003
@@ -50,6 +50,9 @@
 # Where X is the original font database that was set up before this script
 # runs.
 
+/usr/X11R6/bin/xmodmap -e "keycode 78 = Left"
+/usr/X11R6/bin/xmodmap -e "keycode 74 = Right"
+
 usr_odir=$HOME/.fonts/kde-override
 usr_fdir=$HOME/.fonts
 
