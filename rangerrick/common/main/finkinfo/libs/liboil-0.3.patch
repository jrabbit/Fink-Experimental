--- liboil-0.3.8/liboil/i386/copy8x8_i386.c	2005-08-02 16:59:46.000000000 -0400
+++ liboil-0.3.8-new/liboil/i386/copy8x8_i386.c	2006-05-06 10:49:28.000000000 -0400
@@ -37,7 +37,11 @@
 copy8x8_u8_mmx (uint8_t *dest, int dstr, uint8_t *src, int sstr)
 {
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                      \n\t"
+#else
     "  .balign 16                      \n\t"
+#endif
 
     "  lea         (%2, %2, 2), %%edi  \n\t"
 
--- liboil-0.3.8/liboil/i386/diff8x8_i386.c	2005-10-28 13:05:33.000000000 -0400
+++ liboil-0.3.8-new/liboil/i386/diff8x8_i386.c	2006-05-06 12:49:55.000000000 -0400
@@ -40,7 +40,11 @@
 diff8x8_s16_u8_mmx (int16_t *dest, uint8_t *src1, int ss1, uint8_t *src2, int ss2)
 {
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm7, %%mm7     \n\t" 
 
@@ -82,11 +86,14 @@
   const int16_t tmp[4] = { 0x0080, 0x0080, 0x0080, 0x0080 };
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm7, %%mm7     \n\t" 
     "  movq        (%3), %%mm1  \n\t"
-
     ".rept 8                        \n\t"
     "  movq        (%0), %%mm0      \n\t" /* mm0 = FiltPtr */
     "  movq        %%mm0, %%mm2     \n\t" /* dup to prepare for up conversion */
@@ -117,7 +124,11 @@
 diff8x8_average_s16_u8_mmx (int16_t *dest, uint8_t *src1, int ss1, uint8_t *src2, int ss2, uint8_t *src3)
 {
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm7, %%mm7     \n\t" 
 
--- liboil-0.3.8/liboil/i386/error8x8_i386.c	2005-12-21 16:46:59.000000000 -0500
+++ liboil-0.3.8-new/liboil/i386/error8x8_i386.c	2006-05-06 10:51:27.000000000 -0400
@@ -42,7 +42,11 @@
   uint32_t  xxsum;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm5, %%mm5     \n\t"
     "  pxor        %%mm6, %%mm6     \n\t"
@@ -104,7 +108,11 @@
   uint32_t  xxsum;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm5, %%mm5     \n\t"
     "  pxor        %%mm6, %%mm6     \n\t"
@@ -176,7 +184,11 @@
   uint32_t xxsum;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pcmpeqd     %%mm4, %%mm4     \n\t"	/* fefefefefefefefe in mm4 */
     "  paddb       %%mm4, %%mm4     \n\t"
@@ -263,7 +275,11 @@
   uint32_t xxsum;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm4, %%mm4     \n\t"
     "  pxor        %%mm5, %%mm5     \n\t"
--- liboil-0.3.8/liboil/i386/recon8x8_i386.c	2005-12-22 03:04:08.000000000 -0500
+++ liboil-0.3.8-new/liboil/i386/recon8x8_i386.c	2006-05-06 10:52:18.000000000 -0400
@@ -44,7 +44,11 @@
 recon8x8_intra_i386_mmx (uint8_t *dest, int ds, int16_t *change)
 {
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                      \n\t"
+#else
     "  .balign 16                      \n\t"
+#endif
 
     "  movq        (%3), %%mm0       \n\t" /* Set mm0 to 0x8080808080808080 */
 
@@ -79,7 +83,11 @@
 {
   /* FIXME doesn't handle ss */
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                      \n\t"
+#else
     "  .balign 16                      \n\t"
+#endif
 
     "  pxor        %%mm0, %%mm0        \n\t"
     "  lea         128(%1), %%edi      \n\t"
@@ -119,7 +127,11 @@
 {
   /* FIXME doesn't handle ss1, ss2 */
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                      \n\t"
+#else
     "  .balign 16                      \n\t"
+#endif
 
     "  pxor        %%mm0, %%mm0        \n\t"
     "  lea         128(%1), %%edi      \n\t"
--- liboil-0.3.8/liboil/i386/rowcolsad8x8_i386.c	2005-08-02 21:25:11.000000000 -0400
+++ liboil-0.3.8-new/liboil/i386/rowcolsad8x8_i386.c	2006-05-06 10:53:14.000000000 -0400
@@ -40,7 +40,11 @@
   uint32_t MaxSad;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm6, %%mm6     \n\t"	/* zero out mm6 for unpack */
     "  pxor        %%mm7, %%mm7     \n\t" 	/* zero out mm7 for unpack */
@@ -92,7 +96,11 @@
   uint32_t MaxSad;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  movd        (%1), %%mm0      \n\t"
     "  movd        (%2), %%mm1      \n\t"
@@ -122,7 +130,11 @@
   uint32_t MaxSad;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm3, %%mm3     \n\t"	/* zero out mm3 for unpack */
     "  pxor        %%mm4, %%mm4     \n\t"	/* mm4 low sum */
@@ -205,7 +217,11 @@
   uint32_t MaxSad;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pxor        %%mm3, %%mm3     \n\t"	/* zero out mm3 for unpack */
     "  pxor        %%mm4, %%mm4     \n\t"	/* mm4 low sum */
--- liboil-0.3.8/liboil/i386/sad8x8_i386.c	2005-08-02 21:28:44.000000000 -0400
+++ liboil-0.3.8-new/liboil/i386/sad8x8_i386.c	2006-05-06 10:53:33.000000000 -0400
@@ -40,7 +40,11 @@
   uint32_t diff;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
     "  pxor        %%mm6, %%mm6     \n\t"	/* zero out mm6 for unpack */
     "  pxor        %%mm7, %%mm7     \n\t" 	/* mm7 contains the result */
     ".rept 8                         \n\t"
@@ -89,7 +93,11 @@
   uint32_t diff;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
     "  pxor %%mm7, %%mm7            \n\t" 	/* mm7 contains the result */
 
     ".rept 7                        \n\t"
--- liboil-0.3.8/liboil/i386/sad8x8avg_i386.c	2005-12-21 16:35:08.000000000 -0500
+++ liboil-0.3.8-new/liboil/i386/sad8x8avg_i386.c	2006-05-06 10:53:45.000000000 -0400
@@ -39,7 +39,11 @@
   uint32_t diff;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
 
     "  pcmpeqd     %%mm5, %%mm5     \n\t"	/* fefefefefefefefe in mm5 */
     "  paddb       %%mm5, %%mm5     \n\t"
@@ -106,7 +110,11 @@
   uint32_t  diff;
 
   __asm__ __volatile__ (
+#ifdef __APPLE__
+    "  .align 4                   \n\t"
+#else
     "  .balign 16                   \n\t"
+#endif
     "  pxor %%mm7, %%mm7            \n\t" 	/* mm7 contains the result */
     "  mov $0x01010101, %%eax       \n\t"
     "  movd %%eax, %%mm6            \n\t"
--- liboil-0.3.8/unroll-rept.pl	1969-12-31 19:00:00.000000000 -0500
+++ liboil-0.3.8-new/unroll-rept.pl	2006-05-06 12:32:00.000000000 -0400
@@ -0,0 +1,45 @@
+#!/usr/bin/perl
+
+for my $file (@ARGV) {
+	my $in_rept = 0;
+	my $rept_block = '';
+	my $rept_count = 0;
+	my $line_count = 0;
+	my $in_rept_count = 0;
+	if (open (FILEIN, $file)) {
+		if (open (FILEOUT, ">${file}.unrolled")) {
+			while (my $line = <FILEIN>) {
+				if ($in_rept) {
+					if ($line =~ /^\s*"\s*\.endr/i) {
+						$in_rept = 0;
+					} else {
+						$rept_block .= $line;
+					}
+				} elsif ($line =~ /^\s*"\s*\.rept\s+(\d+)/) {
+					$rept_count = $1;
+					$in_rept = 1;
+				} elsif ($rept_count) {
+					while ($rept_count > 0) {
+						print FILEOUT $rept_block;
+						$rept_count--;
+					}
+					$rept_count = 0;
+					$rept_block = '';
+					print FILEOUT $line;
+				} else {
+					print FILEOUT $line;
+				}
+			}
+			close (FILEOUT);
+		} else {
+			warn "unable to write to ${file}.unrolled\n";
+		}
+		close (FILEIN);
+	} else {
+		warn "unable to read from $file\n";
+	}
+
+	if (-s "${file}.unrolled") {
+		system("/bin/mv", "${file}.unrolled", $file);
+	}
+}
--- liboil-0.3.8/configure	2006-03-21 15:37:46.000000000 -0500
+++ liboil-0.3.8-new/configure	2006-05-06 13:48:02.000000000 -0400
@@ -19294,14 +19294,6 @@
 
 
   case "x${host_cpu}" in
-    xi?86 | k?)
-      HAVE_I386=yes
-
-cat >>confdefs.h <<\_ACEOF
-#define HAVE_I386 1
-_ACEOF
-
-      ;;
     xx86_64|xamd64)
       HAVE_AMD64=yes
 
