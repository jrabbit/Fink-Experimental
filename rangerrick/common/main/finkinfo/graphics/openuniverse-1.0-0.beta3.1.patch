diff -uNbr openuniverse-1.0beta3/src/Makefile.in openuniverse-1.0beta3-patched/src/Makefile.in
--- openuniverse-1.0beta3/src/Makefile.in	Mon Jun  5 07:52:30 2000
+++ openuniverse-1.0beta3-patched/src/Makefile.in	Wed Apr  9 20:54:55 2003
@@ -304,17 +304,6 @@
 mostlyclean distclean maintainer-clean
 
 
-lex.cfg.cpp: cfglex.l cfgparse.tab.cpp
-	${LEX} -i -Pcfg cfglex.l
-	mv lex.cfg.c lex.cfg.cpp
-
-cfgparse.tab.cpp: cfgparse.y
-	${YACC} -d -v -p cfg cfgparse.y
-	mv y.tab.c cfgparse.tab.cpp
-	mv y.tab.h cfgparse.tab.h
-
-cfgparse.tab.h: cfgparse.tab.cpp
-
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
diff -uNbr openuniverse-1.0beta3/src/cfgparse.tab.cpp openuniverse-1.0beta3-patched/src/cfgparse.tab.cpp
--- openuniverse-1.0beta3/src/cfgparse.tab.cpp	Sun Jun  4 15:36:25 2000
+++ openuniverse-1.0beta3-patched/src/cfgparse.tab.cpp	Wed Apr  9 20:51:33 2003
@@ -59,6 +59,7 @@
 
 #line 1 "cfgparse.y"
 
+#include <string.h>
 #include <math.h>		/* For math functions, cos(), sin(), etc. */
 #include <time.h>
 #include "ou.h"
diff -uNbr openuniverse-1.0beta3/src/comet.cpp openuniverse-1.0beta3-patched/src/comet.cpp
--- openuniverse-1.0beta3/src/comet.cpp	Sat May 13 18:48:51 2000
+++ openuniverse-1.0beta3-patched/src/comet.cpp	Wed Apr  9 20:24:10 2003
@@ -18,6 +18,7 @@
 */
 
 #include "ou.h"
+#include <GL/GL.h>
 
 #ifdef WIN32
 typedef void (APIENTRY * PFNGLPOINTPARAMETERFEXTPROC)
@@ -52,9 +53,6 @@
 #ifdef WIN32
 	wglPointParameterfvEXT(GL_DISTANCE_ATTENUATION_EXT, quad);
 #else
-#ifdef GL_EXT_point_parameters
-	glPointParameterfvEXT(GL_DISTANCE_ATTENUATION_EXT, quad);
-#endif
 #endif
 	glDisable(GL_TEXTURE_2D);
 	glDisable(GL_LIGHTING);
diff -uNbr openuniverse-1.0beta3/src/lex.cfg.cpp openuniverse-1.0beta3-patched/src/lex.cfg.cpp
--- openuniverse-1.0beta3/src/lex.cfg.cpp	Sun Jun  4 15:36:27 2000
+++ openuniverse-1.0beta3-patched/src/lex.cfg.cpp	Wed Apr  9 20:51:33 2003
@@ -26,6 +26,7 @@
 #define YY_FLEX_MINOR_VERSION 5
 
 #include <stdio.h>
+#include <string.h>
 
 
 /* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
diff -uNbr openuniverse-1.0beta3/src/ou.cpp openuniverse-1.0beta3-patched/src/ou.cpp
--- openuniverse-1.0beta3/src/ou.cpp	Sun Jun  4 17:29:29 2000
+++ openuniverse-1.0beta3-patched/src/ou.cpp	Wed Apr  9 20:40:59 2003
@@ -22,12 +22,12 @@
 #include <string.h>
 #include <math.h>
 #include <time.h>
-#include <sys/timeb.h>
+#include <sys/types.h>
+#include <sys/time.h>
 #include <setjmp.h>
 #include "ou.h"
 #include "gui.h"
 
-
 double campos[3] = { 0.0, 0.0, 1.0 }, cameye[3] = {
 0.0, 0.0, -1.0}, camup[3] = {
 0.0, 1.0, 0.0};
@@ -159,7 +159,11 @@
 	struct _timeb currtime;
 	char sbuf[80];
 #else
+# ifdef __APPLE__
+	struct timeval tv;
+# else
 	struct timeb currtime;
+# endif
 #endif
 
 	if (glutGetWindow() != main_window)
@@ -234,14 +238,22 @@
 		UpdatePositions(days, 0);	/* 0 tells UpdatePositions to process all bodies */
 	}
 
-
 	if (realtime) {
 #ifdef WIN32
 		_ftime(&currtime);		/* we need milliseconds to avoid jerkiness */
+		days = (time(NULL) + currtime.millitm / 1000.0) / 3600.0 / 24.0 - 10092.0;	/* days = NOW */
 #else
+# ifdef __APPLE__
+		/* great mother of god I really need to learn to code properly */
+		gettimeofday(&tv, 0);
+		days = (time(NULL) + tv.tv_usec / 1000.0 / 100.0 ) / 3600.0 / 24.0 - 10092.0;	/* days = NOW */
+# else
 		ftime(&currtime);		/* we need milliseconds to avoid jerkiness */
-#endif
 		days = (time(NULL) + currtime.millitm / 1000.0) / 3600.0 / 24.0 - 10092.0;	/* days = NOW */
+#endif
+		
+		
+#endif
 	}
 
 	if (!paused)
diff -uNbr openuniverse-1.0beta3/src/ou.h openuniverse-1.0beta3-patched/src/ou.h
--- openuniverse-1.0beta3/src/ou.h	Sun Jun  4 15:35:09 2000
+++ openuniverse-1.0beta3-patched/src/ou.h	Wed Apr  9 20:22:01 2003
@@ -20,6 +20,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <math.h>
+#include <string.h>
 
 #ifdef WIN32
 #include <windows.h>
