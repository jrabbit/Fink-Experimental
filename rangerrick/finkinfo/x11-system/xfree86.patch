diff -u -r1.43 darwin.cf
--- config/cf/darwin.cf	11 Nov 2003 01:29:46 -0000	1.43
+++ config/cf/darwin.cf	14 Nov 2003 20:48:37 -0000
@@ -155,8 +155,8 @@
 #endif
 
 /* we have a gcc compatible compiler, but its not called gcc */
-#define CcCmd                   /usr/bin/cc
-#define CplusplusCmd            /usr/bin/c++
+#define CcCmd                   gcc-3.3
+#define CplusplusCmd            g++-3.3
 
 /* default flags to pass to cc */
 #ifndef DefaultCCOptions
diff -u -r3.295 Imakefile
--- programs/Xserver/Imakefile	7 Nov 2003 13:45:26 -0000	3.295
+++ programs/Xserver/Imakefile	14 Nov 2003 20:48:49 -0000
@@ -1287,8 +1287,7 @@
 XPRLIBS = $(QUARTZDIR)/xpr/LibraryTargetName(xpr) $(ROOTLESSLIB)
 
 BundleProgramTarget(xpr,XDarwinApp,$(XPRDIRS),$(QUARTZDIR)/xpr/xprScreen.o, \
-	$(XPRLIBS),-framework ApplicationServices $(XPLUGINLIB), \
-	$(XDARWINAPPDIR)/Resources)
+	$(XPRLIBS),-framework ApplicationServices $(XPLUGINLIB),$(XDARWINAPPDIR)/Resources)
 #endif
 
 CRDIRS = $(QUARTZDIR)/cr $(ROOTLESSDIR) $(ROOTLESSDIR)/safeAlpha
@@ -1296,7 +1295,7 @@
 
 BundleProgramTarget(cr,XDarwinApp,$(CRDIRS),$(QUARTZDIR)/cr/crScreen.o, \
 	$(CRLIBS),-framework ApplicationServices -framework Cocoa \
-	-framework Carbon -ObjC, $(XDARWINAPPDIR)/Resources)
+	-framework Carbon -ObjC,$(XDARWINAPPDIR)/Resources)
 
 FSDIRS = $(QUARTZDIR)/fullscreen $(SHADOWDIR)
 FSLIBS = $(QUARTZDIR)/fullscreen/LibraryTargetName(fullscreen) $(SHADOW)
@@ -1310,13 +1309,11 @@
  * (installed in their own bundles inside XDarwin's)
  */
 BundleProgramTarget(glxAGL,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a \
-	GL/apple/libAGLcore.a,-framework AGL -framework OpenGL, \
-	$(XDARWINAPPDIR)/Resources)
+	GL/apple/libAGLcore.a,-framework AGL -framework OpenGL,$(XDARWINAPPDIR)/Resources)
 
 #if BuildAppleDRI
 BundleProgramTarget(glxCGL,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a \
-	GL/apple/libCGLcore.a,-framework OpenGL $(XPLUGINLIB), \
-	$(XDARWINAPPDIR)/Resources)
+	GL/apple/libCGLcore.a,-framework OpenGL $(XPLUGINLIB),$(XDARWINAPPDIR)/Resources)
 #endif
 
 BundleProgramTarget(glxMesa,XDarwinApp,GL,GL/glx/glxext.o,GL/glx/libglx.a \
diff -X CVS -uNr config/cf/Imake.rules config/cf/Imake.rules
--- xc/config/cf/Imake.rules	Fri Oct 24 21:21:24 2003
+++ config/cf/Imake.rules	Sun Nov 16 07:54:43 2003
@@ -5,7 +5,7 @@
 XCOMM
 XCOMM
 XCOMM
-XCOMM rules:  $XFree86: xc/config/cf/Imake.rules,v 3.127 2003/10/25 01:21:24 dawes Exp $
+XCOMM rules:  $XFree86: xc/config/cf/Imake.rules,v 3.128 2003/11/15 03:25:17 dawes Exp $
 
 /*
  *		   MACHINE-INDEPENDENT RULES; DO NOT MODIFY
@@ -3246,12 +3246,14 @@
  * Delete line numbers from the cpp output (-P is not portable, I guess).
  * Allow XCOMM to be preceded by whitespace and provide a means of generating
  * output lines with trailing backslashes.
+ * Allow XHASH to always be substituted, even in cases where XCOMM isn't.
  */
 #ifndef CppSedMagic
 #define CppSedMagic sed -e '/^#  *[0-9][0-9]*  *.*$$/d' \
 			-e '/^#line  *[0-9][0-9]*  *.*$$/d' \
 			-e '/^[ 	]*XCOMM$$/s/XCOMM/#/' \
 			-e '/^[ 	]*XCOMM[^a-zA-Z0-9_]/s/XCOMM/#/' \
+			-e '/^[ 	]*XHASH/s/XHASH/#/' \
 			-e '/\@\@$$/s/\@\@$$/\\/'
 #endif /* CppSedMagic */
 
diff -X CVS -uNr config/cf/darwin.cf config/cf/darwin.cf
--- xc/config/cf/darwin.cf	Fri Nov 14 15:53:42 2003
+++ config/cf/darwin.cf	Sun Nov 16 07:54:43 2003
@@ -1,4 +1,4 @@
-XCOMM platform:  $XFree86: xc/config/cf/darwin.cf,v 1.43 2003/11/11 01:29:46 torrey Exp $
+XCOMM platform:  $XFree86: xc/config/cf/darwin.cf,v 1.45 2003/11/15 00:23:00 torrey Exp $
 
 /* Darwin / Mac OS X configuration by John Carmack <johnc@idsoftware.com> */
 
@@ -91,12 +91,12 @@
    PROJ_BUILD = pbxbuild
 # endif
 
-/*
- * If we have Apple's Xplugin library, use it.
- */
 # ifndef HasXplugin
-#  define HasXplugin            NO
-#  define XpluginLibrary        /**/
+#  if OSMajorVersion >= 7
+#   define HasXplugin           YES
+#  else
+#   define HasXplugin           NO
+#  endif
 # endif
 
 # if HasXplugin
@@ -109,6 +109,8 @@
    XPLIBDIR = XpLibDir
    XPINCDIR = XpIncDir
 #  define XpluginLibrary        Concat(-L,$(XPLIBDIR)) -lXplugin
+# else
+#  define XpluginLibrary        /**/
 # endif
 
 # ifndef BuildAppleDRI
@@ -173,6 +175,12 @@
 /* flags to pass to cc when building libraries */
 #ifndef LibraryCCOptions
 # define LibraryCCOptions       DefaultCCOptions -fno-common
+#endif
+
+/* The cr implementation does not build with NEED_SCREEN_REGIONS,
+   so play it safe. */
+#ifndef ServerCCOptions
+# define ServerCCOptions        DefaultCCOptions -UNEED_SCREEN_REGIONS
 #endif
 
 #ifdef PpcDarwinArchitecture
diff -X CVS -uNr extras/Mesa/include/GL/glxext.h extras/Mesa/include/GL/glxext.h
--- xc/extras/Mesa/include/GL/glxext.h	Thu Nov 13 21:54:02 2003
+++ extras/Mesa/include/GL/glxext.h	Sun Nov 16 07:54:52 2003
@@ -33,7 +33,7 @@
 ** not been independently verified as being compliant with the OpenGL(R)
 ** version 1.2.1 Specification.
 */
-/* $XFree86: xc/extras/Mesa/include/GL/glxext.h,v 1.2 2003/11/13 04:01:03 tsi Exp $ */
+/* $XFree86: xc/extras/Mesa/include/GL/glxext.h,v 1.3 2003/11/14 22:44:26 tsi Exp $ */
 
 #if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__)
 #define WIN32_LEAN_AND_MEAN 1
@@ -598,14 +598,6 @@
 #define GLX_OML_swap_method 1
 #endif
 
-#if (defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L)) || \
-    (defined(linux) && !defined(__GLIBC__)) || \
-    defined(_STDINT_H) || defined(_SYS_INTTYPES_H_) || defined(_INTTYPES_H_)
-#if !defined(linux) || defined(__GLIBC__)
-/* Include ISO C99 integer types for OML_sync_control; need a better test */
-#include <inttypes.h>
-#endif
-
 #ifndef GLX_OML_sync_control
 #define GLX_OML_sync_control 1
 #ifdef GLX_GLXEXT_PROTOTYPES
@@ -635,8 +627,6 @@
 typedef GLint ( * PFNGLXGETFRAMEUSAGEMESAPROC) (Display *dpy, GLXDrawable drawable, GLfloat *usage);
 typedef GLint ( * PFNGLXQUERYFRAMETRACKINGMESAPROC) (Display *dpy, GLXDrawable drawable, int64_t *sbc, int64_t *missedFrames, GLfloat *lastMissedUsage);
 #endif
-
-#endif /* C99 version test */
 
 #ifdef __cplusplus
 }
diff -X CVS -uNr lib/GL/dri/dri_util.h lib/GL/dri/dri_util.h
--- xc/lib/GL/dri/dri_util.h	Thu Nov 13 21:54:26 2003
+++ lib/GL/dri/dri_util.h	Sun Nov 16 07:55:13 2003
@@ -1,4 +1,4 @@
-/* $XFree86: xc/lib/GL/dri/dri_util.h,v 1.3 2003/11/13 04:01:03 tsi Exp $ */
+/* $XFree86: xc/lib/GL/dri/dri_util.h,v 1.4 2003/11/14 22:44:26 tsi Exp $ */
 /**
  * \file dri_util.h
  * DRI utility functions definitions.
@@ -53,9 +53,6 @@
 
 #define CAPI  /* XXX this should be globally defined somewhere */
 
-#if !defined(linux) || defined(__GLIBC__)
-#include <inttypes.h>
-#endif
 #include <sys/types.h>
 #include "glxclient.h"           /* for GLXDrawable */
 #include "xf86dri.h"             /* for XF86DRIClipRectPtr */
diff -X CVS -uNr lib/GL/glx/glxcmds.c lib/GL/glx/glxcmds.c
--- xc/lib/GL/glx/glxcmds.c	Thu Nov 13 21:54:26 2003
+++ lib/GL/glx/glxcmds.c	Sun Nov 16 07:55:13 2003
@@ -1,4 +1,4 @@
-/* $XFree86: xc/lib/GL/glx/glxcmds.c,v 1.25 2003/11/13 04:01:04 tsi Exp $ */
+/* $XFree86: xc/lib/GL/glx/glxcmds.c,v 1.26 2003/11/14 22:44:26 tsi Exp $ */
 /*
 ** License Applicability. Except to the extent portions of this file are
 ** made subject to an alternative license as permitted in the SGI Free
@@ -34,9 +34,6 @@
 **
 */
 
-#if !defined(__UNIXOS2__) && (!defined(linux) || defined(__GLIBC__))
-#include <inttypes.h>
-#endif
 #include "packsingle.h"
 #include "glxclient.h"
 #include <extutil.h>
diff -X CVS -uNr programs/Xserver/dix/Imakefile programs/Xserver/dix/Imakefile
--- xc/programs/Xserver/dix/Imakefile	Tue Apr 15 14:30:43 2003
+++ programs/Xserver/dix/Imakefile	Sun Nov 16 07:55:30 2003
@@ -3,7 +3,7 @@
 
 
 
-XCOMM $XFree86: xc/programs/Xserver/dix/Imakefile,v 3.17 2003/04/15 18:30:43 alanh Exp $
+XCOMM $XFree86: xc/programs/Xserver/dix/Imakefile,v 3.18 2003/11/14 23:52:50 torrey Exp $
 
 #include <Server.tmpl>
 
@@ -73,7 +73,7 @@
 
 #ifdef DarwinArchitecture
 #if DarwinQuartzSupport
-    QUARTZ_DEFINES = -DDARWIN_WITH_QUARTZ
+    QUARTZ_DEFINES = -DDARWIN_WITH_QUARTZ -DROOTLESS
 #endif
 #endif
 
diff -X CVS -uNr programs/Xserver/dix/window.c programs/Xserver/dix/window.c
--- xc/programs/Xserver/dix/window.c	Thu Nov 13 21:54:44 2003
+++ programs/Xserver/dix/window.c	Sun Nov 16 07:55:31 2003
@@ -70,7 +70,7 @@
 *                                                               *
 *****************************************************************/
 
-/* $XFree86: xc/programs/Xserver/dix/window.c,v 3.35 2003/11/10 18:21:47 tsi Exp $ */
+/* $XFree86: xc/programs/Xserver/dix/window.c,v 3.36 2003/11/14 23:52:50 torrey Exp $ */
 
 #include "misc.h"
 #include "scrnintstr.h"
@@ -1629,6 +1629,17 @@
 	    (*pWin->drawable.pScreen->RestackWindow)(pWin, pOldNextSib);
     }
 
+#ifdef ROOTLESS
+    /*
+     * In rootless mode we can't optimize away window restacks.
+     * There may be non-X windows around, so even if the window
+     * is in the correct position from X's point of view,
+     * the underlying window system may want to reorder it.
+     */
+    else if (pWin->drawable.pScreen->RestackWindow)
+        (*pWin->drawable.pScreen->RestackWindow)(pWin, pWin->nextSib);
+#endif
+
     return( pFirstChange );
 }
 
@@ -2447,7 +2458,10 @@
 	    goto ActuallyDoSomething;
     if (mask & CWStackMode)
     {
+#ifndef ROOTLESS
+        /* See above for why we always reorder in rootless mode. */
 	if (pWin->nextSib != pSib)
+#endif
 	    goto ActuallyDoSomething;
     }
     return(Success);
diff -X CVS -uNr programs/Xserver/hw/darwin/darwin.c programs/Xserver/hw/darwin/darwin.c
--- xc/programs/Xserver/hw/darwin/darwin.c	Wed Nov  5 09:21:20 2003
+++ programs/Xserver/hw/darwin/darwin.c	Sun Nov 16 07:55:31 2003
@@ -29,7 +29,7 @@
  * holders shall not be used in advertising or otherwise to promote the sale,
  * use or other dealings in this Software without prior written authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/darwin.c,v 1.54 2003/11/04 02:47:38 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/darwin.c,v 1.55 2003/11/15 00:07:09 torrey Exp $ */
 
 #include "X.h"
 #include "Xproto.h"
@@ -112,7 +112,7 @@
 #define PRE_RELEASE XF86_VERSION_SNAP
 #endif
 
-static void
+void
 DarwinPrintBanner()
 {
 #if PRE_RELEASE
diff -X CVS -uNr programs/Xserver/hw/darwin/darwin.h programs/Xserver/hw/darwin/darwin.h
--- xc/programs/Xserver/hw/darwin/darwin.h	Thu Oct 16 19:50:08 2003
+++ programs/Xserver/hw/darwin/darwin.h	Sun Nov 16 07:55:31 2003
@@ -23,7 +23,7 @@
  * holders shall not be used in advertising or otherwise to promote the sale,
  * use or other dealings in this Software without prior written authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/darwin.h,v 1.19 2003/10/16 23:50:08 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/darwin.h,v 1.20 2003/11/15 00:07:09 torrey Exp $ */
 
 #ifndef _DARWIN_H
 #define _DARWIN_H
@@ -48,6 +48,7 @@
 
 
 // From darwin.c
+void DarwinPrintBanner();
 void DarwinAdjustScreenOrigins(ScreenInfo *pScreenInfo);
 void xf86SetRootClip (ScreenPtr pScreen, BOOL enable);
 
diff -X CVS -uNr programs/Xserver/hw/darwin/quartz/XServer.h programs/Xserver/hw/darwin/quartz/XServer.h
--- xc/programs/Xserver/hw/darwin/quartz/XServer.h	Thu Nov 13 21:54:45 2003
+++ programs/Xserver/hw/darwin/quartz/XServer.h	Sun Nov 16 07:55:32 2003
@@ -29,7 +29,7 @@
  * sale, use or other dealings in this Software without prior written
  * authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.h,v 1.14 2003/11/11 01:22:32 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.h,v 1.15 2003/11/14 20:27:58 torrey Exp $ */
 
 #define BOOL xBOOL
 #include "Xproto.h"
@@ -48,6 +48,7 @@
     BOOL quitWithoutQuery;
     UInt32 mouseState;
     BOOL sendServerEvents;
+    BOOL x11Active;
 
     // Aqua interface
     IBOutlet NSWindow *modeWindow;
@@ -88,6 +89,8 @@
 - (void)sendXEvent:(xEvent *)xe;
 - (void)sendShowHide:(BOOL)show;
 - (void)clientProcessDone:(int)clientStatus;
+- (void)activateX11:(BOOL)state;
+- (void)windowBecameKey:(NSWindow *)window;
 - (void)setX11WindowList:(NSArray *)list;
 - (void)setX11WindowCheck:(NSNumber *)nn;
 
diff -X CVS -uNr programs/Xserver/hw/darwin/quartz/XServer.m programs/Xserver/hw/darwin/quartz/XServer.m
--- xc/programs/Xserver/hw/darwin/quartz/XServer.m	Thu Nov 13 21:54:46 2003
+++ programs/Xserver/hw/darwin/quartz/XServer.m	Sun Nov 16 07:55:32 2003
@@ -34,7 +34,7 @@
  * sale, use or other dealings in this Software without prior written
  * authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.m,v 1.16 2003/11/12 20:21:51 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/XServer.m,v 1.17 2003/11/14 20:27:58 torrey Exp $ */
 
 #include "quartzCommon.h"
 
@@ -121,6 +121,7 @@
     pendingClients = nil;
     clientPID = 0;
     sendServerEvents = NO;
+    x11Active = YES;
     serverVisible = NO;
     rootlessMenuBarVisible = YES;
     queueShowServer = YES;
@@ -140,6 +141,11 @@
     [[NSRunLoop currentRunLoop] addPort:signalPort
                                 forMode:NSModalPanelRunLoopMode];
 
+    [[NSNotificationCenter defaultCenter] addObserver:self
+                                          selector:@selector(windowBecameKey:)
+                                          name:NSWindowDidBecomeKeyNotification
+                                          object:nil];
+
     return self;
 }
 
@@ -270,7 +276,12 @@
                 if (!quartzProcs->IsX11Window([anEvent window],
                                               [anEvent windowNumber]))
                 {
+                    if (x11Active)
+                        [self activateX11:NO];
                     return NO;
+                } else {
+                    if (!x11Active)
+                        [self activateX11:YES];
                 }
             }
             mouse1Pressed = YES;
@@ -307,6 +318,8 @@
             break;
         case NSKeyDown:
         case NSKeyUp:
+            if (!x11Active)
+                return NO;
             // If the mouse is not on the valid X display area,
             // we don't send the X server key events.
             if (![self getMousePosition:&xe fromEvent:nil])
@@ -318,6 +331,8 @@
             xe.u.u.detail = [anEvent keyCode];
             break;
         case NSFlagsChanged:
+            if (!x11Active)
+                return NO;
             [self getMousePosition:&xe fromEvent:nil];
             xe.u.u.type = kXDarwinUpdateModifiers;
             xe.u.clientMessage.u.l.longs0 = flags;
@@ -910,8 +925,7 @@
             quartzProcs->CaptureScreens();
             HideMenuBar();
         }
-        xe.u.u.type = kXDarwinActivate;
-        [self sendXEvent:&xe];
+        [self activateX11:YES];
 
         // the mouse location will have moved; track it
         xe.u.u.type = MotionNotify;
@@ -934,8 +948,7 @@
             [self writePasteboard];
         }
 
-        xe.u.u.type = kXDarwinDeactivate;
-        [self sendXEvent:&xe];
+        [self activateX11:NO];
     }
 
     serverVisible = show;
@@ -1165,6 +1178,31 @@
 {
     QuartzMessageServerThread(kXDarwinPasteboardNotify, 1,
                               AppleWMCopyToPasteboard);
+}
+
+// Set whether or not X11 is active and should receive all key events
+- (void)activateX11:(BOOL)state
+{
+    if (state) {
+	QuartzMessageServerThread(kXDarwinActivate, 0);
+    }
+    else {
+	QuartzMessageServerThread(kXDarwinDeactivate, 0);
+    }
+
+    x11Active = state;
+}
+
+// Some NSWindow became the key window
+- (void)windowBecameKey:(NSWindow *)window
+{
+    if (quartzProcs->IsX11Window(window, [window windowNumber])) {
+        if (!x11Active)
+            [self activateX11:YES];
+    } else {
+        if (x11Active)
+            [self activateX11:NO];
+    }
 }
 
 // Set the Apple-WM specifiable part of the window menu
diff -X CVS -uNr programs/Xserver/hw/darwin/quartz/quartzStartup.c programs/Xserver/hw/darwin/quartz/quartzStartup.c
--- xc/programs/Xserver/hw/darwin/quartz/quartzStartup.c	Wed Nov  5 09:21:26 2003
+++ programs/Xserver/hw/darwin/quartz/quartzStartup.c	Sun Nov 16 07:55:32 2003
@@ -28,7 +28,7 @@
  * holders shall not be used in advertising or otherwise to promote the sale,
  * use or other dealings in this Software without prior written authorization.
  */
-/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/quartzStartup.c,v 1.8 2003/11/05 00:15:00 torrey Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/darwin/quartz/quartzStartup.c,v 1.9 2003/11/15 00:07:09 torrey Exp $ */
 
 #include <fcntl.h>
 #include <unistd.h>
@@ -88,10 +88,16 @@
     argvGlobal = argv;
     envpGlobal = envp;
 
-    // Determine if we need to start X clients
-    // and what display mode to use
     quartzStartClients = 1;
     for (i = 1; i < argc; i++) {
+        // Display version info without starting Mac OS X UI if requested
+        if (!strcmp( argv[i], "-showconfig" ) || !strcmp( argv[i], "-version" )) {
+            DarwinPrintBanner();
+            exit(0);
+        }
+
+        // Determine if we need to start X clients
+        // and what display mode to use
         if (!strcmp(argv[i], "-nostartx")) {
             quartzStartClients = 0;    
         } else if (!strcmp( argv[i], "-fullscreen")) {
diff -X CVS -uNr programs/Xserver/hw/vfb/InitInput.c programs/Xserver/hw/vfb/InitInput.c
--- xc/programs/Xserver/hw/vfb/InitInput.c	Fri Dec 14 14:59:45 2001
+++ programs/Xserver/hw/vfb/InitInput.c	Sun Nov 16 07:55:34 2003
@@ -26,7 +26,7 @@
 from The Open Group.
 
 */
-/* $XFree86: xc/programs/Xserver/hw/vfb/InitInput.c,v 3.9 2001/12/14 19:59:45 dawes Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/vfb/InitInput.c,v 3.10 2003/11/16 03:16:59 dawes Exp $ */
 
 #include "X11/X.h"
 #define NEED_EVENTS
@@ -41,9 +41,7 @@
 #include "keysym.h"
 
 Bool
-LegalModifier(key, pDev)
-    unsigned int key;
-    DevicePtr	pDev;
+LegalModifier(unsigned int key, DevicePtr pDev)
 {
     return TRUE;
 }
@@ -63,9 +61,7 @@
  * easy to lift.
  */
 static Bool
-GetLK201Mappings(pKeySyms, pModMap)
-    KeySymsPtr pKeySyms;
-    CARD8 *pModMap;
+GetLK201Mappings(KeySymsPtr pKeySyms, CARD8 *pModMap)
 {
 #define INDEX(in) ((in - VFB_MIN_KEY) * LK201_GLYPHS_PER_KEY)
     int i;
@@ -257,9 +253,7 @@
 }
 
 static int
-vfbKeybdProc(pDevice, onoff)
-    DeviceIntPtr pDevice;
-    int onoff;
+vfbKeybdProc(DeviceIntPtr pDevice, int onoff)
 {
     KeySymsRec		keySyms;
     CARD8 		modMap[MAP_LENGTH];
@@ -285,9 +279,7 @@
 }
 
 static int
-vfbMouseProc(pDevice, onoff)
-    DeviceIntPtr pDevice;
-    int onoff;
+vfbMouseProc(DeviceIntPtr pDevice, int onoff)
 {
     BYTE map[4];
     DevicePtr pDev = (DevicePtr)pDevice;
@@ -317,9 +309,7 @@
 }
 
 void
-InitInput(argc, argv)
-    int argc;
-    char *argv[];
+InitInput(int argc, char *argv[])
 {
     DeviceIntPtr p, k;
     p = AddInputDevice(vfbMouseProc, TRUE);
@@ -332,26 +322,18 @@
 
 #ifdef XTESTEXT1
 void
-XTestGenerateEvent(dev_type, keycode, keystate, mousex, mousey)
-	int	dev_type;
-	int	keycode;
-	int	keystate;
-	int	mousex;
-	int	mousey;
+XTestGenerateEvent(int dev_type, int keycode, int keystate, int mousex,
+		   int mousey)
 {
 }
 
 void
-XTestGetPointerPos(fmousex, fmousey)
-	short *fmousex, *fmousey;
+XTestGetPointerPos(short *fmousex, short *fmousey)
 {
 }
 
 void
-XTestJumpPointer(jx, jy, dev_type)
-	int	jx;
-	int	jy;
-	int	dev_type;
+XTestJumpPointer(int jx, int jy, int dev_type)
 {
 }
 #endif
diff -X CVS -uNr programs/Xserver/hw/vfb/InitOutput.c programs/Xserver/hw/vfb/InitOutput.c
--- xc/programs/Xserver/hw/vfb/InitOutput.c	Sat Sep 13 17:33:05 2003
+++ programs/Xserver/hw/vfb/InitOutput.c	Sun Nov 16 07:55:34 2003
@@ -26,7 +26,7 @@
 from The Open Group.
 
 */
-/* $XFree86: xc/programs/Xserver/hw/vfb/InitOutput.c,v 3.23 2003/09/13 21:33:05 dawes Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/vfb/InitOutput.c,v 3.26 2003/11/16 03:16:59 dawes Exp $ */
 
 #if defined(WIN32)
 #include <X11/Xwinsock.h>
@@ -78,6 +78,7 @@
 {
     int scrnum;
     int width;
+    int paddedBytesWidth;
     int paddedWidth;
     int height;
     int depth;
@@ -90,6 +91,7 @@
     Pixel blackPixel;
     Pixel whitePixel;
     unsigned int lineBias;
+    CloseScreenProcPtr closeScreen;
 
 #ifdef HAS_MMAP
     int mmap_fd;
@@ -123,7 +125,7 @@
 
 
 static void
-vfbInitializePixmapDepths()
+vfbInitializePixmapDepths(void)
 {
     int i;
     vfbPixmapDepths[1] = TRUE; /* always need bitmaps */
@@ -132,7 +134,7 @@
 }
 
 static void
-vfbInitializeDefaultScreens()
+vfbInitializeDefaultScreens(void)
 {
     int i;
 
@@ -151,8 +153,7 @@
 }
 
 static int
-vfbBitsPerPixel(depth)
-    int depth;
+vfbBitsPerPixel(int depth)
 {
     if (depth == 1) return 1;
     else if (depth <= 8) return 8;
@@ -273,10 +274,7 @@
 }
 
 int
-ddxProcessArgument (argc, argv, i)
-    int argc;
-    char *argv[];
-    int i;
+ddxProcessArgument(int argc, char *argv[], int i)
 {
     static Bool firstTime = TRUE;
 
@@ -436,8 +434,7 @@
 
 
 static Bool
-vfbMultiDepthCreateGC(pGC)
-    GCPtr   pGC;
+vfbMultiDepthCreateGC(GCPtr pGC)
 {
     switch (vfbBitsPerPixel(pGC->depth))
     {
@@ -450,13 +447,13 @@
 }
 
 static void
-vfbMultiDepthGetSpans(pDrawable, wMax, ppt, pwidth, nspans, pdstStart)
-    DrawablePtr		pDrawable;	/* drawable from which to get bits */
-    int			wMax;		/* largest value of all *pwidths */
-    register DDXPointPtr ppt;		/* points to start copying from */
-    int			*pwidth;	/* list of number of bits to copy */
-    int			nspans;		/* number of scanlines to copy */
-    char		*pdstStart;	/* where to put the bits */
+vfbMultiDepthGetSpans(
+    DrawablePtr		pDrawable,	/* drawable from which to get bits */
+    int			wMax,		/* largest value of all *pwidths */
+    register DDXPointPtr ppt,		/* points to start copying from */
+    int			*pwidth,	/* list of number of bits to copy */
+    int			nspans,		/* number of scanlines to copy */
+    char		*pdstStart)	/* where to put the bits */
 {
     switch (pDrawable->bitsPerPixel) {
     case 1:
@@ -472,12 +469,9 @@
 }
 
 static void
-vfbMultiDepthGetImage(pDrawable, sx, sy, w, h, format, planeMask, pdstLine)
-    DrawablePtr pDrawable;
-    int		sx, sy, w, h;
-    unsigned int format;
-    unsigned long planeMask;
-    char	*pdstLine;
+vfbMultiDepthGetImage(DrawablePtr pDrawable, int sx, int sy, int w, int h,
+		      unsigned int format, unsigned long planeMask,
+		      char *pdstLine)
 {
     switch (pDrawable->bitsPerPixel)
     {
@@ -495,9 +489,7 @@
 static ColormapPtr InstalledMaps[MAXSCREENS];
 
 static int
-vfbListInstalledColormaps(pScreen, pmaps)
-    ScreenPtr	pScreen;
-    Colormap	*pmaps;
+vfbListInstalledColormaps(ScreenPtr pScreen, Colormap *pmaps)
 {
     /* By the time we are processing requests, we can guarantee that there
      * is always a colormap installed */
@@ -507,8 +499,7 @@
 
 
 static void
-vfbInstallColormap(pmap)
-    ColormapPtr	pmap;
+vfbInstallColormap(ColormapPtr pmap)
 {
     int index = pmap->pScreen->myNum;
     ColormapPtr oldpmap = InstalledMaps[index];
@@ -566,8 +557,7 @@
 }
 
 static void
-vfbUninstallColormap(pmap)
-    ColormapPtr	pmap;
+vfbUninstallColormap(ColormapPtr pmap)
 {
     ColormapPtr curpmap = InstalledMaps[pmap->pScreen->myNum];
 
@@ -583,10 +573,7 @@
 }
 
 static void
-vfbStoreColors(pmap, ndef, pdefs)
-    ColormapPtr pmap;
-    int         ndef;
-    xColorItem  *pdefs;
+vfbStoreColors(ColormapPtr pmap, int ndef, xColorItem *pdefs)
 {
     XWDColor *pXWDCmap;
     int i;
@@ -621,9 +608,7 @@
 }
 
 static Bool
-vfbSaveScreen(pScreen, on)
-    ScreenPtr pScreen;
-    int on;
+vfbSaveScreen(ScreenPtr pScreen, int on)
 {
     return TRUE;
 }
@@ -632,10 +617,7 @@
 
 /* this flushes any changes to the screens out to the mmapped file */
 static void
-vfbBlockHandler(blockData, pTimeout, pReadmask)
-    pointer   blockData;
-    OSTimePtr pTimeout;
-    pointer   pReadmask;
+vfbBlockHandler(pointer blockData, OSTimePtr pTimeout, pointer pReadmask)
 {
     int i;
 
@@ -658,17 +640,13 @@
 
 
 static void
-vfbWakeupHandler(blockData, result, pReadmask)
-    pointer blockData;
-    int     result;
-    pointer pReadmask;
+vfbWakeupHandler(pointer blockData, int result, pointer pReadmask)
 {
 }
 
 
 static void
-vfbAllocateMmappedFramebuffer(pvfb)
-    vfbScreenInfoPtr pvfb;
+vfbAllocateMmappedFramebuffer(vfbScreenInfoPtr pvfb)
 {
 #define DUMMY_BUFFER_SIZE 65536
     char dummyBuffer[DUMMY_BUFFER_SIZE];
@@ -724,8 +702,7 @@
 
 #ifdef HAS_SHM
 static void
-vfbAllocateSharedMemoryFramebuffer(pvfb)
-    vfbScreenInfoPtr pvfb;
+vfbAllocateSharedMemoryFramebuffer(vfbScreenInfoPtr pvfb)
 {
     /* create the shared memory segment */
 
@@ -753,16 +730,11 @@
 #endif /* HAS_SHM */
 
 static char *
-vfbAllocateFramebufferMemory(pvfb)
-    vfbScreenInfoPtr pvfb;
+vfbAllocateFramebufferMemory(vfbScreenInfoPtr pvfb)
 {
     if (pvfb->pfbMemory) return pvfb->pfbMemory; /* already done */
 
-    if (pvfb->bitsPerPixel == 1)
-	pvfb->sizeInBytes = (pvfb->paddedWidth * pvfb->height);
-    else
-	pvfb->sizeInBytes = pvfb->paddedWidth * pvfb->height *
-			    (pvfb->bitsPerPixel/8);
+    pvfb->sizeInBytes = pvfb->paddedBytesWidth * pvfb->height;
 
     /* Calculate how many entries in colormap.  This is rather bogus, because
      * the visuals haven't even been set up yet, but we need to know because we
@@ -820,8 +792,7 @@
 
 
 static void
-vfbWriteXWDFileHeader(pScreen)
-    ScreenPtr pScreen;
+vfbWriteXWDFileHeader(ScreenPtr pScreen)
 {
     vfbScreenInfoPtr pvfb = &vfbScreens[pScreen->myNum];
     XWDFileHeader *pXWDHeader = pvfb->pXWDHeader;
@@ -850,7 +821,7 @@
     pXWDHeader->bitmap_pad = BITMAP_SCANLINE_PAD_PROTO;
 #endif
     pXWDHeader->bits_per_pixel = pvfb->bitsPerPixel;
-    pXWDHeader->bytes_per_line = pvfb->paddedWidth;
+    pXWDHeader->bytes_per_line = pvfb->paddedBytesWidth;
     pXWDHeader->ncolors = pvfb->ncolors;
 
     /* visual related fields are written when colormap is installed */
@@ -889,17 +860,13 @@
 
 
 static Bool
-vfbCursorOffScreen (ppScreen, x, y)
-    ScreenPtr   *ppScreen;
-    int         *x, *y;
+vfbCursorOffScreen (ScreenPtr *ppScreen, int *x, int *y)
 {
     return FALSE;
 }
 
 static void
-vfbCrossScreen (pScreen, entering)
-    ScreenPtr   pScreen;
-    Bool        entering;
+vfbCrossScreen (ScreenPtr pScreen, Bool entering)
 {
 }
 
@@ -911,19 +878,37 @@
 };
 
 static Bool
-vfbScreenInit(index, pScreen, argc, argv)
-    int index;
-    ScreenPtr pScreen;
-    int argc;
-    char ** argv;
+vfbCloseScreen(int index, ScreenPtr pScreen)
+{
+    vfbScreenInfoPtr pvfb = &vfbScreens[index];
+    int i;
+ 
+    pScreen->CloseScreen = pvfb->closeScreen;
+
+    /*
+     * XXX probably lots of stuff to clean.  For now,
+     * clear InstalledMaps[] so that server reset works correctly.
+     */
+    for (i = 0; i < MAXSCREENS; i++)
+	InstalledMaps[i] = NULL;
+
+    return pScreen->CloseScreen(index, pScreen);
+}
+
+static Bool
+vfbScreenInit(int index, ScreenPtr pScreen, int argc, char **argv)
 {
     vfbScreenInfoPtr pvfb = &vfbScreens[index];
     int dpix = 100, dpiy = 100;
     int ret;
     char *pbits;
 
-    pvfb->paddedWidth = PixmapBytePad(pvfb->width, pvfb->depth);
+    pvfb->paddedBytesWidth = PixmapBytePad(pvfb->width, pvfb->depth);
     pvfb->bitsPerPixel = vfbBitsPerPixel(pvfb->depth);
+    if (pvfb->bitsPerPixel >= 8 )
+	pvfb->paddedWidth = pvfb->paddedBytesWidth / (pvfb->bitsPerPixel / 8);
+    else
+	pvfb->paddedWidth = pvfb->paddedBytesWidth * 8;
     pbits = vfbAllocateFramebufferMemory(pvfb);
     if (!pbits) return FALSE;
 
@@ -933,7 +918,7 @@
     {
     case 1:
 	ret = mfbScreenInit(pScreen, pbits, pvfb->width, pvfb->height,
-			    dpix, dpiy, pvfb->paddedWidth * 8);
+			    dpix, dpiy, pvfb->paddedWidth);
 	break;
     case 8:
     case 16:
@@ -986,16 +971,16 @@
 
     miSetZeroLineBias(pScreen, pvfb->lineBias);
 
+    pvfb->closeScreen = pScreen->CloseScreen;
+    pScreen->CloseScreen = vfbCloseScreen;
+
     return ret;
 
 } /* end vfbScreenInit */
 
 
 void
-InitOutput(screenInfo, argc, argv)
-    ScreenInfo *screenInfo;
-    int argc;
-    char **argv;
+InitOutput(ScreenInfo *screenInfo, int argc, char **argv)
 {
     int i;
     int NumFormats = 0;
@@ -1008,9 +993,16 @@
 	vfbPixmapDepths[vfbScreens[i].depth] = TRUE;
     }
 
-    /* for RENDER we need 32bpp */
-    if (Render)
+    /* RENDER needs a good set of pixmaps. */
+    if (Render) {
+	vfbPixmapDepths[1] = TRUE;
+	vfbPixmapDepths[4] = TRUE;
+	vfbPixmapDepths[8] = TRUE;
+	vfbPixmapDepths[15] = TRUE;
+	vfbPixmapDepths[16] = TRUE;
+	vfbPixmapDepths[24] = TRUE;
 	vfbPixmapDepths[32] = TRUE;
+    }
 
     for (i = 1; i <= 32; i++)
     {
diff -X CVS -uNr programs/Xserver/hw/xfree86/xaa/xaaNonTEText.c programs/Xserver/hw/xfree86/xaa/xaaNonTEText.c
--- xc/programs/Xserver/hw/xfree86/xaa/xaaNonTEText.c	Fri Nov 14 13:04:35 2003
+++ programs/Xserver/hw/xfree86/xaa/xaaNonTEText.c	Sun Nov 16 07:55:55 2003
@@ -1,4 +1,4 @@
-/* $XFree86: xc/programs/Xserver/hw/xfree86/xaa/xaaNonTEText.c,v 1.13 2003/11/14 17:23:00 dawes Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/xfree86/xaa/xaaNonTEText.c,v 1.14 2003/11/14 21:54:51 dawes Exp $ */
 
 /********************************************************************
 
@@ -285,35 +285,18 @@
 
     if(!nbox) return;
 
-    topLine = 10000; botLine = -10000;
-
-    for(i = 0; i < nglyph; i++) {
-	top = -glyphs[i].yoff;
-	bot = top + glyphs[i].height;
-	if(top < topLine) topLine = top;
-	if(bot > botLine) botLine = bot;
-    }
-
-    if(topLine < -FONTMAXBOUNDS(font,ascent)) {
-	xf86DrvMsg(pScrn->scrnIndex, X_WARNING,
-		   "XAA: topLine (%d) < %d\n",
-		   topLine, -FONTMAXBOUNDS(font,ascent));
-    }
-    if(botLine > FONTMAXBOUNDS(font,descent)) {
-	xf86DrvMsg(pScrn->scrnIndex, X_WARNING,
-		   "XAA: botline (%d) > %d\n",
-		   botLine, FONTMAXBOUNDS(font,descent));
-    }
-
     pitch = (Right - Left + 31) >> 5;
-    size = (pitch << 2) * (max(botLine, FONTMAXBOUNDS(font,descent)) -
-			   min(topLine, -FONTMAXBOUNDS(font,ascent)));
+    size = (pitch << 2) * (Bottom - Top);
     block = (CARD32*)ALLOCATE_LOCAL(size);
     bzero(block, size);
 
+    topLine = 10000; botLine = -10000;
+
     while(nglyph--) {
 	top = -glyphs->yoff;
 	bot = top + glyphs->height;
+	if(top < topLine) topLine = top;
+	if(bot > botLine) botLine = bot;
 	skippix = glyphs->start - infoRec->GlyphInfo[0].start;
 	bits = (CARD32*)glyphs->bits;
 	bitPitch = glyphs->srcwidth >> 2;
diff -X CVS -uNr programs/Xserver/hw/xnest/Screen.c programs/Xserver/hw/xnest/Screen.c
--- xc/programs/Xserver/hw/xnest/Screen.c	Fri Jan 10 08:29:40 2003
+++ programs/Xserver/hw/xnest/Screen.c	Sun Nov 16 07:55:59 2003
@@ -12,7 +12,7 @@
 is" without express or implied warranty.
 
 */
-/* $XFree86: xc/programs/Xserver/hw/xnest/Screen.c,v 3.11 2003/01/10 13:29:40 eich Exp $ */
+/* $XFree86: xc/programs/Xserver/hw/xnest/Screen.c,v 3.12 2003/11/14 22:25:59 dawes Exp $ */
 
 #include "X.h"
 #include "Xproto.h"
@@ -20,6 +20,7 @@
 #include "dix.h"
 #include "mi.h"
 #include "mibstore.h"
+#include "micmap.h"
 #include "colormapst.h"
 #include "resource.h"
 
@@ -44,6 +45,10 @@
 Window xnestDefaultWindows[MAXSCREENS];
 Window xnestScreenSaverWindows[MAXSCREENS];
 
+#ifdef GLXEXT
+extern void GlxWrapInitVisuals(miInitVisualsProcPtr *);
+#endif
+
 #ifdef PIXPRIV
 int xnestScreenGeneration = -1;
 #endif
@@ -140,6 +145,8 @@
   XSetWindowAttributes attributes;
   XWindowAttributes gattributes;
   XSizeHints sizeHints;
+  VisualID defaultVisual;
+  int rootDepth;
 
   if (!(AllocateWindowPrivate(pScreen, xnestWindowPrivateIndex,
 			    sizeof(xnestPrivWin))  &&
@@ -168,7 +175,6 @@
   numDepths = 1;
 
   for (i = 0; i < xnestNumVisuals; i++) {
-    visuals[numVisuals].vid = FakeClientID(0);
     visuals[numVisuals].class = xnestVisuals[i].class;
     visuals[numVisuals].bitsPerRGBValue = xnestVisuals[i].bits_per_rgb;
     visuals[numVisuals].ColormapEntries = xnestVisuals[i].colormap_size;
@@ -179,7 +185,26 @@
     visuals[numVisuals].offsetRed = offset(xnestVisuals[i].red_mask);
     visuals[numVisuals].offsetGreen = offset(xnestVisuals[i].green_mask);
     visuals[numVisuals].offsetBlue = offset(xnestVisuals[i].blue_mask);
-    
+
+    /* Check for and remove duplicates. */
+    for (j = 0; j < numVisuals; j++) {
+      if (visuals[numVisuals].class           == visuals[j].class           &&
+	  visuals[numVisuals].bitsPerRGBValue == visuals[j].bitsPerRGBValue &&
+	  visuals[numVisuals].ColormapEntries == visuals[j].ColormapEntries &&
+	  visuals[numVisuals].nplanes         == visuals[j].nplanes         &&
+	  visuals[numVisuals].redMask         == visuals[j].redMask         &&
+	  visuals[numVisuals].greenMask       == visuals[j].greenMask       &&
+	  visuals[numVisuals].blueMask        == visuals[j].blueMask        &&
+	  visuals[numVisuals].offsetRed       == visuals[j].offsetRed       &&
+	  visuals[numVisuals].offsetGreen     == visuals[j].offsetGreen     &&
+	  visuals[numVisuals].offsetBlue      == visuals[j].offsetBlue)
+	break;
+    }
+    if (j < numVisuals)
+      break;
+
+    visuals[numVisuals].vid = FakeClientID(0);
+
     depthIndex = UNDEFINED;
     for (j = 0; j < numDepths; j++)
       if (depths[j].depth == xnestVisuals[i].depth) {
@@ -204,6 +229,21 @@
     
     numVisuals++;
   }
+  visuals = (VisualPtr)xrealloc(visuals, numVisuals * sizeof(VisualRec));
+
+  defaultVisual = visuals[xnestDefaultVisualIndex].vid;
+  rootDepth = visuals[xnestDefaultVisualIndex].nplanes;
+
+#ifdef GLXEXT
+  {
+    miInitVisualsProcPtr proc = NULL;
+
+    GlxWrapInitVisuals(&proc);
+    /* GlxInitVisuals ignores the last three arguments. */
+    proc(&visuals, &depths, &numVisuals, &numDepths,
+	 &rootDepth, &defaultVisual, 0, 0, 0);
+  }
+#endif
 
   if (xnestParentWindow != 0) {
     XGetWindowAttributes(xnestDisplay, xnestParentWindow, &gattributes);
@@ -214,9 +254,9 @@
   /* myNum */
   /* id */
   miScreenInit(pScreen, NULL, xnestWidth, xnestHeight, 1, 1, xnestWidth,
-	       visuals[xnestDefaultVisualIndex].nplanes, /* rootDepth */
+	       rootDepth,
 	       numDepths, depths,
-	       visuals[xnestDefaultVisualIndex].vid, /* root visual */
+	       defaultVisual, /* root visual */
 	       numVisuals, visuals);
 
   miInitializeBackingStore(pScreen);
diff -X CVS -uNr programs/glxinfo/glxinfo.c programs/glxinfo/glxinfo.c
--- xc/programs/glxinfo/glxinfo.c	Tue Nov 19 23:43:50 2002
+++ programs/glxinfo/glxinfo.c	Sun Nov 16 07:56:00 2003
@@ -20,7 +20,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-/* $XFree86: xc/programs/glxinfo/glxinfo.c,v 1.10 2002/11/20 04:43:50 dawes Exp $ */
+/* $XFree86: xc/programs/glxinfo/glxinfo.c,v 1.11 2003/11/14 20:43:34 dawes Exp $ */
 
 /*
  * This program is a work-alike of the IRIX glxinfo program.
@@ -422,7 +422,7 @@
 
    /* multisample attribs */
 #ifdef GLX_ARB_multisample
-   if (strstr("GLX_ARB_multisample", ext) == 0) {
+   if (ext && strstr("GLX_ARB_multisample", ext) == 0) {
       glXGetConfig(dpy, vInfo, GLX_SAMPLE_BUFFERS_ARB, &attribs->numMultisample);
       glXGetConfig(dpy, vInfo, GLX_SAMPLES_ARB, &attribs->numSamples);
    }
diff -X CVS -uNr programs/xdm/config/Xres.cpp programs/xdm/config/Xres.cpp
--- xc/programs/xdm/config/Xres.cpp	Fri Jan  3 22:11:31 2003
+++ programs/xdm/config/Xres.cpp	Sun Nov 16 07:56:05 2003
@@ -3,7 +3,7 @@
 !
 !
 !
-! $XFree86: xc/programs/xdm/config/Xres.cpp,v 1.6 2003/01/04 03:11:31 dawes Exp $
+! $XFree86: xc/programs/xdm/config/Xres.cpp,v 1.7 2003/11/15 03:25:22 dawes Exp $
 !
 #define BS \ /* cpp can be trickier than m4 */
 #define NLBS \n\ /* don't remove these comments */
@@ -28,19 +28,19 @@
 #endif /* XPM */
 xlogin*fail: Login incorrect
 #ifdef XPM
-/**/#if WIDTH > 800
+XHASHif WIDTH > 800
 xlogin*greetFont: -adobe-helvetica-bold-o-normal--24-240-75-75-p-138-iso8859-1
 xlogin*font: -adobe-helvetica-medium-r-normal--18-180-75-75-p-98-iso8859-1
 xlogin*promptFont: -adobe-helvetica-bold-r-normal--18-180-75-75-p-103-iso8859-1
 xlogin*failFont: -adobe-helvetica-bold-r-normal--18-180-75-75-p-103-iso8859-1
-/**/#else
+XHASHelse
 xlogin*greetFont: -adobe-helvetica-bold-o-normal--17-120-100-100-p-92-iso8859-1
 xlogin*font: -adobe-helvetica-medium-r-normal--12-120-75-75-p-67-iso8859-1
 xlogin*promptFont: -adobe-helvetica-bold-r-normal--12-120-75-75-p-70-iso8859-1
 xlogin*failFont: -adobe-helvetica-bold-o-normal--14-140-75-75-p-82-iso8859-1
-/**/#endif
+XHASHendif
 #endif /* XPM */
-/**/#ifdef COLOR
+XHASHifdef COLOR
 #ifndef XPM
 xlogin*greetColor: CadetBlue
 #else
@@ -56,7 +56,7 @@
 xlogin*failColor: red
 *Foreground: black
 *Background: #fffff0
-/**/#else
+XHASHelse
 #ifdef XPM
 xlogin*borderWidth: 3
 xlogin*frameWidth: 0
@@ -68,13 +68,13 @@
 xlogin*Foreground: black
 xlogin*Background: white
 #endif /* XPM */
-/**/#endif
+XHASHendif
 #ifdef XPM
-/**/#if PLANES >= 8
+XHASHif PLANES >= 8
 xlogin*logoFileName: BITMAPDIR/**//XDM_PIXMAP
-/**/#else
+XHASHelse
 xlogin*logoFileName: BITMAPDIR/**//XDM_BWPIXMAP
-/**/#endif
+XHASHendif
 xlogin*useShape: true
 xlogin*logoPadding: 10
 #endif /* XPM */
diff -X CVS -uNr programs/xwud/xwud.c programs/xwud/xwud.c
--- xc/programs/xwud/xwud.c	Tue Sep 23 22:43:39 2003
+++ programs/xwud/xwud.c	Sun Nov 16 07:56:14 2003
@@ -26,7 +26,7 @@
 from The Open Group.
 
 */
-/* $XFree86: xc/programs/xwud/xwud.c,v 3.8 2003/09/24 02:43:39 dawes Exp $ */
+/* $XFree86: xc/programs/xwud/xwud.c,v 3.10 2003/11/15 02:40:28 dawes Exp $ */
 
 /* xwud - marginally useful raster image undumper */
 
@@ -70,11 +70,12 @@
 		      XColor *colors, XImage *in_image, XImage *out_image);
 static void Do_Direct(Display *dpy, XWDFileHeader *header, Colormap *colormap, 
 		      int ncolors, XColor *colors, 
-		      XImage *in_image, XImage *out_image);
+		      XImage *in_image, XImage *out_image, XVisualInfo *vinfo);
 static unsigned int Image_Size(XImage *image);
 static void Error(char *string);
 static void _swapshort(char *bp, unsigned int n);
 static void _swaplong(char *bp, unsigned int n);
+static void DumpHeader(const XWDFileHeader *header, const char *win_name);
 
 static void
 usage(void)
@@ -148,6 +149,7 @@
     XStandardColormap *stdmaps, *stdmap = NULL;
     char c;
     int win_width, win_height;
+    Bool dump_header = False;
 
     progname = argv[0];
 
@@ -162,6 +164,10 @@
 	    display_name = argv[i];
 	    continue;
 	}
+	if (strcmp(argv[i], "-dumpheader") == 0) {
+	    dump_header = True;
+	    continue;
+	}
 	if (strcmp(argv[i], "-fg") == 0) {
 	    if (++i >= argc) usage();
 	    fgname = argv[i];
@@ -276,6 +282,11 @@
     if(!Read(win_name + 6, sizeof(char), win_name_size, in_file))
       Error("Unable to read window name from dump file.");
 
+    if (dump_header) {
+	DumpHeader(&header, win_name);
+	exit(0);
+    }
+   
     /* initialize the input image */
 
     in_image = &in_image_struct;
@@ -530,7 +541,7 @@
 	} else if ((header.visual_class == TrueColor) ||
 		   (header.visual_class == DirectColor))
 	    Do_Direct(dpy, &header, &colormap, ncolors, colors,
-		      in_image, out_image);
+		      in_image, out_image, &vinfo);
 	else
 	    Do_Pseudo(dpy, &colormap, ncolors, colors, in_image, out_image);
     }
@@ -871,9 +882,9 @@
     switch (class) {
     case PseudoColor:
 	return 5;
-    case DirectColor:
-	return 4;
     case TrueColor:
+	return 4;
+    case DirectColor:
 	return 3;
     case StaticColor:
 	return 2;
@@ -981,12 +992,15 @@
 
 static void
 Do_Direct(Display *dpy, XWDFileHeader *header, Colormap *colormap, 
-	  int ncolors, XColor *colors, XImage *in_image, XImage *out_image)
+	  int ncolors, XColor *colors, XImage *in_image, XImage *out_image,
+          XVisualInfo *vinfo)
 {
     register int x, y;
     XColor color;
     unsigned long rmask, gmask, bmask;
-    int rshift = 0, gshift = 0, bshift = 0;
+    unsigned long ormask, ogmask, obmask;
+    unsigned long  rshift = 0, gshift = 0, bshift = 0;
+    unsigned long  orshift = 0, ogshift = 0, obshift = 0;
     int i;
     unsigned long pix, xpix;
     unsigned long *pixels, *rpixels;
@@ -1040,7 +1054,38 @@
 		XPutPixel(out_image, x, y, color.pixel);
 	    }
 	}
+    } else if (header->visual_class == TrueColor &&
+	       vinfo->class == TrueColor) {
+	ormask = vinfo->red_mask;
+	while (!(ormask & 1)) {
+	    ormask >>= 1;
+	    orshift++;
+	}
+	ogmask = vinfo->green_mask;
+	while (!(ogmask & 1)) {
+	    ogmask >>= 1;
+	    ogshift++;
+	}
+	obmask = vinfo->blue_mask;
+	while (!(obmask & 1)) {
+	    obmask >>= 1;
+	    obshift++;
+	}
+	for (y = 0; y < in_image->height; y++) {
+	    for (x = 0; x < in_image->width; x++) {
+		pix = XGetPixel(in_image, x, y);
+		xpix = (((((pix >> rshift) & rmask) * 65535 / rmask)
+			 * ormask / 65535) << orshift) |
+		       (((((pix >> gshift) & gmask) * 65535 / gmask)
+			 * ogmask / 65535) << ogshift) |
+		       (((((pix >> bshift) & bmask) * 65535 / bmask)
+			 * obmask / 65535) << obshift);
+		XPutPixel(out_image, x, y, xpix);
+	    }
+	}
     } else {
+	if (header->visual_class == TrueColor)
+	    ncolors = 0;
 	pix = 1 << 12;
 	pixels = (unsigned long *)malloc(sizeof(unsigned long) * pix);
 	rpixels = (unsigned long *)malloc(sizeof(unsigned long) * pix);
@@ -1136,3 +1181,36 @@
 	bp += 2;
     }
 }
+
+static void
+DumpHeader(const XWDFileHeader *header, const char *win_name)
+{
+	printf("window name:        %s\n", win_name);
+	printf("sizeof(XWDheader):  %d\n", sizeof(*header));
+	printf("header size:        %ld\n", header->header_size);
+	printf("file version:       %ld\n", header->file_version);
+	printf("pixmap format:      %ld\n", header->pixmap_format);
+	printf("pixmap depth:       %ld\n", header->pixmap_depth);
+	printf("pixmap width:       %ld\n", header->pixmap_width);
+	printf("pixmap height:      %ld\n", header->pixmap_height);
+	printf("x offset:           %ld\n", header->xoffset);
+	printf("byte order:         %ld\n", header->byte_order);
+	printf("bitmap unit:        %ld\n", header->bitmap_unit);
+	printf("bitmap bit order:   %ld\n", header->bitmap_bit_order);
+	printf("bitmap pad:         %ld\n", header->bitmap_pad);
+	printf("bits per pixel:     %ld\n", header->bits_per_pixel);
+	printf("bytes per line:     %ld\n", header->bytes_per_line);
+	printf("visual class:       %ld\n", header->visual_class);
+	printf("red mask:           %ld\n", header->red_mask);
+	printf("green mask:         %ld\n", header->green_mask);
+	printf("blue mask:          %ld\n", header->blue_mask);
+	printf("bits per rgb:       %ld\n", header->bits_per_rgb);
+	printf("colormap entries:   %ld\n", header->colormap_entries);
+	printf("num colors:         %ld\n", header->ncolors);
+	printf("window width:       %ld\n", header->window_width);
+	printf("window height:      %ld\n", header->window_height);
+	printf("window x:           %ld\n", header->window_x);
+	printf("window y:           %ld\n", header->window_y);
+	printf("border width:       %ld\n", header->window_bdrwidth);
+}
+
