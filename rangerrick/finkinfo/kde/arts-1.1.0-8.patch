
===================================================================
diff -u -u -r1.1.1.7 -r1.25
--- admin/acinclude.m4.in	20 Nov 2002 00:45:10 -0000	1.1.1.7
+++ admin/acinclude.m4.in	29 Nov 2002 18:19:37 -0000	1.25
@@ -31,6 +31,9 @@
 dnl thanks to Raja R Harinath.
 dnl ------------------------------------------------------------------------
 dnl
+
+USER_LDFLAGS="-multiply_defined suppress $USER_LDFLAGS"
+
 ifdef([_AC_PATH_X_XMKMF],[],
    [AC_DEFUN([_AC_PATH_X_XMKMF],[AC_PATH_X_XMKMF])])
 ifdef([AC_OUTPUT_SUBDIRS],[],
@@ -366,7 +369,7 @@
   fi
 
 AC_MSG_CHECKING([for KDE libraries installed])
-ac_link='$LIBTOOL_SHELL --silent --mode=link ${CXX-g++} -o conftest $CXXFLAGS $all_includes $CPPFLAGS $LDFLAGS $all_libraries conftest.$ac_ext $LIBS -lkdecore $LIBQT $KDE_TEST_RPATH 1>&5'
+ac_link='$LIBTOOL_SHELL --mode=link ${CXX-g++} -o conftest $CXXFLAGS $all_includes $CPPFLAGS $LDFLAGS $all_libraries conftest.$ac_ext $LIBS -lkdecore $LIBQT $KDE_TEST_RPATH 1>&5'
 
 if AC_TRY_EVAL(ac_link) && test -s conftest; then
   AC_MSG_RESULT(yes)
@@ -704,13 +707,10 @@
      AC_CHECK_LIB(ipc, shmat, X_EXTRA_LIBS="$X_EXTRA_LIBS -lipc"))
    
    # darwin needs this to initialize the environment
-   AC_CHECK_HEADERS(crt_externs.h)
+   AC_CHECK_HEADERS([crt_externs.h sys/types.h])
    AC_CHECK_FUNC(_NSGetEnviron, [AC_DEFINE(HAVE_NSGETENVIRON, 1, [Define if your system needs _NSGetEnviron to set up the environment])])
  
-   # more headers that need to be explicitly included on darwin
-   AC_CHECK_HEADERS(sys/types.h stdint.h)
-
-   # darwin requires a poll emulation library
+   # darwin requires a poll.h emulation library
    AC_CHECK_LIB(poll, poll, LIB_POLL="-lpoll")
 
    # CoreAudio framework
@@ -719,11 +719,36 @@
      FRAMEWORK_COREAUDIO="-framework CoreAudio"
    ])
 
+   # CoreServices framework
+   AC_CHECK_HEADER(CoreServices/CoreServices.h, [
+     AC_DEFINE(HAVE_CORESERVICES, 1, [Define if you have the CoreServices API])
+     FRAMEWORK_CORESERVICES="-framework CoreServices"
+   ])
+
+   # Solaris 2.6 and others need -lresolv for res_init
+   AC_CHECK_FUNCS(res_init, , [
+     kde_libs_safe="$LIBS"
+     LIBS="$LIBS $X_EXTRA_LIBS -lresolv"
+     AC_TRY_LINK(
+[
+#include <resolv.h>
+],
+[ 
+res_init(); 
+],
+        LIBRESOLV="-lresolv"
+        X_EXTRA_LIBS="$X_EXTRA_LIBS $LIBRESOLV"
+        AC_DEFINE(HAVE_RES_INIT, 1, [Define if you have the res_init function])
+     )
+     LIBS=$kde_libs_safe
+   ])
+
    AC_CHECK_RES_INIT
-   AC_SUBST(LIB_POLL)
    AC_SUBST(FRAMEWORK_COREAUDIO)
    LIBSOCKET="$X_EXTRA_LIBS"
    AC_SUBST(LIBSOCKET)
+   AC_SUBST(FRAMEWORK_CORESERVICES)
+   AC_SUBST(LIB_POLL)
    AC_SUBST(LIBRESOLV)
    AC_SUBST(X_EXTRA_LIBS)
    AC_CHECK_LIB(ucb, killpg, [LIBUCB="-lucb"]) dnl for Solaris2.4
@@ -932,7 +957,7 @@
 kde_ldflags_safe="$LDFLAGS"
 kde_libs_safe="$LIBS"
 
-LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS"
+LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS"
 LIBS="-lXext -lX11 $LIBSOCKET"
 
 AC_TRY_LINK([
@@ -974,9 +999,9 @@
 kde_save_LDFLAGS="$LDFLAGS"
 kde_save_CFLAGS="$CFLAGS"
 kde_save_LIBS="$LIBS"
-LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS"
+LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS"
 CFLAGS="$CFLAGS -I$x_includes"
-LIBS="-lXinerama -lXext"
+LIBS="-lXinerama -lXext -lX11"
 
 if test "x$no_xinerama" = "xno"; then
 
@@ -1844,7 +1869,7 @@
  kde_cxxflags_safe="$CXXFLAGS"
 
  LIBS="-lkde-qt-addon $LIBQT $LIBS"
- CXXFLAGS="$CXXFLAGS -I$prefix/include -I$prefix/include/kde $all_includes"
+ CXXFLAGS="-isystem $prefix/include $CXXFLAGS $all_includes"
  LDFLAGS="$LDFLAGS $all_libraries $USER_LDFLAGS"
 
  AC_TRY_LINK([
@@ -1917,6 +1942,7 @@
    AC_SUBST(LIB_KSPELL, "-lkspell")
    AC_SUBST(LIB_KPARTS, "-lkparts")
    AC_SUBST(LIB_KDEPRINT, "-lkdeprint")
+   AC_SUBST(LIB_KDED, "-lkded_main")
 # these are for backward compatibility
    AC_SUBST(LIB_KSYCOCA, "-lkio")
    AC_SUBST(LIB_KFILE, "-lkio")
@@ -2156,6 +2182,7 @@
 [
 	KDE_CHECK_FUNC_EXT(mkstemp, [
 #include <stdlib.h>
+#include <unistd.h>
 ],
 	[
 mkstemp("/tmp/aaaXXXXXX");
@@ -2168,6 +2195,7 @@
 [
 	KDE_CHECK_FUNC_EXT(mkstemps, [
 #include <stdlib.h>
+#include <unistd.h>
 ],
 	[
 mkstemps("/tmp/aaaXXXXXX", 6);
@@ -2647,10 +2675,10 @@
       if test $kde_use_debug_code = "full"; then
         CFLAGS="-g3 $CFLAGS"
       else
-        CFLAGS="-g -O2 $CFLAGS"
+        CFLAGS="-g -O $CFLAGS"
       fi
     else
-      CFLAGS="-O2 $CFLAGS"
+      CFLAGS="-Os -frename-registers -mmultiple -mcpu=750 -mtune=750 $CFLAGS"
     fi
   fi
 
@@ -2680,7 +2708,7 @@
         if test "$kde_use_debug_code" = "full"; then
           CXXFLAGS="-g3 $CXXFLAGS"
         else
-          CXXFLAGS="-g -O2 $CXXFLAGS"
+          CXXFLAGS="-g -O $CXXFLAGS"
         fi
       fi
       KDE_CHECK_COMPILER_FLAG(fno-builtin,[CXXFLAGS="-fno-builtin $CXXFLAGS"])
@@ -2692,7 +2720,7 @@
       if test "$CXX" = "KCC"; then
         CXXFLAGS="+K3 $CXXFLAGS"
       else
-        CXXFLAGS="-O2 $CXXFLAGS"
+        CXXFLAGS="-Os -frename-registers -mmultiple -mcpu=750 -mtune=750 $CXXFLAGS"
       fi  
     fi
   fi
@@ -2832,7 +2860,7 @@
 AC_LIBTOOL_CXX
 
 LIBTOOL_SHELL="/bin/sh ./libtool"
-#  LIBTOOL="$LIBTOOL --silent"
+#  LIBTOOL="$LIBTOOL"
 KDE_PLUGIN="-avoid-version -module -no-undefined \$(KDE_RPATH) \$(KDE_MT_LDFLAGS)"
 AC_SUBST(KDE_PLUGIN)
 
@@ -2888,7 +2916,7 @@
 [
 AC_CANONICAL_SYSTEM
 AC_ARG_PROGRAM
-AM_INIT_AUTOMAKE($1, $2)
+AM_INIT_AUTOMAKE($1, $2, [foreign])
 AM_DISABLE_LIBRARIES
 AC_PREFIX_DEFAULT(${KDEDIR:-/usr/local/kde})
 AC_CHECK_COMPILERS
@@ -3189,9 +3217,9 @@
     ac_save_ldflags="$LDFLAGS"
     ac_save_cflags="$CFLAGS"
     if test "x$kde_use_qt_emb" != "xyes"; then
-      LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm -lX11 -lXext $LIBZ $LIBSOCKET"
+      LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm -lX11 -lXext $LIBZ $LIBSOCKET"
     else
-      LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm $LIBZ $LIBSOCKET"
+      LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm $LIBZ $LIBSOCKET"
     fi
     CFLAGS="$CFLAGS $X_INCLUDES $USER_INCLUDES"
     test -n "$XPM_INCLUDE" && CFLAGS="-I$XPM_INCLUDE $CFLAGS"
@@ -3418,13 +3446,23 @@
           AC_CHECK_LIB(pam, pam_start,
             [ AC_CHECK_HEADER(security/pam_appl.h,
                 [ use_pam=yes
-                  pam_service=kde ]) 
+		  pam_header=security/pam_appl.h
+                  pam_service=kde ],
+		[ AC_CHECK_HEADER(pam/pam_appl.h,
+			[ use_pam=yes
+			  pam_header=pam/pam_appl.h
+			  pam_service=kde ])
+		]) 
             ], , $LIBDL)
           ac_cv_path_pam="use_pam=$use_pam pam_service=$pam_service"
         ])
     ])
   eval "$ac_cv_path_pam"
 
+  if test "$pam_header" = "pam/pam_appl.h"; then
+    AC_DEFINE(PAM_HEADER_IN_PAM, 1, [Define if your pam headers are in pam/ instead of security/])
+  fi
+
   AC_MSG_CHECKING(for PAM)
   if test "x$use_pam" = xno; then
     AC_MSG_RESULT(no)
@@ -3434,17 +3472,18 @@
     AC_DEFINE(HAVE_PAM, 1, [Defines if you have PAM (Pluggable Authentication Modules)])
     PAMLIBS="$PAM_MISC_LIB -lpam $LIBDL"
 
+    AC_CHECK_HEADERS([pam/pam_appl.h])
+
     dnl test whether struct pam_message is const (Linux) or not (Sun)
     AC_MSG_CHECKING(for const pam_message)
-    AC_EGREP_HEADER([struct pam_message], security/pam_appl.h,
-      [ AC_EGREP_HEADER([const struct pam_message], security/pam_appl.h,
+    AC_EGREP_HEADER([struct pam_message], $pam_header,
+      [ AC_EGREP_HEADER([const struct pam_message], $pam_header,
                         [AC_MSG_RESULT([const: Linux-type PAM])],
                         [AC_MSG_RESULT([nonconst: Sun-type PAM])
                         AC_DEFINE(PAM_MESSAGE_NONCONST, 1, [Define if your PAM support takes non-const arguments (Solaris)])]
                         )],
       [AC_MSG_RESULT([not found - assume const, Linux-type PAM])])
   fi
-
   AC_SUBST(PAMLIBS)
 ])
 
@@ -4604,6 +4643,83 @@
      LIBS="$kde_save_LIBS"
 ])
 
+AC_DEFUN(KDE_CHECK_LDAP,
+[
+  AC_MSG_CHECKING([for LDAP])
+
+  if test -n "$1"; then
+    ldap_extra_dirs="$1"
+  fi
+
+  ldap_incdirs="$ldap_extra_dirs/include /usr/include /usr/local/include/ $kde_extra_includes"
+  AC_FIND_FILE(ldap.h, $ldap_incdirs, ldap_incdir)
+  if test ! -r $ldap_incdir/ldap.h; then
+    ldap_incdir=no
+  fi
+
+  ldap_libdirs="$ldap_extra_dirs/lib /usr/lib /usr/local /usr/lib $kde_extra_libs"
+  for ext in la so sl dylib a; do
+    AC_FIND_FILE(libldap.$ext, $ldap_libdirs, ldap_libdir_test)
+    if test -r $ldap_libdir_test/libldap.$ext; then
+      ldap_libdir=$ldap_libdir_test
+      break
+    fi
+  done
+  if test -z "$ldap_libdir"; then
+    ldap_libdir=no
+  fi
+  if test x$ldap_libdir != xno && test x$ldap_incdir != xno; then
+    LDAP_INCS=-I$ldap_incdir
+    LDAP_LIBS=-L$ldap_libdir
+    # on MacOSX, we link against the framework instead of
+    # directly to the libraries, for forward-compatibility
+    if test -d "/System/Library/Frameworks/LDAP.framework"; then
+      LIBLDAP="-framework LDAP"
+    else
+      LIBLDAP="-lldap -llber -lresolv"
+    fi
+    if test "$USE_RPATH" = "yes"; then
+      LDAP_RPATH="-R $LDAPLIBDIR/lib"
+    fi
+
+    kde_safe_LIBS="$LIBS"
+    kde_safe_CFLAGS="$CFLAGS"
+    LIBS="$LIBS $all_libraries $LDAP_LIBS $LIBLDAP $KERBEROS_LIBS $X_EXTRA_LIBS"
+    CFLAGS="$CFLAGS $all_includes $LDAP_INCS $KERBEROS_INCS"
+    AC_LANG_SAVE
+    AC_LANG_C
+    AC_TRY_LINK(
+      [#include <lber.h>
+#include <ldap.h>
+#if LDAP_VENDOR_VERSION < 20000
+#error OpenLDAP version too old, please upgrade to version 2 or higher
+#endif
+],
+      [ LDAP *ldap; ],
+      [ ldap_old=no ],
+      [ ldap_old=yes ]
+    )
+    LIBS="$kde_safe_LIBS"
+    CFLAGS="$kde_safe_CFLAGS"
+
+    if test x$ldap_old = xno; then
+      AC_SUBST(LDAP_INCS)
+      AC_SUBST(LDAP_LIBS)
+      AC_SUBST(LDAP_RPATH)
+      AC_SUBST(LIBLDAP)
+      AC_DEFINE_UNQUOTED(HAVE_LIBLDAP,1,[Define if you have LDAP libraries])
+    else
+      LDAP_INCS=
+      LDAP_LIBS=
+      LDAP_RPATH=
+      LIBLDAP=
+    fi
+    AC_MSG_RESULT([libraries $ldap_libdir, headers $ldap_incdir])
+  else
+    AC_MSG_RESULT([not found])
+  fi
+])
+
 AC_DEFUN(KDE_JAVA_PREFIX,
 [
 	dir=`dirname "$1"`
@@ -4660,6 +4776,7 @@
       KDE_JAVA_PREFIX(/usr/lib/IBMJava2*)
       KDE_JAVA_PREFIX(/usr/lib/IBMJava*)
       KDE_JAVA_PREFIX(/opt/java*)
+      KDE_JAVA_PREFIX(/Library/Java/Home)
     
       kde_cv_path="NONE"
       kde_save_IFS=$IFS
@@ -4711,10 +4828,20 @@
 dnl At this point kde_java_bindir and kde_java_includedir are either set or "no"
 if test "x$kde_java_bindir" != "xno"; then
 
+  case $host_os in
+    darwin*)
+      dnl Look for libjvm.dylib
+      kde_java_libjvmdir=`find $kde_java_bindir/.. -name libjvm.dylib | sed 's,libjvm.dylib,,'|head -n 1`
+      kd_java_libhpidir=''
+      dnl Darwin doesn't have libhpi
+      ;;
+    *)
   dnl Look for libjvm.so
   kde_java_libjvmdir=`find $kde_java_bindir/.. -name libjvm.so | sed 's,libjvm.so,,'|head -n 1`
   dnl Look for libhpi.so and avoid green threads
-  kde_java_libhpidir=`find $kde_java_bindir/.. -name libhpi.so | grep -v green | sed 's,libhpi.so,,' | head -n 1`
+  kde_java_libhpidir=`find $kde_java_bindir/.. -name libhpi.so | grep -v green | sed 's,libhpi.so,,' | tail -n 1`
+      ;;
+  esac
 
   dnl Now check everything's fine under there
   dnl the include dir is our flag for having the JDK
@@ -4743,19 +4870,31 @@
     JAVAC=
     jni_includes=
   fi
-
+  case $host_os in
+    darwin*)
+      if test ! -r "$kde_java_libjvmdir/libjvm.dylib"; then
+        AC_MSG_ERROR([libjvm.dylib not found under $kde_java_libjvmdir. Use --without-java.])
+      fi
+      dnl Darwin doesn't have libhpi, but it's not fatal
+      LIB_JVM="-framework JavaVM"
+      LIB_HPI=""
+      ;;
+    *)
   if test ! -r "$kde_java_libjvmdir/libjvm.so"; then
      AC_MSG_ERROR([libjvm.so not found under $kde_java_libjvmdir. Use --without-java.])
   fi 
+      LIB_JVM="-L$kde_java_libjvmdir -ljvm"
+      if test ! -r "$kde_java_libhpidir/libhpi.so"; then
+        AC_MSG_ERROR([libhpi.so not found under $kde_java_libhpidir. Use --without-java.])
+      fi
+      LIB_HPI="-L$kde_java_libhpidir -lhpi"
+      ;;
+  esac
 
   if test ! -x "$kde_java_bindir/java"; then
       AC_MSG_ERROR([java not found under $kde_java_bindir. javac was found though! Use --with-java or --without-java.])
   fi
 
-  if test ! -r "$kde_java_libhpidir/libhpi.so"; then
-    AC_MSG_ERROR([libhpi.so not found under $kde_java_libhpidir. Use --without-java.])
-  fi
-
   if test -n "$jni_includes"; then
     dnl Check for JNI version
     AC_LANG_SAVE
@@ -5119,8 +5258,7 @@
   LDFLAGS="$LDFLAGS -L$ssl_libdir $all_libraries"
   LIBS="$LIBS $LIBSSL -lRSAglue -lrsaref"
 
-  AC_TRY_LINK(,void RSAPrivateEncrypt(void);RSAPrivateEncrypt();,
-  ac_ssl_rsaref="yes"
+  AC_TRY_LINK(,void RSAPrivateEncrypt(void);RSAPrivateEncrypt();, ac_ssl_rsaref="yes"
   ,
   ac_ssl_rsaref="no"
   )
===================================================================
diff -u -u -r1.1.1.6 -r1.2
--- admin/am_edit	29 Oct 2002 02:27:18 -0000	1.1.1.6
+++ admin/am_edit	27 Nov 2002 19:43:04 -0000	1.2
@@ -1034,7 +1034,7 @@
             if ($allidls !~ /$source\_kidl/) {
                 
                 $dep_lines .= "$source.kidl: $sourcedir$source.h \$(DCOP_DEPENDENCIES)\n";
-                $dep_lines .= "\t\$(DCOPIDL) $sourcedir$source.h > $source.kidl || ( rm -f $source.kidl ; /bin/false )\n";
+                $dep_lines .= "\t\$(DCOPIDL) $sourcedir$source.h > $source.kidl || ( rm -f $source.kidl ; false )\n";
                 
                 $allidls .= $source . "_kidl ";
             }
===================================================================
diff -u -u -r1.1.1.8 -r1.3
--- admin/cvs.sh	26 Nov 2002 21:12:30 -0000	1.1.1.8
+++ admin/cvs.sh	26 Nov 2002 21:14:13 -0000	1.3
@@ -119,7 +119,7 @@
 fi
 
 echo "*** Creating Makefile templates"
-$AUTOMAKE || exit 1
+$AUTOMAKE --foreign || exit 1
 if test -z "$UNSERMAKE"; then
   echo "*** Postprocessing Makefile templates"
   perl -w admin/am_edit || exit 1
===================================================================
diff -u -u -r1.1.1.5 -r1.5
--- admin/detect-autoconf.sh	26 Nov 2002 21:12:30 -0000	1.1.1.5
+++ admin/detect-autoconf.sh	26 Nov 2002 21:14:14 -0000	1.5
@@ -52,12 +52,15 @@
 checkAutomakeAclocal ()
 {
   if test -z "$UNSERMAKE"; then
-    if test -x "`$WHICH automake-1.5`" ; then
-      AUTOMAKE="`$WHICH automake-1.5`"
-      ACLOCAL="`$WHICH aclocal-1.5`"
+    if test -x "`$WHICH automake-1.7`" ; then
+      AUTOMAKE="`$WHICH automake-1.7`"
+      ACLOCAL="`$WHICH aclocal-1.7`"
     elif test -x "`$WHICH automake-1.6`" ; then
       AUTOMAKE="`$WHICH automake-1.6`"
       ACLOCAL="`$WHICH aclocal-1.6`"
+    elif test -x "`$WHICH automake-1.5`" ; then
+      AUTOMAKE="`$WHICH automake-1.5`"
+      ACLOCAL="`$WHICH aclocal-1.5`"
     fi
   else
      AUTOMAKE="$UNSERMAKE"
===================================================================
diff -u -u -r1.1.1.5 -r1.11
--- admin/libtool.m4.in	20 Nov 2002 00:45:13 -0000	1.1.1.5
+++ admin/libtool.m4.in	24 Nov 2002 07:11:18 -0000	1.11
@@ -65,7 +65,7 @@
 LIBTOOL_DEPS="$ac_aux_dir/ltmain.sh"
 
 # Always use our own libtool.
-LIBTOOL='$(SHELL) $(top_builddir)/libtool --silent'
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
 AC_SUBST(LIBTOOL)dnl
 
 # Prevent multiple expansion
@@ -609,6 +609,12 @@
     lt_cv_sys_max_cmd_len=-1;
     ;;
 
+  darwin*)
+    # this should be enough... the length test freaks out some versions
+    # of OSX's `expr`
+    lt_cv_sys_max_cmd_len=16384;
+    ;;
+
   *)
     # If test is not a shell built-in, we'll probably end up computing a
     # maximum length that is only half of the actual maximum length, but
@@ -1908,7 +1914,8 @@
     lt_cv_file_magic_test_file=`/System/Library/Frameworks/System.framework/System`
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_deplibs_check_method='pass_all'
+    lt_cv_file_magic_cmd=''
     ;;
   esac
   ;;
@@ -2560,6 +2567,11 @@
 	;;
     esac
     ;;
+  darwin*)
+    shared_flag='-dynamiclib'
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $predep_objects ${lib}-master.o $deplibs $postdep_objects $compiler_flags -o $lib $(test x$module != xyes && echo -install_name $rpath/$soname $verstring)'
+    output_verbose_link_cmd='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $CFLAGS -v conftest.$objext 2>&1 | egrep "\-L"'
+    ;;
   dgux*)
     case $cc_basename in
       ec++)
@@ -4750,7 +4762,9 @@
 	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-undefined suppress'
 	;;
       *) # Darwin 1.3 on
-	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-flat_namespace -undefined suppress'
+	#_LT_AC_TAGVAR(allow_undefined_flag, $1)='-flat_namespace -undefined suppress'
+        # testing with twolevel namespaces
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-multiply_defined suppress'
 	;;
       esac
 
@@ -4758,7 +4772,7 @@
       #        cross-compilation, but unfortunately the echo tests do not
       #        yet detect zsh echo's removal of \ escapes.  Also zsh mangles
       #	       `"' quotes if we put them in here... so don't!
-      _LT_AC_TAGVAR(archive_cmds, $1)='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $linker_flags $(test x$module != xyes && echo -install_name $rpath/$soname $verstring)'
       # We need to add '_' to the symbols in $export_symbols first
       #_LT_AC_TAGVAR(archive_expsym_cmds, $1)="$_LT_AC_TAGVAR(archive_cmds, $1)"' && strip -s $export_symbols'
       _LT_AC_TAGVAR(hardcode_direct, $1)=yes
===================================================================
diff -u -u -r1.1.1.4 -r1.6
--- admin/ltmain.sh	20 Nov 2002 00:45:14 -0000	1.1.1.4
+++ admin/ltmain.sh	24 Nov 2002 07:11:19 -0000	1.6
@@ -2532,11 +2532,11 @@
 	eval libname=\"$libname_spec\"
 	;;
       *)
-	if test "$module" = no; then
-	  $echo "$modename: libtool library \`$output' must begin with \`lib'" 1>&2
-	  $echo "$help" 1>&2
-	  exit 1
-	fi
+#	if test "$module" = no; then
+#	  $echo "$modename: libtool library \`$output' must begin with \`lib'" 1>&2
+#	  $echo "$help" 1>&2
+#	  exit 1
+#	fi
 	if test "$need_lib_prefix" != no; then
 	  # Add the "lib" prefix for modules if required
 	  name=`$echo "X$outputname" | $Xsed -e 's/\.la$//'`
@@ -3321,7 +3321,23 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+          if test "x$verstring" = "x0.0"; then
+                tmp_verstring=
+          else
+                tmp_verstring="$verstring"
+          fi
+ 	  save_deplibs="$deplibs"
+ 	  for conv in $convenience; do
+            tmp_deplibs=
+            for test_deplib in $deplibs; do
+              if test "$test_deplib" != "$conv"; then
+                tmp_deplibs="$tmp_deplibs $test_deplib"
+              fi
+            done
+            deplibs="$tmp_deplibs"
+ 	  done
 	  eval cmds=\"$archive_cmds\"
+ 	  deplibs="$save_deplibs"
 	fi
 
 	if len=`expr "X$cmds" : ".*"` &&
@@ -3419,7 +3435,12 @@
 	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	    eval cmds=\"$archive_expsym_cmds\"
 	  else
-	    eval cmds=\"$archive_cmds\"
+            save_deplibs="$deplibs"
+            for conv in $convenience; do
+              deplibs="${deplibs%$conv*} ${deplibs#*$conv}"
+            done
+            eval cmds=\"$archive_cmds\"
+            deplibs="$save_deplibs"
 	  fi
 
 	  # Append the command to remove the reloadable object files
@@ -3634,6 +3655,14 @@
 	;;
       esac
 
+      case $host in
+      *darwin*)
+        # Don't allow lazy linking, it breaks C++ global constructors
+        compile_command="$compile_command ${wl}-bind_at_load -undefined suppress -flat_namespace"
+        finalize_command="$finalize_command ${wl}-bind_at_load"
+        ;;
+      esac
+
       compile_command="$compile_command $compile_deplibs"
       finalize_command="$finalize_command $finalize_deplibs"
 
@@ -4024,9 +4053,10 @@
 	    # fast_install is set to needless
 	    relink_command=
 	  fi
+          relink_command=
 	else
 	  link_command="$compile_var$compile_command$compile_rpath"
-	  relink_command="$finalize_var$finalize_command$finalize_rpath"
+	  #relink_command="$finalize_var$finalize_command$finalize_rpath"
 	fi
       fi
 
===================================================================
diff -u -u -r1.1.1.4 -r1.5
===================================================================
diff -u -u -r1.1.1.3 -r1.5
===================================================================
diff -u -u -r1.1.1.6 -r1.19
--- configure.in.in	26 Nov 2002 21:22:13 -0000	1.1.1.6
+++ configure.in.in	26 Nov 2002 21:24:05 -0000	1.19
@@ -284,6 +284,19 @@
 fi
 ])
 
+dnl needed for mach realtime scheduling
+AC_DEFUN([AC_CHECK_MACH_REALTIME_SCHED],
+[
+  AC_CHECK_HEADERS([mach/mach.h mach/thread_policy.h sys/param.h sys/sysctl.h],
+    AC_CHECK_FUNCS(thread_policy_set,
+      arts_mach_realtime_sched=yes,
+      arts_mach_realtime_sched=no)
+  )
+  if test "x$arts_mach_realtime_sched" = "xyes"; then
+    AC_DEFINE(HAVE_MACH_REALTIME_SCHED,1, [Define if your system supports mach realtime scheduling])
+  fi
+])
+
 dnl Type of the ioctl function test - after some tries, it seems that this
 dnl not required for Linux vs. FreeBSD (for which this test was written), and
 dnl that only the Linux documentation claims that it has an "int" as second
@@ -434,6 +447,7 @@
 AC_CHECK_LIBAUDIOFILE
 AC_CHECK_SGILIBAUDIO
 AC_CHECK_REALTIME_SCHED
+AC_CHECK_MACH_REALTIME_SCHED
 AC_CHECK_GETDOMAINNAME
 AC_CHECK_IOCTL_TYPE
 AC_CHECK_X86_FLOAT_INT
@@ -606,6 +620,27 @@
 AC_CHECK_HEADERS(soundcard.h)
 AC_CHECK_LIB(ossaudio, _oss_ioctl, [LIBOSSAUDIO="-lossaudio"])
 AC_SUBST(LIBOSSAUDIO)
+
+dnl MacOSX has a similar library called liboss
+AC_MSG_CHECKING([for liboss])
+
+LIBOSS_CFLAGS=
+LIBOSS_LIBADD=
+LIBOSS_LDFLAGS=
+
+if test "x$PKG_CONFIG" != "xno" && test x`$PKG_CONFIG --modversion liboss 2>/dev/null` != x; then
+  LIBOSS_CFLAGS=""
+  LIBOSS_LIBADD="`$PKG_CONFIG --libs-only-l liboss`"
+  LIBOSS_LDFLAGS="`$PKG_CONFIG --libs-only-L liboss`"
+  AC_DEFINE(HAVE_LIBOSS,1,[Define if you have the liboss compatibility library])
+  AC_MSG_RESULT(yes)
+else
+  AC_MSG_RESULT(not installed)
+fi
+
+AC_SUBST(LIBOSS_CFLAGS)
+AC_SUBST(LIBOSS_LIBADD)
+AC_SUBST(LIBOSS_LDFLAGS)
 
 dnl Don't remove !
 dnl AC_OUTPUT(artsc/artsc-config)
===================================================================
diff -u -u -r1.1.1.2 -r1.3
--- Makefile.am.in	1 Oct 2002 01:47:59 -0000	1.1.1.2
+++ Makefile.am.in	1 Oct 2002 01:54:35 -0000	1.3
@@ -27,7 +27,7 @@
 	cd $(top_srcdir) && $(MAKE) -f admin/Makefile.common subdirs 
 
 AUTOMAKE_OPTIONS = foreign 1.5
-COMPILE_FIRST = libltdl mcop mcopidl flow mcop_mt soundserver artsc examples tests doc 
+COMPILE_FIRST = libltdl mcop mcopidl flow mcop_mt x11 soundserver artsc examples tests doc 
 EXTRA_DIST = admin
 
 dist-hook:
===================================================================
diff -u -u -r1.1.1.1 -r1.2
--- ./artsc/artsc-config.in	25 Jun 2002 01:45:58 -0000	1.1.1.1
+++ ./artsc/artsc-config.in	26 Nov 2002 21:00:47 -0000	1.2
@@ -27,7 +27,7 @@
 do
   case $1 in
     --libs)
-	  flags="$flags -L$libdir $libdl -lartsc @USE_THREADS@ @LIBPTHREAD@"
+	  flags="$flags -L$libdir $libdl -lartsc @USE_THREADS@ @LIBPTHREAD@ @FRAMEWORK_COREAUDIO@"
 	  ;;
     --cflags)
 	  flags="$flags -I$includedir/artsc"
===================================================================
diff -u -u -r1.1.1.3 -r1.9
--- ./artsc/Makefile.am	14 Aug 2002 13:21:23 -0000	1.1.1.3
+++ ./artsc/Makefile.am	29 Nov 2002 18:19:36 -0000	1.9
@@ -9,19 +9,19 @@
 bin_SCRIPTS = artsc-config artsdsp
 
 libartsdsp_la_SOURCES = artsdsp.c
-libartsdsp_la_LDFLAGS = -no-undefined -module
+libartsdsp_la_LDFLAGS = -no-undefined -module -avoid-version
 libartsdsp_la_LIBADD = libartsc.la
 
 libartsdsp_st_la_SOURCES = artsc.c artsdsp.c
-libartsdsp_st_la_LDFLAGS = -no-undefined -module
+libartsdsp_st_la_LDFLAGS = -no-undefined -module -avoid-version
 libartsdsp_st_la_LIBADD = $(top_builddir)/libltdl/libltdlc.la
 
 libartsc_la_SOURCES = artsc.c
-libartsc_la_LDFLAGS = -no-undefined
+libartsc_la_LDFLAGS = -no-undefined -avoid-version
 libartsc_la_LIBADD = $(top_builddir)/libltdl/libltdlc.la $(LIBPTHREAD) $(USE_THREADS)
 
 libartscbackend_la_SOURCES = artscbackend.cc
-libartscbackend_la_LDFLAGS = -no-undefined -module $(KDE_RPATH)
+libartscbackend_la_LDFLAGS = -no-undefined -module $(KDE_RPATH) -avoid-version
 libartscbackend_la_LIBADD = $(FLOWLIBS) \
     $(top_builddir)/soundserver/libsoundserver_idl.la
 
===================================================================
diff -N ./flow/audioiocoreaudio.cc
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ./flow/audioiocoreaudio.cc	27 Nov 2002 19:42:48 -0000	1.7
@@ -0,0 +1,553 @@
+    /*
+    
+    Copyright (C) 2001 Stefan Westerfeld
+                        stefan@space.twc.de
+    
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+    
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+    
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+    Boston, MA 02111-1307, USA.
+    
+    */
+/*
+    Modifications for ARTS -
+    
+       Ben Hines <bhines@alumni.ucsd.edu>
+       Ben Reed  <ranger@befunk.com>
+*/
+
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#define DEBUG 1
+
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <pthread.h>
+#include <sys/socket.h>
+#include <sys/file.h>
+
+/* for useful debugging macros */
+#include <mach/error.h>
+
+#include <CoreAudio/CoreAudio.h>
+
+#include "debug.h"
+#include "audioio.h"
+#include "audiosubsys.h"
+
+#define NAME_LEN 256		/* max length of a device name */
+#define BUF_SIZE (4 * 1024)  /* from ESD */
+
+#define driverVersion "0.01 alpha"
+
+#ifdef BIG_ENDIAN
+#define defaultFormat 17
+#else
+#define defaultFormat 16
+#endif
+
+bool NotifyOnError (OSStatus inRetVal, const char * inStringDesc);
+
+    
+struct audio_queue {
+    float dataBuf[BUF_SIZE];
+    pthread_mutex_t mutex;
+    pthread_cond_t condition;
+    int numSamples;
+};
+
+static OSStatus PlaybackIOProc(AudioDeviceID inDevice,
+			const AudioTimeStamp *inNow,
+			const AudioBufferList *inInputData,
+			const AudioTimeStamp *inInputTime,
+			AudioBufferList *outOutputData,
+			const AudioTimeStamp *inOutputTime,
+			audio_queue *inClientData);
+
+static OSStatus RecordIOProc(AudioDeviceID inDevice,
+		      const AudioTimeStamp *inNow,
+		      const AudioBufferList *inInputData,
+		      const AudioTimeStamp *inInputTime,
+		      AudioBufferList *outOutputData,
+		      const AudioTimeStamp *inOutputTime,
+		      audio_queue *inClientData);
+                                              
+namespace Arts {
+
+class AudioIOCoreAudio : public AudioIO {
+
+protected:
+     /* From ESD */
+     AudioDeviceID gOutputDeviceID, gInputDeviceID;
+    
+     audio_queue input;
+     audio_queue output;    
+    
+     int audioPlaybackStarted, audioRecordStarted;
+     int coreaudio_has_output_device;
+     int coreaudio_has_input_device;
+     int coreaudio_init;
+     
+     /* Arts Specific */
+     int audio_fd;
+     int bytesPerSec;
+     timeval start;
+        
+public:
+	AudioIOCoreAudio();
+	bool supportsFormat(AudioDeviceID device, AudioStreamBasicDescription *format);
+	void setParam(AudioParam param, int& value);
+	int getParam(AudioParam param);
+
+	bool open();
+	void close();
+	int read(void *buffer, int size);
+	int write(void *buffer, int size);
+
+};
+
+REGISTER_AUDIO_IO(AudioIOCoreAudio, "coreaudio", "Apple CoreAudio");
+}; // end namespace Arts
+
+using namespace std;
+using namespace Arts;
+
+AudioIOCoreAudio::AudioIOCoreAudio() {
+        artsdebug("CoreAudio driver version %s", driverVersion);
+        /*
+            * default parameters
+            */
+        param(samplingRate) = 44100;
+        paramStr(deviceName) = "default";
+        param(fragmentSize) = 1024;
+        param(fragmentCount) = 7;
+        param(channels) = 2;
+        param(direction) = 2;
+        param(format) = defaultFormat;
+        
+        input.numSamples = output.numSamples = 0;
+    
+        audioPlaybackStarted = 0, audioRecordStarted = 0;
+        coreaudio_has_output_device = 0;
+        coreaudio_has_input_device = 0;
+        coreaudio_init = 0;
+}
+
+
+void
+AudioIOCoreAudio::close()
+{
+    OSStatus status;
+    
+    /* deactivate both of them */
+    if (coreaudio_has_output_device && audioPlaybackStarted) {
+        status = AudioDeviceStop(gOutputDeviceID, (AudioDeviceIOProc) PlaybackIOProc);
+        audioPlaybackStarted = 0;
+    }
+    
+    if (coreaudio_has_input_device && audioRecordStarted) {
+        status = AudioDeviceStop(gInputDeviceID, (AudioDeviceIOProc) RecordIOProc);
+        audioRecordStarted = 0;
+    }
+}
+
+ 
+int AudioIOCoreAudio::write(void *buffer, int buf_size) {
+  OSStatus status;
+  float scale = 1.0 / SHRT_MAX;
+  int remain_to_write = buf_size;
+
+  if (!coreaudio_has_output_device)
+    return -1;
+
+  if (!audioPlaybackStarted) {
+    status = AudioDeviceStart(gOutputDeviceID,(AudioDeviceIOProc)  PlaybackIOProc);
+    audioPlaybackStarted = 1;
+  }
+
+  while (remain_to_write)
+  {
+    pthread_mutex_lock(&output.mutex);
+
+    while(output.numSamples == BUF_SIZE)
+      pthread_cond_wait(&output.condition, &output.mutex);
+
+    {
+      short *src_data = (short *)buffer + (buf_size - remain_to_write) / sizeof(short);
+      float *dst_data = output.dataBuf + output.numSamples;
+      int src_samples = remain_to_write / sizeof(short);
+      int dst_samples = BUF_SIZE - output.numSamples;
+      int n = (dst_samples < src_samples) ? dst_samples : src_samples;
+      int i;
+
+      for (i = 0; i < n; i++)
+        dst_data[i] = scale * src_data[i];
+
+      output.numSamples += n;
+      remain_to_write -= n * sizeof(short);
+    }
+
+    pthread_mutex_unlock(&output.mutex);
+  }
+
+  return (buf_size);
+
+}
+
+int AudioIOCoreAudio::read(void *buffer, int buf_size) {
+  OSStatus status;
+  float scale = SHRT_MAX;
+  int remain_to_read = buf_size;
+
+  if (!coreaudio_has_input_device)
+    return -1;
+
+  if (!audioRecordStarted) {
+    status = AudioDeviceStart(gInputDeviceID,(AudioDeviceIOProc)  RecordIOProc);
+    audioRecordStarted = 1;
+  }
+
+  while (remain_to_read)
+  {
+    pthread_mutex_lock(&input.mutex);
+
+    while(input.numSamples == BUF_SIZE)
+      pthread_cond_wait(&input.condition, &input.mutex);
+
+    {
+      float *src_data = input.dataBuf + input.numSamples;
+      short *dst_data = (short *)buffer + (buf_size - remain_to_read) / sizeof(short);
+      int src_samples = BUF_SIZE - input.numSamples;
+      int dst_samples = remain_to_read / sizeof(short);
+      int n = (dst_samples < src_samples) ? dst_samples : src_samples;
+      int i;
+
+      for (i = 0; i < n; i++)
+        dst_data[i] = (short)(scale * src_data[i]);
+
+      input.numSamples += n;
+      remain_to_read -= n * sizeof(short);
+    }
+
+    pthread_mutex_unlock(&input.mutex);
+  }
+
+  return (buf_size);
+
+}
+
+
+bool
+AudioIOCoreAudio::open()//const void *flags)
+{
+        #define LEN_DEVICE_NAME 128
+        OSStatus status;
+        UInt32 propertySize, bufferByteCount;
+        char deviceName[LEN_DEVICE_NAME];
+        char fdName[LEN_DEVICE_NAME + 50];
+        struct AudioStreamBasicDescription streamDesc;
+        int rval;
+
+/***** Arts Specific ***/
+	fprintf(stderr, "info: requesting %s, %d channel sound at %d hz\n",
+            (param(direction) & directionWrite) ? "write" : "read", param(channels), param(samplingRate));
+
+        bytesPerSec = param(channels) * 2 * param(samplingRate);
+        gettimeofday(&start,0);
+	if (param(direction) & directionWrite) {
+
+            /* HACK - create the file descriptor?  */
+            sprintf(fdName, "/tmp/audioiocoreaudio");
+            fopen(fdName, "w+");
+           audio_fd = ::open(fdName,  O_RDWR | O_NDELAY, 0);
+            	/* Obtain a file descriptor for our "listening" socket */
+        //   audio_fd = socket(AF_INET, SOCK_STREAM, 0);
+
+            if(audio_fd == -1)
+            {
+                arts_warning("file descriptor can't be created, %s\n", strerror(errno));
+                return false;
+            }
+
+
+/***** End Arts Specific ***/
+
+/*  Stuff from ESD... */
+        /********************** playback section ***************************/
+        /* get default output device */
+        propertySize = sizeof(gOutputDeviceID);
+        status = AudioHardwareGetProperty(kAudioHardwarePropertyDefaultOutputDevice,
+                                            &propertySize,
+                                            &gOutputDeviceID);
+        if (status) {
+            fprintf(stderr, "get default output device failed, status = %d\n",
+                    (int)status);
+            return (-2);
+        }
+        
+        if (gOutputDeviceID != kAudioDeviceUnknown) {
+            /* got default output device */
+            coreaudio_has_output_device = 1;
+        
+            /* get output device name */
+            propertySize = sizeof(char)*LEN_DEVICE_NAME;
+            status = AudioDeviceGetProperty(gOutputDeviceID,
+                                            1,
+                                            0,
+                                            kAudioDevicePropertyDeviceName,
+                                            &propertySize,
+                                            deviceName);
+            if (status) {
+            fprintf(stderr, "get device name failed, status = %d\n",
+                    (int)status);
+            return (-2);
+            }
+        
+            /* get output format */
+            propertySize = sizeof(struct AudioStreamBasicDescription);
+            status = AudioDeviceGetProperty(gOutputDeviceID,
+                                            1,
+                                            0,
+                                            kAudioDevicePropertyStreamFormat,
+                                            &propertySize,
+                                            &streamDesc);
+            if (status) {
+            fprintf(stderr, "get device property failed, status = %d\n",
+                    (int)status);
+            return (-2);
+            }
+        
+            if ((streamDesc.mSampleRate != 44100.0) ||
+                (streamDesc.mFormatID != kAudioFormatLinearPCM) ||
+            !(streamDesc.mFormatFlags & kLinearPCMFormatFlagIsFloat) ||
+                (streamDesc.mChannelsPerFrame != 2))
+            {
+            fprintf (stderr, "unsupported device.\n");
+            return (-2);
+            }
+        
+            /* set buffer size */
+            bufferByteCount = BUF_SIZE * sizeof(float);
+            propertySize = sizeof(bufferByteCount);
+            status = AudioDeviceSetProperty(gOutputDeviceID,
+                                            0,
+                                            0,
+                                            0,
+                                            kAudioDevicePropertyBufferSize,
+                                            propertySize,
+                                            &bufferByteCount);
+            if (status) {
+            fprintf(stderr, "set device property failed, status = %d\n",
+                    (int)status);
+            }
+        
+            fprintf(stderr, "using device %s for output:\n", deviceName);
+            fprintf(stderr, "\twith sample rate %f, %ld channels and %ld-bit sample\n",
+                    streamDesc.mSampleRate,
+                    streamDesc.mChannelsPerFrame,
+                    streamDesc.mBitsPerChannel);
+        
+            rval = pthread_mutex_init(&output.mutex, NULL);
+            if (rval) {
+            fprintf(stderr, "mutex init failed\n");
+            return (-1);
+            }
+            rval = pthread_cond_init(&output.condition, NULL);
+            if (rval) {
+            fprintf(stderr, "condition init failed\n");
+            return (-1);
+            }
+
+            /* Registers PlaybackIOProc with the device without activating it. */
+            status = AudioDeviceAddIOProc(gOutputDeviceID, (AudioDeviceIOProc) PlaybackIOProc, (void *)&output);               
+        }
+        
+	} else if (param(direction) & directionRead) {
+		// not supported
+	} else {
+		arts_warning("something went horribly wrong, we're not reading or writing!!!!");
+		return false;
+	}                
+        
+	return true;
+}
+
+void AudioIOCoreAudio::setParam(AudioParam p, int& value) {
+	switch(p)
+	{
+		default:
+			param(p) = value;
+			break;
+	}
+}
+
+int AudioIOCoreAudio::getParam(AudioParam p) {
+	timeval now;
+	double delta;
+	int bytes;
+
+	switch(p)
+	{
+		case canRead:
+		case canWrite:
+			gettimeofday(&now,0);
+			delta = (double)now.tv_sec + (double)now.tv_usec/1000000.0;
+			delta -= (double)start.tv_sec + (double)start.tv_usec/1000000.0;
+			bytes = (int)( (delta * bytesPerSec) -  ((p == canRead)?input.numSamples:output.numSamples));
+               //         printf("%s %d bytes\n", ((p == canRead)?"canRead":"canWrite"), bytes);
+			return bytes;
+			break;
+
+		case autoDetect:
+			return 12; // so we're higher than liboss
+			break;
+                        
+		case selectReadFD:
+			return (param(direction) & directionRead)?audio_fd:-1;
+			break;
+
+		case selectWriteFD:
+			return (param(direction) & directionWrite)?audio_fd:-1;
+			break;
+                        
+		default:
+			return param(p);
+			break;
+	}
+}
+
+bool AudioIOCoreAudio::supportsFormat(AudioDeviceID device, AudioStreamBasicDescription *format) {
+
+	UInt32 formatSize;
+	OSStatus err;
+
+	formatSize = sizeof(*format);
+	err = AudioDeviceGetProperty(device, 0, false,
+		kAudioDevicePropertyStreamFormatSupported, &formatSize, format);
+	NotifyOnError(err, "supportsFormat");
+
+	if (err == noErr) {
+		return true;
+	} else {
+		return false;
+	}
+
+}
+
+
+static OSStatus PlaybackIOProc(AudioDeviceID inDevice,
+			const AudioTimeStamp *inNow,
+			const AudioBufferList *inInputData,
+			const AudioTimeStamp *inInputTime,
+			AudioBufferList *outOutputData,
+			const AudioTimeStamp *inOutputTime,
+			audio_queue *inClientData)
+{
+  float *bufPtr = (float *) outOutputData->mBuffers[0].mData;
+  int i;
+
+  pthread_mutex_lock(&inClientData->mutex);
+
+  for (i = 0; i < inClientData->numSamples; i++)
+    bufPtr[i] = inClientData->dataBuf[i];
+  for ( ; i < BUF_SIZE; i++)
+    bufPtr[i] = 0;
+  inClientData->numSamples = 0;
+
+  pthread_mutex_unlock(&inClientData->mutex);
+  pthread_cond_signal(&inClientData->condition);
+
+  return (kAudioHardwareNoError);
+}
+
+static OSStatus RecordIOProc(AudioDeviceID inDevice,
+		      const AudioTimeStamp *inNow,
+		      const AudioBufferList *inInputData,
+		      const AudioTimeStamp *inInputTime,
+		      AudioBufferList *outOutputData,
+		      const AudioTimeStamp *inOutputTime,
+		      audio_queue *inClientData)
+{
+  float *bufPtr = inInputData->mBuffers[0].mData;
+  int i;
+
+  pthread_mutex_lock(&inClientData->mutex);
+
+  for (i = 0; i < BUF_SIZE; i++)
+    inClientData->dataBuf[i] = bufPtr[i];
+  inClientData->numSamples = 0;
+
+  pthread_mutex_unlock(&inClientData->mutex);
+  pthread_cond_signal(&inClientData->condition);
+
+  return (kAudioHardwareNoError);
+}
+
+/* Utility */
+
+bool NotifyOnError (OSStatus inRetVal, const char * inStringDesc) {
+	if (inRetVal == noErr) {
+		return true;
+	} else {
+		switch(inRetVal) {
+			case kAudioHardwareNoError:
+				break;
+			case kAudioHardwareNotRunningError:
+				arts_warning("error: hardware not running in %s", inStringDesc);
+				break;
+			case kAudioHardwareUnspecifiedError:
+				arts_warning("error: unspecified error in %s", inStringDesc);
+				break;
+			case kAudioHardwareUnknownPropertyError:
+				arts_warning("error: unknown property in %s", inStringDesc);
+				break;
+			case kAudioHardwareBadPropertySizeError:
+				arts_warning("error: bad property size in %s", inStringDesc);
+				break;
+			case kAudioHardwareIllegalOperationError:
+				arts_warning("error: illegal operation in %s", inStringDesc);
+				break;
+			case kAudioHardwareBadDeviceError:
+				arts_warning("error: bad device in %s", inStringDesc);
+				break;
+			case kAudioHardwareBadStreamError:
+				arts_warning("error: bad stream in %s", inStringDesc);
+				break;
+			case kAudioDeviceUnsupportedFormatError:
+				arts_warning("error: unsupported format in %s", inStringDesc);
+				break;
+			case kAudioDevicePermissionsError:
+				arts_warning("error: bad device permissions in %s", inStringDesc);
+				break;
+			default:
+				arts_warning("error: unknown CoreAudio error in %s", inStringDesc);
+				break;
+		}
+			
+		arts_warning("  system: 0x%d", err_get_system(inRetVal));
+		arts_warning("  sub:    0x%d", err_get_sub(inRetVal));
+		arts_warning("  code:   0x%d", err_get_code(inRetVal));
+		return false;
+	}
+}
+
+void ExitOnError (OSStatus inRetVal, const char * inStringDesc) {
+	if ( NotifyOnError (inRetVal, inStringDesc) ) {
+		exit(1);
+	}
+}
===================================================================
diff -N ./flow/audioioesd.cc
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ./flow/audioioesd.cc	25 Jun 2002 01:46:40 -0000	1.1
@@ -0,0 +1,366 @@
+    /*
+
+    Copyright (C) 2002 Dave Vasilevky
+                       thevas@mac.com
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+  
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+   
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+    Boston, MA 02111-1307, USA.
+
+    */
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#ifdef HAVE_ESD
+
+// Special debug messages?
+#define AUDIOIOESD_DEBUG 1
+
+#define ARTS_SWAP16(n)  ( (((n) & 0x00ffU) << 8) | (((n) & 0xff00) >> 8) )
+
+#include <esd.h>
+
+#include <sys/types.h>
+#include <machine/endian.h>
+#include <errno.h>
+#include <unistd.h>
+
+#include "debug.h"
+#include "audioio.h"
+
+namespace Arts {
+
+class AudioIOESD : public AudioIO {
+protected:
+	// File descriptors
+	int mPlay;
+	int mRecord;
+	
+	// Endian conversion
+	bool mConvertEndian;
+	
+	void correctEndianness(void* data, int size);
+	#if AUDIOIOESD_DEBUG
+		void debugShowParams();
+	#endif
+
+public:
+	AudioIOESD();
+
+	int getParam(AudioParam param);
+	#if AUDIOIOESD_DEBUG
+		void setParamStr(AudioParam param, const char *value);
+		void setParam(AudioParam param, int& value);
+		const char *getParamStr(AudioParam param);
+	#endif
+
+	bool open();
+	void close();
+	int read(void* buffer, int size);
+	int write(void* buffer, int size);
+};
+
+REGISTER_AUDIO_IO(AudioIOESD,"esd","Enlightened sound daemon");
+
+};
+
+using namespace std;
+using namespace Arts;
+
+namespace {
+#ifdef WORDS_BIGENDIAN
+	const int GoodEndian = 17;
+#else
+	const int GoodEndian = 16;
+#endif
+}
+
+#if AUDIOIOESD_DEBUG
+void AudioIOESD::debugShowParams() {
+	string dir, fmt;
+	switch (param(direction)) {
+		case 1:		dir = "read";		break;
+		case 2:		dir = "write";		break;
+		case 3:		dir = "read/write";	break;
+		default:	dir = "UNKNOWN!!!"; break;
+	}
+	switch (param(format)) {
+		case 8:		fmt = "8-bit unsigned";					break;
+		case 16:	fmt = "16-bit signed little-endian";	break;
+		case 17:	fmt = "16-bit signed big-endian";		break;
+		default:	fmt = "UNKNOWN!!!";						break;
+	}
+	arts_debug(
+		"\t\t\tsample rate: %d\n"
+		"\t\t\tchannels: %d\n"
+		"\t\t\tdirection: %s\n"
+		"\t\t\tformat: %s\n"
+		"\t\t\tfragmentSize: %d\n"
+		"\t\t\tfragmentCount: %d\n"
+		"\t\t\tlastError: %s",
+		param(samplingRate), param(channels), dir.c_str(), fmt.c_str(),
+		param(fragmentSize), param(fragmentCount), paramStr(lastError).c_str()
+	);
+}
+#endif
+
+AudioIOESD::AudioIOESD() : mPlay(-1), mRecord(-1)
+{
+	/*
+	 * default parameters
+	 */
+	param(samplingRate) = ESD_DEFAULT_RATE;
+	param(channels) = 2;
+	param(direction) = 2;
+	param(format) = GoodEndian;
+	
+	// Use some semi-reasonable values, even if they are meaningless
+	param(fragmentSize) = ESD_BUF_SIZE / 8;
+	param(fragmentCount) = 7;
+	
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD constructing:");
+		debugShowParams();
+	#endif
+}
+
+bool AudioIOESD::open()
+{
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD opening:");
+		debugShowParams();
+	#endif
+
+	int esdFormat = ESD_STREAM;
+	string& theError = paramStr(lastError);
+	
+	// adjust fragmentSize/Count to be reasonable
+	int& theFragSize = param(fragmentSize);
+	theFragSize = min(theFragSize, ESD_BUF_SIZE);
+	param(fragmentCount) = min(param(fragmentCount), ESD_BUF_SIZE / theFragSize);
+	#if AUDIOIOESD_DEBUG
+		arts_debug("\tAdjusted fragment params to size %d, count %d", theFragSize, param(fragmentCount));
+	#endif
+	
+	int theChannels = param(channels);
+	if (theChannels == 1) {
+		esdFormat |= ESD_MONO;
+	} else if (theChannels == 2) {
+		esdFormat |= ESD_STEREO;
+	} else {
+		theError = "Bad number of channels";
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tERROR!!! Tried to use %d channels", theChannels);
+		#endif
+		return false;
+	}
+	
+	int theFormat = param(format);
+	mConvertEndian = false;
+	if (theFormat == 8) {
+		esdFormat |= ESD_BITS8;
+	} else if (theFormat == 16 || theFormat == 17) {
+		esdFormat |= ESD_BITS16;
+		if (theFormat != GoodEndian) {
+			mConvertEndian = true;
+		}
+	} else {
+		theError = "Bad format";
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tERROR!!! Tried to use format %d", theFormat);
+		#endif
+		return false;
+	}
+	
+	int theDirection = param(direction);
+	if (theDirection != directionRead && theDirection != directionWrite &&
+			theDirection != directionReadWrite) {
+		theError = "Bad direction";
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tERROR!!! Tried to use direction %d", theDirection);
+		#endif
+		return false;
+	}
+	
+	#if AUDIOIOESD_DEBUG
+		if (mPlay != -1)
+			arts_debug("\tPlaying stream already open");
+	#endif
+	if (mPlay == -1 && (theDirection == directionWrite || theDirection == directionReadWrite)) {
+		mPlay = esd_play_stream(esdFormat | ESD_PLAY, param(samplingRate), 0, "arts");
+		if (mPlay < 0) {
+			theError = "Can't open stream for audio output";
+			#if AUDIOIOESD_DEBUG
+				arts_debug("\tERROR!!! Couldn't open playing stream, error %d", mPlay);
+			#endif
+			mPlay = -1;
+			return false;
+		}
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tPlaying stream opened successfully");
+		#endif
+	}
+
+	#if AUDIOIOESD_DEBUG
+		if (mRecord != -1)
+			arts_debug("\tRecording stream already open");
+	#endif
+	if (mRecord == -1 && (theDirection == directionRead || theDirection == directionReadWrite)) {
+		mRecord = esd_record_stream(esdFormat | ESD_RECORD, param(samplingRate), 0, "arts");
+		if (mRecord < 0) {
+			theError = "Can't open stream for audio input";
+			#if AUDIOIOESD_DEBUG
+				arts_debug("\tERROR!!! Couldn't open recording stream, error %d", mRecord);
+			#endif
+			mRecord = -1;
+			return false;
+		}
+		#if AUDIOIOESD_DEBUG
+			arts_debug("\tRecording stream opened successfully");
+		#endif
+	}
+	
+	return true;
+}
+
+void AudioIOESD::close()
+{
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD closing:\n\tPlaying stream %s\n\tRecording stream %s",
+			mPlay >= 0 ? "closing" : "already closed", mRecord >= 0 ? "closing" : "already closed");
+	#endif
+	if (mPlay >= 0) {
+		esd_close(mPlay);
+		mPlay = -1;
+	}
+	if (mRecord >= 0) {
+		esd_close(mRecord);
+		mRecord = -1;
+	}
+}
+
+int AudioIOESD::getParam(AudioParam p)
+{
+	switch(p)
+	{
+		case autoDetect:
+				#if AUDIOIOESD_DEBUG
+					arts_debug("AudioIOESD getting int param:\n\tautoDetect = 1");
+				#endif
+				/* Probably slightly broken, use only when needed */
+				return 1;
+			break;
+		
+		default:
+				#if AUDIOIOESD_DEBUG
+					int r = param(p);
+					arts_debug("AudioIOESD getting int param:\n\t#%d = %d", p, r);
+					return r;
+				#else
+					return param(p);
+				#endif
+			break;
+	}
+}
+
+#if AUDIOIOESD_DEBUG
+void AudioIOESD::setParam(AudioParam p, int& val) {
+	arts_debug("AudioIOESD setting int param:\n\t#%d = %d", p, val);
+	AudioIO::setParam(p, val);
+}
+
+void AudioIOESD::setParamStr(AudioParam p, const char* val) {
+	arts_debug("AudioIOESD setting string param:\n\t#%d = %s", p, val);
+	AudioIO::setParamStr(p, val);
+}
+
+const char* AudioIOESD::getParamStr(AudioParam p) {
+	const char* r = AudioIO::getParamStr(p);
+	arts_debug("AudioIOESD getting string param:\n\t#%d = %s", p, r);
+	return r;
+}
+#endif
+
+int AudioIOESD::read(void* buffer, int size)
+{
+	arts_assert(mRecord >= 0);
+	int res = ::read(mRecord,buffer,size);
+	correctEndianness(buffer, size);
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD reading:\n\tsize = %d\n\treturn = %d%s", size, res, res > 0 ? "" : "\n\tERROR!!!");
+	#endif
+	return res;
+}
+
+int AudioIOESD::write(void* buffer, int size)
+{
+	#if AUDIOIOESD_DEBUG
+		arts_debug("AudioIOESD writing:\n\tsize = %d", size);
+	#endif
+	arts_assert(mPlay >= 0);
+	correctEndianness(buffer, size);
+	
+	for (int rem = size; rem > 0; ) {
+		int tries = 0;
+		do {
+			int written = ::write(mPlay, buffer, rem);
+			if (written > 0) {
+				#if AUDIOIOESD_DEBUG
+					arts_debug("\twrote %d bytes...", written);
+				#endif
+				rem -= written;
+				break;
+			} else if (errno == 0 || errno == EAGAIN) {
+				#if AUDIOIOESD_DEBUG
+					arts_debug("\tcan't write yet...try ", tries+1);
+				#endif
+				if (++tries > 20)
+					return -1;
+				usleep(1);
+			} else {
+				#if AUDIOIOESD_DEBUG
+					arts_debug("\tERROR!!! return code %d", written);
+				#endif
+				return written;
+			}
+		} while (1);
+	}
+	
+	#if AUDIOIOESD_DEBUG
+		arts_debug("\twrite succeeded");
+	#endif
+	return size;
+}
+
+void AudioIOESD::correctEndianness(void* data, int size)
+{
+	if (!mConvertEndian)
+		return;
+	
+	#if AUDIOIOESD_DEBUG
+		arts_debug("\tAudioIOESD: converting endianness");
+	#endif
+
+	int16_t* buf = (int16_t*)data;
+
+	int max = size/2;
+	for (int i = 0; i < max; ++i) {
+		int16_t sh = buf[i];
+		buf[i] = ARTS_SWAP16(sh);
+	}
+}
+
+#endif
===================================================================
diff -u -u -r1.1.1.3 -r1.6
--- ./flow/audioiooss.cc	29 Oct 2002 02:31:12 -0000	1.1.1.3
+++ ./flow/audioiooss.cc	7 Nov 2002 00:16:37 -0000	1.6
@@ -28,10 +28,30 @@
 
 #if defined(HAVE_SYS_SOUNDCARD_H)
 	#include <sys/soundcard.h>
+	#include <sys/ioctl.h>
 	#define COMPILE_AUDIOIO_OSS 1
+	#define OSS_OPEN open
+	#define OSS_CLOSE close
+	#define OSS_IOCTL ioctl
+	#define OSS_WRITE write
 #elif defined(HAVE_SOUNDCARD_H)
 	#include <soundcard.h>
+	#include <sys/ioctl.h>
 	#define COMPILE_AUDIOIO_OSS 1
+	#define OSS_OPEN open
+	#define OSS_CLOSE close
+	#define OSS_IOCTL ioctl
+	#define OSS_WRITE write
+#endif
+
+#ifdef HAVE_LIBOSS
+	#define LIBOSS_IOCTL OSS_IOCTL
+	#define LIBOSS_OPEN  OSS_OPEN
+	#define LIBOSS_CLOSE OSS_CLOSE
+	#define LIBOSS_WRITE OSS_WRITE
+	#define COMPILE_AUDIOIO_OSS 1
+	#include <liboss/soundcard.h>
+	#include <sys/ioctl.h>
 #endif
 
 /**
@@ -40,7 +60,6 @@
 #ifdef COMPILE_AUDIOIO_OSS
 
 #include <sys/types.h>
-#include <sys/ioctl.h>
 #include <sys/time.h>
 #include <sys/stat.h>
 
@@ -159,7 +178,7 @@
 		return false;
 	}
 
-	audio_fd = ::open(_deviceName.c_str(), mode, 0);
+	audio_fd = ::OSS_OPEN(_deviceName.c_str(), mode, 0);
 
 	if(audio_fd == -1)
 	{
@@ -174,7 +193,7 @@
 	 * check device capabilities
 	 */
 	int device_caps;
-	if(ioctl(audio_fd,SNDCTL_DSP_GETCAPS,&device_caps) == -1)
+	if(OSS_IOCTL(audio_fd,SNDCTL_DSP_GETCAPS,&device_caps) == -1)
             device_caps=0;
 
 	string caps = "";
@@ -189,7 +208,7 @@
 
 	int requestedFormat = (_format == 8)?AFMT_U8:AFMT_S16_LE;
 	int gotFormat = requestedFormat;
-	if (ioctl(audio_fd, SNDCTL_DSP_SETFMT, &gotFormat)==-1)  
+	if (OSS_IOCTL(audio_fd, SNDCTL_DSP_SETFMT, &gotFormat)==-1)  
 	{
 		_error = "SNDCTL_DSP_SETFMT failed - ";
 		_error += strerror(errno);
@@ -252,7 +271,7 @@
 
 	int requeststereo = stereo;
 
-	if (ioctl(audio_fd, SNDCTL_DSP_STEREO, &stereo)==-1)
+	if (OSS_IOCTL(audio_fd, SNDCTL_DSP_STEREO, &stereo)==-1)
 	{
 		_error = "SNDCTL_DSP_STEREO failed - ";
 		_error += strerror(errno);
@@ -271,7 +290,7 @@
 
 	int speed = _samplingRate;
 
-	if (ioctl(audio_fd, SNDCTL_DSP_SPEED, &speed)==-1)  
+	if (OSS_IOCTL(audio_fd, SNDCTL_DSP_SPEED, &speed)==-1)  
 	{
 		_error = "SNDCTL_DSP_SPEED failed - ";
 		_error += strerror(errno);
@@ -322,7 +341,7 @@
 	int size = _fragmentSize;
 	while(size > 1) { size /= 2; frag_arg++; }
 	frag_arg += (_fragmentCount << 16);
-	if(ioctl(audio_fd, SNDCTL_DSP_SETFRAGMENT, &frag_arg) == -1)
+	if(OSS_IOCTL(audio_fd, SNDCTL_DSP_SETFRAGMENT, &frag_arg) == -1)
 	{
 		char buffer[1024];
 		_error = "can't set requested fragments settings";
@@ -336,7 +355,7 @@
 	 * we asked for
 	 */
 	audio_buf_info info;
-	if(ioctl(audio_fd,SNDCTL_DSP_GETOSPACE, &info) == -1)
+	if(OSS_IOCTL(audio_fd,SNDCTL_DSP_GETOSPACE, &info) == -1)
 	{
 		_error = "can't retrieve fragment settings";
 		close();
@@ -393,7 +412,7 @@
 		if(param(direction) & 1) enable_bits |= PCM_ENABLE_INPUT;
 		if(param(direction) & 2) enable_bits |= PCM_ENABLE_OUTPUT;
 
-		if(ioctl(audio_fd,SNDCTL_DSP_SETTRIGGER, &enable_bits) == -1)
+		if(OSS_IOCTL(audio_fd,SNDCTL_DSP_SETTRIGGER, &enable_bits) == -1)
 		{
 			_error = "can't start sound i/o";
 
@@ -406,7 +425,7 @@
 
 void AudioIOOSS::close()
 {
-	::close(audio_fd);
+	::OSS_CLOSE(audio_fd);
 }
 
 void AudioIOOSS::setParam(AudioParam p, int& value)
@@ -431,12 +450,12 @@
 	switch(p)
 	{
 		case canRead:
-				ioctl(audio_fd, SNDCTL_DSP_GETISPACE, &info);
+				OSS_IOCTL(audio_fd, SNDCTL_DSP_GETISPACE, &info);
 				return info.bytes;
 			break;
 
 		case canWrite:
-				ioctl(audio_fd, SNDCTL_DSP_GETOSPACE, &info);
+				OSS_IOCTL(audio_fd, SNDCTL_DSP_GETOSPACE, &info);
 				return info.bytes;
 			break;
 
@@ -477,7 +496,7 @@
 
 	int result;
 	do {
-		result = ::write(audio_fd,buffer,size);
+		result = ::OSS_WRITE(audio_fd,buffer,size);
 	} while(result == -1 && errno == EINTR);
 
 	return result;
===================================================================
diff -u -u -r1.1.1.3 -r1.15
--- ./flow/Makefile.am	1 Oct 2002 01:48:02 -0000	1.1.1.3
+++ ./flow/Makefile.am	21 Nov 2002 21:28:34 -0000	1.15
@@ -1,6 +1,8 @@
+AM_CFLAGS = -DGSL_WANT_GLIB_WRAPPER -DGSL_WANT_ARTS_THREADS
+AM_CXXFLAGS = -DGSL_WANT_GLIB_WRAPPER -DGSL_WANT_ARTS_THREADS
 
 SUBDIRS = mcopclass gsl gslpp
-INCLUDES = -I$(top_srcdir)/mcop $(all_includes)
+INCLUDES = -I$(top_srcdir)/mcop $(all_includes) $(LIBOSS_CFLAGS)
 
 ####### Files
 
@@ -10,9 +12,9 @@
 libartsflow_idl_la_LDFLAGS = -no-undefined -version-info 1:0
 libartsflow_idl_la_LIBADD = $(top_builddir)/mcop/libmcop.la $(LIBPOSIX4)
 
-libartsflow_la_LIBADD = $(top_builddir)/mcop/libmcop.la libartsflow_idl.la $(top_builddir)/flow/gslpp/libgslpp.la $(LIBAUDIOFILE) $(LIBASOUND) $(LIBAUDIOIO) $(LIBOSSAUDIO) $(LIBAUDIONAS) $(LIBCSL) $(SGILIBAUDIO) -lm \
-  $(top_builddir)/flow/gsl/libgsl.la
-libartsflow_la_LDFLAGS = -no-undefined -version-info 1:0
+libartsflow_la_LIBADD = $(top_builddir)/mcop/libmcop.la libartsflow_idl.la $(top_builddir)/flow/gslpp/libgslpp.la $(LIBAUDIOFILE) $(LIBASOUND) $(LIBAUDIOIO) $(LIBOSSAUDIO) $(LIBOSS_LIBADD) $(LIBAUDIONAS) $(LIBCSL) $(SGILIBAUDIO) -lm \
+ $(top_builddir)/flow/gsl/libgsl.la $(LIB_POLL)
+libartsflow_la_LDFLAGS = -no-undefined -version-info 1:0 $(LIBOSS_LDFLAGS) $(FRAMEWORK_COREAUDIO)
 libartsflow_la_COMPILE_FIRST = artsflow.h
 libartsflow_la_SOURCES =  synth_play_impl.cc \
   synthschedule.cc gslschedule.cc audiosubsys.cc \
@@ -26,7 +28,7 @@
   audioionull.cc audioiolibaudioio.cc \
   audioiosun.cc audioioaix.cc audioionas.cc cpuinfo.cc \
   audioioossthreaded.cc audiotobytestream_impl.cc audioiosgi.cc \
-  audioiocsl.cc datahandle_impl.cc
+  audioiocsl.cc audioiocoreaudio.cc datahandle_impl.cc
 
 artsincludedir = $(includedir)/arts
 artsinclude_HEADERS = artsflow.h audiosubsys.h cache.h \
===================================================================
diff -u -u -r1.1.1.3 -r1.3
===================================================================
diff -u -u -r1.1.1.3 -r1.3
===================================================================
diff -u -u -r1.1.1.2 -r1.3
--- ./flow/gsl/gsldatahandle-mad.c	14 Aug 2002 13:21:15 -0000	1.1.1.2
+++ ./flow/gsl/gsldatahandle-mad.c	14 Aug 2002 13:24:52 -0000	1.3
@@ -31,6 +31,10 @@
 #include <string.h>
 #include <errno.h>
 
+#ifndef EBADFD
+#define EBADFD 77
+#endif
+
 #if	GSL_HAVE_LIBMAD
 #include <mad.h>
 
===================================================================
diff -u -u -r1.1.1.3 -r1.3
===================================================================
diff -u -u -r1.1.1.5 -r1.11
--- ./flow/gsl/Makefile.am	29 Oct 2002 02:31:19 -0000	1.1.1.5
+++ ./flow/gsl/Makefile.am	21 Nov 2002 21:28:34 -0000	1.11
@@ -1,4 +1,3 @@
-
 EXTRA_DIST =
 CLEANFILES =
 MAINTAINERCLEANFILES =
@@ -19,7 +18,7 @@
 
 noinst_PROGRAMS = $(GSL_NOINST_PROGS)
 
-GSL_progs_ldadd = libgsl.la
+GSL_progs_ldadd = libgsl.la $(LIB_POLL)
 GSL_cc_dummy = dummy.cc
 $(srcdir)/dummy.cc: gslconfig.h
 
===================================================================
diff -u -u -r1.1.1.3 -r1.6
===================================================================
diff -u -u -r1.1.1.2 -r1.5
--- ./libltdl/ltdl.c	10 Jul 2002 02:52:29 -0000	1.1.1.2
+++ ./libltdl/ltdl.c	26 Nov 2002 21:00:47 -0000	1.5
@@ -1544,11 +1544,14 @@
   /* try to open the old library first; if it was dlpreopened,
      we want the preopened version of it, even if a dlopenable
      module is available */
+/*	HACKALERT: Why? Mac OS/Darwin can't open static libs, it is
+	a waste to even try. Disabled for kde.	*/
+#if 0
   if (old_name && tryall_dlopen(handle, old_name) == 0)
     {
       return 0;
     }
-
+#endif
   /* try to open the dynamic library */
   if (dlname)
     {
===================================================================
diff -u -u -r1.1.1.2 -r1.3
--- ./libltdl/ltdl.m4	10 Jul 2002 02:52:29 -0000	1.1.1.2
+++ ./libltdl/ltdl.m4	10 Jul 2002 03:01:23 -0000	1.3
@@ -103,6 +103,9 @@
 	osf*)
 	  libltdl_cv_sys_dlopen_deplibs=yes
 	  ;;
+	darwin*)
+	  libltdl_cv_sys_dlopen_deplibs=yes
+	  ;;
 	esac
 ])
 if test "$libltdl_cv_sys_dlopen_deplibs" != yes; then
===================================================================
diff -u -u -r1.1.1.2 -r1.7
===================================================================
diff -u -u -r1.1.1.2 -r1.7
===================================================================
diff -u -u -r1.1.1.3 -r1.2
--- ./mcopidl/Makefile.am	14 Aug 2002 13:21:26 -0000	1.1.1.3
+++ ./mcopidl/Makefile.am	16 Sep 2002 14:31:34 -0000	1.2
@@ -1,4 +1,3 @@
-KDE_CXXFLAGS = $(NOOPT_CXXFLAGS) 
 INCLUDES = -I$(top_srcdir)/mcop $(all_includes)
 ####### Files
 
===================================================================
diff -u -u -r1.1.1.1 -r1.7
===================================================================
diff -u -u -r1.1.1.2 -r1.4
--- ./soundserver/artsd.cc	10 Jul 2002 02:52:33 -0000	1.1.1.2
+++ ./soundserver/artsd.cc	20 Oct 2002 19:11:01 -0000	1.4
@@ -35,6 +35,13 @@
 #include "debug.h"
 #include "artsversion.h"
 
+#ifdef HAVE_MACH_REALTIME_SCHED
+  #include <mach/mach.h>
+  #include <mach/thread_policy.h>
+  #include <sys/param.h>
+  #include <sys/sysctl.h>
+#endif
+
 using namespace std;
 using namespace Arts;
 
@@ -232,6 +239,29 @@
 	cerr << endl;
 }
 
+#ifdef HAVE_MACH_REALTIME_SCHED
+static void mach_get_realtime_priority()
+{
+	struct thread_time_constraint_policy ttcpolicy;
+	int bus_speed, mib [2] = { CTL_HW, HW_BUS_FREQ };
+	size_t len;   
+
+	len = sizeof (bus_speed);
+	sysctl (mib, 2, &bus_speed, &len, NULL, 0);
+
+	/* Is it enough? */
+	ttcpolicy.period = bus_speed / 120;
+	ttcpolicy.computation = bus_speed / 2400;
+	ttcpolicy.constraint = bus_speed / 1200;
+	ttcpolicy.preemptible = 1;
+
+	thread_policy_set (mach_thread_self (),
+			   THREAD_TIME_CONSTRAINT_POLICY,
+			   (int*)&ttcpolicy,
+			   THREAD_TIME_CONSTRAINT_POLICY_COUNT);
+}
+#endif
+
 int main(int argc, char **argv)
 {
 	handleArgs(argc, argv);
@@ -244,7 +274,9 @@
 
 	if(cfgPort)			 TCPServer::setPort(cfgPort);
 
+#ifndef ARTS_NO_ALARM
 	CPUUsage	cpuUsage;
+#endif
 	Dispatcher	dispatcher(0,cfgServers);
 
 	initSignals();
@@ -298,6 +330,10 @@
 		cleanUnusedReferences();
 		if(!publishReferences(server,audioManager,false)) return 1;
 	}
+
+#ifdef HAVE_MACH_REALTIME_SCHED
+	mach_get_realtime_priority();
+#endif
 
 	/* warn if there was a problem with artswrapper */
 	char *wrapper = getenv("STARTED_THROUGH_ARTSWRAPPER");
===================================================================
diff -u -u -r1.1.1.4 -r1.10
--- ./soundserver/Makefile.am	14 Aug 2002 13:21:26 -0000	1.1.1.4
+++ ./soundserver/Makefile.am	29 Nov 2002 18:19:36 -0000	1.10
@@ -38,13 +38,13 @@
 libartswavplayobject_la_SOURCES = wavplayobject_impl.cc
 libartswavplayobject_la_LIBADD  = $(top_builddir)/mcop/libmcop.la \
                                   libsoundserver_idl.la $(FLOWLIBS)
-libartswavplayobject_la_LDFLAGS = -no-undefined -module
+libartswavplayobject_la_LDFLAGS = -no-undefined -module -avoid-version
 libartswavplayobject_la_COMPILE_FIRST = soundserver.h ../flow/artsflow.h
 
 libartsgslplayobject_la_SOURCES = gslplayobject_impl.cc
 libartsgslplayobject_la_LIBADD  = $(top_builddir)/mcop/libmcop.la \
                                   libsoundserver_idl.la $(FLOWLIBS)
-libartsgslplayobject_la_LDFLAGS = -no-undefined -module
+libartsgslplayobject_la_LDFLAGS = -no-undefined -module -avoid-version
 libartsgslplayobject_la_COMPILE_FIRST = soundserver.h ../flow/artsflow.h
 
 ###### "real" programs
===================================================================
diff -u -u -r1.1.1.1 -r1.2
--- ./soundserver/soundserverv2_impl.cc	25 Jun 2002 01:45:59 -0000	1.1.1.1
+++ ./soundserver/soundserverv2_impl.cc	25 Jun 2002 01:46:40 -0000	1.2
@@ -374,9 +374,12 @@
 
 float SoundServerV2_impl::cpuUsage()
 {
+#ifndef ARTS_NO_ALARM
 	return CPUUsage::the()->usage() * 100.0;
+#else
+	return 5.0;
+#endif
 }
-
 
 #ifndef __SUNPRO_CC
 /* See bottom of simplesoundserver_impl.cc for the reason this is here.  */
===================================================================
diff -u -u -r1.1.1.2 -r1.7
