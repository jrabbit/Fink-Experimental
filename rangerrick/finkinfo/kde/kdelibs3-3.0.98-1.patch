--- admin/acinclude.m4.in	29 Oct 2002 02:27:18 -0000	1.1.1.5
+++ admin/acinclude.m4.in	10 Nov 2002 14:46:56 -0000
@@ -704,13 +704,10 @@
      AC_CHECK_LIB(ipc, shmat, X_EXTRA_LIBS="$X_EXTRA_LIBS -lipc"))
    
    # darwin needs this to initialize the environment
-   AC_CHECK_HEADERS(crt_externs.h)
+   AC_CHECK_HEADERS([crt_externs.h sys/types.h])
    AC_CHECK_FUNC(_NSGetEnviron, [AC_DEFINE(HAVE_NSGETENVIRON, 1, [Define if your system needs _NSGetEnviron to set up the environment])])
  
-   # more headers that need to be explicitly included on darwin
-   AC_CHECK_HEADERS(sys/types.h stdint.h)
-
-   # darwin requires a poll emulation library
+   # darwin requires a poll.h emulation library
    AC_CHECK_LIB(poll, poll, LIB_POLL="-lpoll")
 
    # CoreAudio framework
@@ -719,11 +716,36 @@
      FRAMEWORK_COREAUDIO="-framework CoreAudio"
    ])
 
+   # CoreServices framework
+   AC_CHECK_HEADER(CoreServices/CoreServices.h, [
+     AC_DEFINE(HAVE_CORESERVICES, 1, [Define if you have the CoreServices API])
+     FRAMEWORK_CORESERVICES="-framework CoreServices"
+   ])
+
+   # Solaris 2.6 and others need -lresolv for res_init
+   AC_CHECK_FUNCS(res_init, , [
+     kde_libs_safe="$LIBS"
+     LIBS="$LIBS $X_EXTRA_LIBS -lresolv"
+     AC_TRY_LINK(
+[
+#include <resolv.h>
+],
+[ 
+res_init(); 
+],
+        LIBRESOLV="-lresolv"
+        X_EXTRA_LIBS="$X_EXTRA_LIBS $LIBRESOLV"
+        AC_DEFINE(HAVE_RES_INIT, 1, [Define if you have the res_init function])
+     )
+     LIBS=$kde_libs_safe
+   ])
+
    AC_CHECK_RES_INIT
-   AC_SUBST(LIB_POLL)
    AC_SUBST(FRAMEWORK_COREAUDIO)
    LIBSOCKET="$X_EXTRA_LIBS"
    AC_SUBST(LIBSOCKET)
+   AC_SUBST(FRAMEWORK_CORESERVICES)
+   AC_SUBST(LIB_POLL)
    AC_SUBST(LIBRESOLV)
    AC_SUBST(X_EXTRA_LIBS)
    AC_CHECK_LIB(ucb, killpg, [LIBUCB="-lucb"]) dnl for Solaris2.4
@@ -932,7 +954,7 @@
 kde_ldflags_safe="$LDFLAGS"
 kde_libs_safe="$LIBS"
 
-LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS"
+LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS"
 LIBS="-lXext -lX11 $LIBSOCKET"
 
 AC_TRY_LINK([
@@ -974,9 +996,9 @@
 kde_save_LDFLAGS="$LDFLAGS"
 kde_save_CFLAGS="$CFLAGS"
 kde_save_LIBS="$LIBS"
-LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS"
+LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS"
 CFLAGS="$CFLAGS -I$x_includes"
-LIBS="-lXinerama -lXext"
+LIBS="-lXinerama -lXext -lX11"
 
 if test "x$no_xinerama" = "xno"; then
 
@@ -1844,7 +1866,7 @@
  kde_cxxflags_safe="$CXXFLAGS"
 
  LIBS="-lkde-qt-addon $LIBQT $LIBS"
- CXXFLAGS="$CXXFLAGS -I$prefix/include -I$prefix/include/kde $all_includes"
+ CXXFLAGS="$CXXFLAGS -isystem $prefix/include -isystem $prefix/include $all_includes"
  LDFLAGS="$LDFLAGS $all_libraries $USER_LDFLAGS"
 
  AC_TRY_LINK([
@@ -1907,15 +1929,29 @@
    AC_REQUIRE([K_PATH_X])
 
 if test $kde_qtver = 3; then
+   AC_SUBST(LIB_ARTSKDE, "-lartskde")
+   AC_SUBST(LIB_DCOP, "-lDCOP")
+   AC_SUBST(LIB_KAB, "-lkab")
+   AC_SUBST(LIB_KABC, "-lkabc")
    AC_SUBST(LIB_KDECORE, "-lkdecore")
+   AC_SUBST(LIB_KDED, "@PREFIX@/lib/kded.la")
+   AC_SUBST(LIB_KDEFX, "-lkdefx")
+   AC_SUBST(LIB_KDEPRINT, "-lkdeprint")
+   AC_SUBST(LIB_KDESASL, "-lkdesasl")
+   AC_SUBST(LIB_KDESU, "-lkdesu")
    AC_SUBST(LIB_KDEUI, "-lkdeui")
-   AC_SUBST(LIB_KIO, "-lkio")
-   AC_SUBST(LIB_SMB, "-lsmb")
-   AC_SUBST(LIB_KAB, "-lkab")
    AC_SUBST(LIB_KHTML, "-lkhtml")
-   AC_SUBST(LIB_KSPELL, "-lkspell")
+   AC_SUBST(LIB_KIO, "-lkio")
    AC_SUBST(LIB_KPARTS, "-lkparts")
-   AC_SUBST(LIB_KDEPRINT, "-lkdeprint")
+   AC_SUBST(LIB_KJAVA, "-lkjava")
+   AC_SUBST(LIB_KJS, "-lkjs")
+   AC_SUBST(LIB_KMID, "-lkmid")
+   AC_SUBST(LIB_KSCRIPT, "-lkscript")
+   AC_SUBST(LIB_KSPELL, "-lkspell")
+   AC_SUBST(LIB_KTEXTEDITOR, "-lktexteditor")
+   AC_SUBST(LIB_SHELLSCRIPT, "-lshellscript")
+   AC_SUBST(LIB_SMB, "-lsmb")
+   AC_SUBST(LIB_VCARD, "-lvcard")
 # these are for backward compatibility
    AC_SUBST(LIB_KSYCOCA, "-lkio")
    AC_SUBST(LIB_KFILE, "-lkio")
@@ -2646,10 +2682,10 @@
       if test $kde_use_debug_code = "full"; then
         CFLAGS="-g3 $CFLAGS"
       else
-        CFLAGS="-g -O2 $CFLAGS"
+        CFLAGS="-g -O $CFLAGS"
       fi
     else
-      CFLAGS="-O2 $CFLAGS"
+      CFLAGS="-Os -frename-registers -mmultiple -mcpu=750 -mtune=750 $CFLAGS"
     fi
   fi
 
@@ -2679,7 +2715,7 @@
         if test "$kde_use_debug_code" = "full"; then
           CXXFLAGS="-g3 $CXXFLAGS"
         else
-          CXXFLAGS="-g -O2 $CXXFLAGS"
+          CXXFLAGS="-g -O $CXXFLAGS"
         fi
       fi
       KDE_CHECK_COMPILER_FLAG(fno-builtin,[CXXFLAGS="-fno-builtin $CXXFLAGS"])
@@ -2691,7 +2727,7 @@
       if test "$CXX" = "KCC"; then
         CXXFLAGS="+K3 $CXXFLAGS"
       else
-        CXXFLAGS="-O2 $CXXFLAGS"
+        CXXFLAGS="-Os -frename-registers -mmultiple -mcpu=750 -mtune=750 $CXXFLAGS"
       fi  
     fi
   fi
@@ -3188,9 +3224,9 @@
     ac_save_ldflags="$LDFLAGS"
     ac_save_cflags="$CFLAGS"
     if test "x$kde_use_qt_emb" != "xyes"; then
-      LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm -lX11 -lXext $LIBZ $LIBSOCKET"
+      LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm -lX11 -lXext $LIBZ $LIBSOCKET"
     else
-      LDFLAGS="$LDFLAGS $X_LDFLAGS $USER_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm $LIBZ $LIBSOCKET"
+      LDFLAGS="$LDFLAGS $USER_LDFLAGS $X_LDFLAGS $LDFLAGS $XPM_LDFLAGS $all_libraries -lXpm $LIBZ $LIBSOCKET"
     fi
     CFLAGS="$CFLAGS $X_INCLUDES $USER_INCLUDES"
     test -n "$XPM_INCLUDE" && CFLAGS="-I$XPM_INCLUDE $CFLAGS"
@@ -4625,6 +4661,83 @@
 	done
 ])
 
+AC_DEFUN(KDE_CHECK_LDAP,
+[
+  AC_MSG_CHECKING([for LDAP])
+
+  if test -n "$1"; then
+    ldap_extra_dirs="$1"
+  fi
+
+  ldap_incdirs="$ldap_extra_dirs/include /usr/include /usr/local/include/ $kde_extra_includes"
+  AC_FIND_FILE(ldap.h, $ldap_incdirs, ldap_incdir)
+  if test ! -r $ldap_incdir/ldap.h; then
+    ldap_incdir=no
+  fi
+
+  ldap_libdirs="$ldap_extra_dirs/lib /usr/lib /usr/local /usr/lib $kde_extra_libs"
+  for ext in la so sl dylib a; do
+    AC_FIND_FILE(libldap.$ext, $ldap_libdirs, ldap_libdir_test)
+    if test -r $ldap_libdir_test/libldap.$ext; then
+      ldap_libdir=$ldap_libdir_test
+      break
+    fi
+  done
+  if test -z "$ldap_libdir"; then
+    ldap_libdir=no
+  fi
+  if test x$ldap_libdir != xno && test x$ldap_incdir != xno; then
+    LDAP_INCS=-I$ldap_incdir
+    LDAP_LIBS=-L$ldap_libdir
+    # on MacOSX, we link against the framework instead of
+    # directly to the libraries, for forward-compatibility
+    if test -d "/System/Library/Frameworks/LDAP.framework"; then
+      LIBLDAP="-framework LDAP"
+    else
+      LIBLDAP="-lldap -llber -lresolv"
+    fi
+    if test "$USE_RPATH" = "yes"; then
+      LDAP_RPATH="-R $LDAPLIBDIR/lib"
+    fi
+
+    kde_safe_LIBS="$LIBS"
+    kde_safe_CFLAGS="$CFLAGS"
+    LIBS="$LIBS $all_libraries $LDAP_LIBS $LIBLDAP $KERBEROS_LIBS $X_EXTRA_LIBS"
+    CFLAGS="$CFLAGS $all_includes $LDAP_INCS $KERBEROS_INCS"
+    AC_LANG_SAVE
+    AC_LANG_C
+    AC_TRY_LINK(
+      [#include <lber.h>
+#include <ldap.h>
+#if LDAP_VENDOR_VERSION < 20000
+#error OpenLDAP version too old, please upgrade to version 2 or higher
+#endif
+],
+      [ LDAP *ldap; ],
+      [ ldap_old=no ],
+      [ ldap_old=yes ]
+    )
+    LIBS="$kde_safe_LIBS"
+    CFLAGS="$kde_safe_CFLAGS"
+
+    if test x$ldap_old = xno; then
+      AC_SUBST(LDAP_INCS)
+      AC_SUBST(LDAP_LIBS)
+      AC_SUBST(LDAP_RPATH)
+      AC_SUBST(LIBLDAP)
+      AC_DEFINE_UNQUOTED(HAVE_LIBLDAP,1,[Define if you have LDAP libraries])
+    else
+      LDAP_INCS=
+      LDAP_LIBS=
+      LDAP_RPATH=
+      LIBLDAP=
+    fi
+    AC_MSG_RESULT([libraries $ldap_libdir, headers $ldap_incdir])
+  else
+    AC_MSG_RESULT([not found])
+  fi
+])
+
 dnl KDE_CHEC_JAVA_DIR(onlyjre)
 AC_DEFUN(KDE_CHECK_JAVA_DIR,
 [
@@ -4659,6 +4772,7 @@
       KDE_JAVA_PREFIX(/usr/lib/IBMJava2*)
       KDE_JAVA_PREFIX(/usr/lib/IBMJava*)
       KDE_JAVA_PREFIX(/opt/java*)
+      KDE_JAVA_PREFIX(/Library/Java/Home)
     
       kde_cv_path="NONE"
       kde_save_IFS=$IFS
@@ -4710,10 +4824,20 @@
 dnl At this point kde_java_bindir and kde_java_includedir are either set or "no"
 if test "x$kde_java_bindir" != "xno"; then
 
+  case $host_os in
+    darwin*)
+      dnl Look for libjvm.dylib
+      kde_java_libjvmdir=`find $kde_java_bindir/.. -name libjvm.dylib | sed 's,libjvm.dylib,,'|head -n 1`
+      kd_java_libhpidir=''
+      dnl Darwin doesn't have libhpi
+      ;;
+    *)
   dnl Look for libjvm.so
   kde_java_libjvmdir=`find $kde_java_bindir/.. -name libjvm.so | sed 's,libjvm.so,,'|head -n 1`
   dnl Look for libhpi.so and avoid green threads
-  kde_java_libhpidir=`find $kde_java_bindir/.. -name libhpi.so | grep -v green | sed 's,libhpi.so,,' | head -n 1`
+  kde_java_libhpidir=`find $kde_java_bindir/.. -name libhpi.so | grep -v green | sed 's,libhpi.so,,' | tail -n 1`
+      ;;
+  esac
 
   dnl Now check everything's fine under there
   dnl the include dir is our flag for having the JDK
@@ -4742,17 +4866,29 @@
     JAVAC=
     jni_includes=
   fi
-
+  case $host_os in
+    darwin*)
+      if test ! -r "$kde_java_libjvmdir/libjvm.dylib"; then
+        AC_MSG_ERROR([libjvm.dylib not found under $kde_java_libjvmdir. Use --without-java.])
+      fi
+      dnl Darwin doesn't have libhpi, but it's not fatal
+      LIB_JVM="-framework JavaVM"
+      LIB_HPI=""
+      ;;
+    *)
   if test ! -r "$kde_java_libjvmdir/libjvm.so"; then
      AC_MSG_ERROR([libjvm.so not found under $kde_java_libjvmdir. Use --without-java.])
   fi 
+      LIB_JVM="-L$kde_java_libjvmdir -ljvm"
+      if test ! -r "$kde_java_libhpidir/libhpi.so"; then
+        AC_MSG_ERROR([libhpi.so not found under $kde_java_libhpidir. Use --without-java.])
+      fi
+      LIB_HPI="-L$kde_java_libhpidir -lhpi"
+      ;;
+  esac
 
   if test ! -x "$kde_java_bindir/java"; then
       AC_MSG_ERROR([java not found under $kde_java_bindir. javac was found though! Use --with-java or --without-java.])
-  fi
-
-  if test ! -r "$kde_java_libhpidir/libhpi.so"; then
-    AC_MSG_ERROR([libhpi.so not found under $kde_java_libhpidir. Use --without-java.])
   fi
 
   if test -n "$jni_includes"; then
--- admin/detect-autoconf.sh	29 Oct 2002 02:27:20 -0000	1.1.1.2
+++ admin/detect-autoconf.sh	29 Oct 2002 02:29:54 -0000	1.3
@@ -42,12 +42,12 @@
 checkAutomakeAclocal ()
 {
   if test -z "$UNSERMAKE"; then
-    if test -x "`$WHICH automake-1.5`" ; then
-      AUTOMAKE="`$WHICH automake-1.5`"
-      ACLOCAL="`$WHICH aclocal-1.5`"
-    elif test -x "`$WHICH automake-1.6`" ; then
+    if test -x "`$WHICH automake-1.6`" ; then
       AUTOMAKE="`$WHICH automake-1.6`"
       ACLOCAL="`$WHICH aclocal-1.6`"
+    elif test -x "`$WHICH automake-1.5`" ; then
+      AUTOMAKE="`$WHICH automake-1.5`"
+      ACLOCAL="`$WHICH aclocal-1.5`"
     fi
   else
      AUTOMAKE="$UNSERMAKE"
--- admin/libtool.m4.in	14 Aug 2002 13:18:45 -0000	1.1.1.3
+++ admin/libtool.m4.in	10 Nov 2002 14:46:57 -0000
@@ -609,6 +609,12 @@
     lt_cv_sys_max_cmd_len=-1;
     ;;
 
+  darwin*)
+    # this should be enough... the length test freaks out some versions
+    # of OSX's `expr`
+    lt_cv_sys_max_cmd_len=16384;
+    ;;
+
   *)
     # If test is not a shell built-in, we'll probably end up computing a
     # maximum length that is only half of the actual maximum length, but
@@ -1132,7 +1138,7 @@
 darwin* | rhapsody*)
   dynamic_linker="$host_os dyld"
   version_type=darwin
-  need_lib_prefix=no
+  need_lib_prefix=yes
   need_version=no
   # FIXME: Relying on posixy $() will cause problems for
   #        cross-compilation, but unfortunately the echo tests do not
@@ -1901,16 +1907,7 @@
   ;;
 
 darwin* | rhapsody*)
-  lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
-  case "$host_os" in
-  rhapsody* | darwin1.[[012]])
-    lt_cv_file_magic_test_file=`/System/Library/Frameworks/System.framework/System`
-    ;;
-  *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
-    ;;
-  esac
+  lt_cv_deplibs_check_method='pass_all'
   ;;
 
 freebsd*)
@@ -2560,6 +2557,11 @@
 	;;
     esac
     ;;
+  darwin*)
+    shared_flag='-dynamiclib'
+    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC -dynamiclib -install_name $rpath/$soname $predep_objects ${lib}-master.o $deplibs $postdep_objects $compiler_flags -o $lib'
+    output_verbose_link_cmd='$CC -dynamiclib $CFLAGS -v conftest.$objext 2>&1 | egrep "\-L"'
+    ;;
   dgux*)
     case $cc_basename in
       ec++)
@@ -4750,7 +4752,9 @@
 	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-undefined suppress'
 	;;
       *) # Darwin 1.3 on
-	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-flat_namespace -undefined suppress'
+	#_LT_AC_TAGVAR(allow_undefined_flag, $1)='-flat_namespace -undefined suppress'
+        # testing with twolevel namespaces
+	_LT_AC_TAGVAR(allow_undefined_flag, $1)='-multiply_defined suppress'
 	;;
       esac
 
@@ -4758,7 +4762,7 @@
       #        cross-compilation, but unfortunately the echo tests do not
       #        yet detect zsh echo's removal of \ escapes.  Also zsh mangles
       #	       `"' quotes if we put them in here... so don't!
-      _LT_AC_TAGVAR(archive_cmds, $1)='$CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs && $CC $(test .$module = .yes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $linker_flags $(test x$module != xyes && echo -install_name $rpath/$soname $verstring)'
       # We need to add '_' to the symbols in $export_symbols first
       #_LT_AC_TAGVAR(archive_expsym_cmds, $1)="$_LT_AC_TAGVAR(archive_cmds, $1)"' && strip -s $export_symbols'
       _LT_AC_TAGVAR(hardcode_direct, $1)=yes
--- admin/ltmain.sh	10 Jul 2002 02:47:39 -0000	1.1.1.2
+++ admin/ltmain.sh	13 Jul 2002 04:33:25 -0000	1.4
@@ -3321,7 +3321,23 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+          if test "x$verstring" = "x0.0"; then
+                tmp_verstring=
+          else
+                tmp_verstring="$verstring"
+          fi
+ 	  save_deplibs="$deplibs"
+ 	  for conv in $convenience; do
+            tmp_deplibs=
+            for test_deplib in $deplibs; do
+              if test "$test_deplib" != "$conv"; then
+                tmp_deplibs="$tmp_deplibs $test_deplib"
+              fi
+            done
+            deplibs="$tmp_deplibs"
+ 	  done
 	  eval cmds=\"$archive_cmds\"
+ 	  deplibs="$save_deplibs"
 	fi
 
 	if len=`expr "X$cmds" : ".*"` &&
@@ -3419,7 +3435,12 @@
 	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	    eval cmds=\"$archive_expsym_cmds\"
 	  else
-	    eval cmds=\"$archive_cmds\"
+            save_deplibs="$deplibs"
+            for conv in $convenience; do
+              deplibs="${deplibs%$conv*} ${deplibs#*$conv}"
+            done
+            eval cmds=\"$archive_cmds\"
+            deplibs="$save_deplibs"
 	  fi
 
 	  # Append the command to remove the reloadable object files
@@ -3632,6 +3653,14 @@
 	compile_deplibs=`$echo "X $compile_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
 	finalize_deplibs=`$echo "X $finalize_deplibs" | $Xsed -e 's/ -lc / -framework System /'`
 	;;
+      esac
+
+      case $host in
+      *darwin*)
+        # Don't allow lazy linking, it breaks C++ global constructors
+        compile_command="$compile_command ${wl}-bind_at_load"
+        finalize_command="$finalize_command ${wl}-bind_at_load"
+        ;;
       esac
 
       compile_command="$compile_command $compile_deplibs"
--- configure.in.in	29 Oct 2002 02:36:25 -0000	1.1.1.3
+++ configure.in.in	29 Oct 2002 02:58:39 -0000	1.4
@@ -191,6 +191,18 @@
 AC_SUBST(LIB_KDEUI, '$(top_builddir)/kdeui/libkdeui.la')
 AC_SUBST(LIB_KIO, '$(top_builddir)/kio/libkio.la')
 AC_SUBST(LIB_KPARTS, '$(top_builddir)/kparts/libkparts.la')
+AC_SUBST(LIB_KFORMULA, '$(top_builddir)/kformula/libkformula.la')
+AC_SUBST(LIB_KSYCOCA, '$(top_builddir)/kio/libkio.la')
+AC_SUBST(LIB_KFILE, '$(top_builddir)/kio/libkio.la')
+AC_SUBST(LIB_KAB, '$(top_builddir)/kab/libkab.la')
+AC_SUBST(LIB_KHTML, '$(top_builddir)/khtml/libkhtml.la')
+AC_SUBST(LIB_DCOP, '$(top_builddir)/dcop/libDCOP.la')
+AC_SUBST(LIB_KDESU, '$(top_builddir)/kdesu/libkdesu.la')
+AC_SUBST(LIB_KDEFX, '$(top_builddir)/kdefx/libkdefx.la')
+AC_SUBST(LIB_KSPELL, '$(top_builddir)/kspell/libkspell.la')
+AC_SUBST(LIB_KDEPRINT, '$(top_builddir)/kdeprint/libkdeprint.la')
+AC_SUBST(LIB_KDED, '$(top_builddir)/kded/kded.la')
+AC_SUBST(LIB_KDEFAKES, '$(top_builddir)/kdecore/libkdefakes.la')
 
 AC_SUBST(EXTRA_SUBDIRS)
 
--- ./arts/knotify/Makefile.am	10 Jul 2002 04:41:09 -0000	1.1.1.2
+++ ./arts/knotify/Makefile.am	15 Jul 2002 23:02:47 -0000	1.6
@@ -7,7 +7,7 @@
 lib_LTLIBRARIES = knotify.la
 
 knotify_la_SOURCES	= knotify.cpp knotify.skel
-knotify_la_LIBADD	= -lsoundserver_idl -lqtmcop $(LIB_KDEUI)
+knotify_la_LIBADD	= -lsoundserver_idl -lqtmcop $(LIB_KDEUI) $(LIB_KDECORE) -lartsflow -lkmedia2_idl -lartsflow_idl -lmcop
 knotify_la_LDFLAGS = $(all_libraries) -module -avoid-version
 knotify_la_METASOURCES = AUTO
 
--- ./kabc/Makefile.am	29 Oct 2002 02:36:40 -0000	1.1.1.5
+++ ./kabc/Makefile.am	29 Oct 2002 02:58:39 -0000	1.5
@@ -5,7 +5,7 @@
 
 lib_LTLIBRARIES   = libkabc.la
 libkabc_la_LDFLAGS = $(all_libraries) -no-undefined -version-info 2:0:1 -module
-libkabc_la_LIBADD  = vcard/libvcard.la ../kdeui/libkdeui.la ../kio/libkio.la
+libkabc_la_LIBADD  = $(top_builddir)/kabc/vcard/libvcard.la $(top_builddir)/kdeui/libkdeui.la $(top_builddir)/kio/libkio.la
 
 libkabc_la_SOURCES = \
   address.cpp addressbook.cpp addressee.cpp addresseedialog.cpp agent.cpp \
--- ./kabc/plugins/ldap/configure.in.in	10 Jul 2002 04:42:27 -0000	1.1.1.1
+++ ./kabc/plugins/ldap/configure.in.in	20 Oct 2002 19:12:01 -0000	1.5
@@ -1,97 +1,13 @@
-AC_MSG_CHECKING(whether to compile LDAP support)
+AC_MSG_CHECKING([whether to compile LDAP support])
 AC_ARG_WITH(ldap,
-[  --without-ldap=PATH     Set path for LDAP files [default=check]],
-[ case "$withval" in
-  yes)
-    with_ldap=CHECK
-    ;;
-  esac ],
-[ with_ldap=CHECK ]
-)dnl
+  [  --without-ldap=PATH     Set path for LDAP files [default=check]],
+  [ ac_use_ldap="$withval" ],
+  [ ac_use_ldap=no ]
+)
+AC_MSG_RESULT($ac_use_ldap)
 
-if test "x$with_ldap" = "xCHECK" ; then
-  with_ldap=NOTFOUND
-  search_incs="$kde_includes /usr/include /usr/local/include"
-  AC_FIND_FILE(ldap.h, $search_incs, ldap_incdir)
-  if test -r $ldap_incdir/ldap.h ; then
-    test "x$ldap_incdir" != "x/usr/include" && LDAP_INCS="-I$ldap_incdir"
-    with_ldap=FOUND
-  fi
-  if test $with_ldap = FOUND ; then
-    with_ldap=NOTFOUND
-    for ext in la so sl a ; do
-      AC_FIND_FILE(libldap.$ext, $kde_libraries /usr/lib /usr/local/lib,
-        ldap_libdir)
-      if test -r $ldap_libdir/libldap.$ext ; then
-        if test "x$ldap_libdir" != "x/usr/lib" ; then
-          LDAP_LIBS="-L$ldap_libdir "
-          test "$USE_RPATH" = yes && LDAP_RPATH="-R $ldap_libdir"
-        fi
-        LDAP_LIBS="${LDAP_LIBS}-lldap -llber -lresolv"
-        with_ldap=FOUND
-        break
-      fi
-    done
-  fi
+if test "x$ac_use_ldap" != "no" ; then
+  KDE_CHECK_LDAP($ac_use_ldap)
 fi
 
-case "$with_ldap" in
-no) AC_MSG_RESULT(no) ;;
-NOTFOUND) AC_MSG_RESULT(searched but not found) ;;
-*)
-  if test "x$with_ldap" = "xFOUND" ; then
-    msg="incs=$ldap_incdir libs=$ldap_libdir"
-  else
-    msg="$with_ldap"
-    LDAP_ROOT="$with_ldap"
-    if test "x$LDAP_ROOT" != "x/usr" ; then
-      LDAP_INCS="-I${LDAP_ROOT}/include"
-      LDAP_LIBS="-L${LDAP_ROOT}/lib "
-      if test "$USE_RPATH" = "yes" ; then
-        LDAP_RPATH="-R ${LDAP_ROOT}/lib"
-      fi
-    fi
-    LDAP_LIBS="${LDAP_LIBS}-lldap -llber -lresolv"
-  fi
-  kde_safe_LIBS="$LIBS"
-  kde_safe_CFLAGS="$CFLAGS"
-  LIBS="$LIBS $all_libraries $LDAP_LIBS $KERBEROS_LIBS $X_EXTRA_LIBS"
-  CFLAGS="$CFLAGS $all_includes $LDAP_INCS $KERBEROS_INCS"
-  AC_LANG_SAVE
-  AC_LANG_C
-  AC_TRY_LINK(dnl
-  [
-  #include <lber.h>
-  #include <ldap.h>
-  #if LDAP_VENDOR_VERSION < 20000
-  #error OpenLDAP version too old, please upgrade to version 2 or higher
-  #endif
-  ],
-  [
-  LDAP *ldap;
-  ],
-  , with_ldap=no
-  )
-  AC_LANG_RESTORE
-  CFLAGS=$kde_safe_CFLAGS
-  LIBS=$kde_safe_LIBS
-  if test "$with_ldap" = "no" ; then
-    LDAP_INCS=
-    LDAP_LIBS=
-    LDAP_RPATH=
-    LDAP_SUBDIR=
-    AC_MSG_RESULT(no (but first try gave $msg))
-  else
-    AC_DEFINE_UNQUOTED(HAVE_LIBLDAP, 1, [Define if you have LDAP libraries])
-    LDAP_SUBDIR="ldap"
-    AC_MSG_RESULT($msg)
-  fi
-  ;;
-esac
-
-AC_SUBST(LDAP_INCS)
-AC_SUBST(LDAP_LIBS)
-AC_SUBST(LDAP_RPATH)
-
-AM_CONDITIONAL(include_LDAP, test -n "$LDAP_SUBDIR")
-
+AM_CONDITIONAL(include_LDAP, test -n "$LIBLDAP")
--- ./kabc/plugins/ldap/Makefile.am	14 Aug 2002 14:00:22 -0000	1.1.1.2
+++ ./kabc/plugins/ldap/Makefile.am	21 Oct 2002 01:34:23 -0000	1.2
@@ -8,7 +8,7 @@
 kabc_ldap_la_SOURCES = resourceldap.cpp resourceldapconfig.cpp
 
 kabc_ldap_la_LDFLAGS	= $(all_libraries) -module $(KDE_PLUGIN) $(LDAP_LIBS)
-kabc_ldap_la_LIBADD	= ../../libkabc.la ../../../kdeui/libkdeui.la
+kabc_ldap_la_LIBADD	= ../../libkabc.la ../../../kdeui/libkdeui.la $(LIBLDAP)
 
 # let automoc handle all of the meta source files (moc)
 METASOURCES = AUTO
--- ./kabc/vcard/Makefile.am	10 Jul 2002 04:42:34 -0000	1.1.1.2
+++ ./kabc/vcard/Makefile.am	10 Jul 2002 05:12:43 -0000	1.3
@@ -6,7 +6,7 @@
 lib_LTLIBRARIES = libvcard.la
 
 libvcard_la_SOURCES = vCard-all.cpp
-libvcard_la_LIBADD = $(LIB_KDECORE)
+libvcard_la_LIBADD = $(all_libraries) $(LIB_QT) $(LIB_KDECORE)
 
 check_PROGRAMS = testwrite testread
 
--- ./kdecore/fakes.c	29 Oct 2002 02:36:51 -0000	1.1.1.4
+++ ./kdecore/fakes.c	29 Oct 2002 14:19:18 -0000	1.2
@@ -19,6 +19,7 @@
    Boston, MA 02111-1307, USA.
 */
 
+#include <sys/types.h>
 #include <config.h>
 
 #ifndef HAVE_SETENV
@@ -137,7 +138,7 @@
 #include <errno.h>
 #include <stdio.h>
 
-int getdomainname(char *name, size_t len)
+int getdomainname(char *name, unsigned int len)
 {
         struct utsname uts;
         struct hostent *hent;
--- ./kdecore/kglobalsettings.cpp	29 Oct 2002 02:36:56 -0000	1.1.1.3
+++ ./kdecore/kglobalsettings.cpp	29 Oct 2002 02:58:40 -0000	1.4
@@ -455,7 +455,7 @@
         *s_desktopPath += "/";
 
     // Trash Path
-    *s_trashPath = *s_desktopPath + i18n("Trash") + "/";
+    *s_trashPath = *s_desktopPath + "." + i18n("Trash") + "/";
     *s_trashPath = config->readEntry( "Trash" , *s_trashPath);
     if ( (*s_trashPath)[0] != '/' )
       s_trashPath->prepend( QDir::homeDirPath() + "/" );
--- ./kdecore/kiconloader.cpp	5 Nov 2002 00:03:29 -0000	1.1.1.7
+++ ./kdecore/kiconloader.cpp	5 Nov 2002 00:16:44 -0000	1.3
@@ -386,7 +386,7 @@
     return icon;
 }
 
-inline QString KIconLoader::unknownIconPath( int size ) const
+QString KIconLoader::unknownIconPath( int size ) const
 {
     static const QString &str_unknown = KGlobal::staticQString("unknown");
 
--- ./kdecore/klibloader.cpp	10 Jul 2002 04:43:40 -0000	1.1.1.2
+++ ./kdecore/klibloader.cpp	10 Nov 2002 14:52:24 -0000
@@ -366,13 +366,14 @@
     else
     {
       libfile = instance->dirs()->findResource( "module", libname );
-      if ( libfile.isEmpty() )
-      {
+      if ( libfile.isEmpty() && libname.left(3) != "lib" ) {
+        libfile = instance->dirs()->findResource( "module", "lib" + libname );
+      }
+      if ( libfile.isEmpty() ) {
         libfile = instance->dirs()->findResource( "lib", libname );
-#ifndef NDEBUG
-        if ( !libfile.isEmpty() && libname.left(3) == "lib" ) // don't warn for kdeinit modules
-          kdDebug(150) << "library " << libname << " not found under 'module' but under 'lib'" << endl;
-#endif
+        if ( libfile.isEmpty() && libname.left(3) != "lib" ) {
+          libfile = instance->dirs()->findResource( "lib", "lib" + libname );
+        }
       }
       if ( libfile.isEmpty() )
       {
--- ./kdecore/Makefile.am	29 Oct 2002 02:37:02 -0000	1.1.1.5
+++ ./kdecore/Makefile.am	10 Nov 2002 14:52:25 -0000
@@ -54,7 +54,7 @@
 	ksortablevaluelist.h kdebugclasses.h kclipboard.h
 
 libkdefakes_la_SOURCES = fakes.c vsnprintf.c
-libkdefakes_la_LDFLAGS = -version-info 5:0:1
+libkdefakes_la_LDFLAGS = -version-info 5:0:1 -no-undefined
 libkdefakes_la_LIBADD  = $(LIBSOCKET) ../kdefx/libkdefx.la
 
 noinst_HEADERS = kaccelaction.h kaccelbase.h kaccelprivate.h kckey.h \
--- ./kdeprint/Makefile.am	1 Oct 2002 03:05:31 -0000	1.1.1.4
+++ ./kdeprint/Makefile.am	1 Oct 2002 03:59:10 -0000	1.5
@@ -10,7 +10,7 @@
 kde_module_LTLIBRARIES = kded_kdeprintd.la
 
 kded_kdeprintd_la_SOURCES = kdeprintd.skel kdeprintd.cpp kprintprocess.cpp
-kded_kdeprintd_la_LIBADD = $(LIB_KIO)
+kded_kdeprintd_la_LIBADD = $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_KIO) $(LIB_KFILE) $(LIB_KDED)
 kded_kdeprintd_la_LDFLAGS = $(all_libraries) -module -avoid-version
 #kded_kdeprintd_la_METASOURCES = AUTO
 
--- ./kdeui/kedittoolbar.cpp	29 Oct 2002 02:37:31 -0000	1.1.1.5
+++ ./kdeui/kedittoolbar.cpp	29 Oct 2002 02:58:40 -0000	1.6
@@ -141,13 +141,13 @@
    */
   ToolbarList findToolbars(QDomElement elem)
   {
-    static const QString &tagToolbar = KGlobal::staticQString( "ToolBar" );
-    static const QString &attrNoEdit = KGlobal::staticQString( "noEdit" );
+    // static const QString &tagToolbar = KGlobal::staticQString( "ToolBar" );
+    // static const QString &attrNoEdit = KGlobal::staticQString( "noEdit" );
     ToolbarList list;
 
     for( ; !elem.isNull(); elem = elem.nextSibling().toElement() )
     {
-      if (elem.tagName() == tagToolbar && elem.attribute( attrNoEdit ) != "true" )
+      if (elem.tagName() == KGlobal::staticQString( "ToolBar" ) && elem.attribute( KGlobal::staticQString( "noEdit" ) ) != "true" )
         list.append(elem);
 
       QDomElement child = elem.firstChild().toElement();
--- ./kdeui/kxmlguifactory.cpp	1 Oct 2002 03:06:00 -0000	1.1.1.3
+++ ./kdeui/kxmlguifactory.cpp	1 Oct 2002 03:59:10 -0000	1.5
@@ -49,14 +49,10 @@
 public:
     KXMLGUIFactoryPrivate()
     {
-        static const QString &defaultMergingName = KGlobal::staticQString( "<default>" );
-        static const QString &actionList = KGlobal::staticQString( "actionlist" );
-        static const QString &name = KGlobal::staticQString( "name" );
-
         m_rootNode = new ContainerNode( 0L, QString::null, 0L );
-        m_defaultMergingName = defaultMergingName;
-        tagActionList = actionList;
-        attrName = name;
+        m_defaultMergingName = KGlobal::staticQString( "<default>" );
+        tagActionList = KGlobal::staticQString( "actionlist" );
+        attrName = KGlobal::staticQString( "name" );
     }
     ~KXMLGUIFactoryPrivate()
     {
--- ./kimgio/Makefile.am	1 Oct 2002 03:06:44 -0000	1.1.1.4
+++ ./kimgio/Makefile.am	1 Oct 2002 03:59:13 -0000	1.5
@@ -11,23 +11,27 @@
 
 kimg_tiff_la_SOURCES = tiffr.cpp
 kimg_tiff_la_LDFLAGS = -module $(USER_LDFLAGS) $(KIMGIO_PLUGIN)
-kimg_tiff_la_LIBADD = $(LIBTIFF) 
+kimg_tiff_la_LIBADD = $(all_libraries) $(LIBTIFF) $(LIB_QT)
 
 #kimg_g3_la_SOURCES = g3r.cpp
 #kimg_g3_la_LDFLAGS = -module $(USER_LDFLAGS) $(KIMGIO_PLUGIN)
-#kimg_g3_la_LIBADD = $(LIBTIFF)   
+#kimg_g3_la_LIBADD = $(all_libraries) $(LIBTIFF) $(LIB_QT)
 
 kimg_xview_la_SOURCES = xview.cpp
 kimg_xview_la_LDFLAGS = -module $(USER_LDFLAGS) $(KIMGIO_PLUGIN)
+kimg_xview_la_LIBADD = $(all_libraries) $(LIB_QT)
 
 kimg_krl_la_SOURCES = krl.cpp
 kimg_krl_la_LDFLAGS = -module $(USER_LDFLAGS) $(KIMGIO_PLUGIN)
+kimg_krl_la_LIBADD = $(all_libraries) $(LIB_QT)
 
 kimg_eps_la_SOURCES = eps.cpp
 kimg_eps_la_LDFLAGS = -module $(USER_LDFLAGS) $(KIMGIO_PLUGIN)
+kimg_eps_la_LIBADD =  $(all_libraries) $(LIB_KDECORE) $(LIB_QT)
 
 kimg_ico_la_SOURCES = ico.cpp
 kimg_ico_la_LDFLAGS = -module $(USER_LDFLAGS) $(KIMGIO_PLUGIN)
+kimg_ico_la_LIBADD = $(all_libraries) $(LIB_QT)
 
 noinst_HEADERS= xview.h eps.h tiffr.h krl.h g3r.h ico.h
 
--- ./kinit/kinit.cpp	14 Aug 2002 14:03:15 -0000	1.1.1.4
+++ ./kinit/kinit.cpp	14 Aug 2002 14:17:57 -0000	1.5
@@ -1424,6 +1424,7 @@
    kdeinit_setproctitle("Starting up...");
    kdeinit_library_path();
    unsetenv("LD_BIND_NOW");
+   unsetenv("DYLD_BIND_AT_LAUNCH");
    KApplication::loadedByKdeinit = true;
 
    d.maxname = strlen(argv[0]);
--- ./kinit/setproctitle.cpp	10 Jul 2002 04:49:13 -0000	1.1.1.2
+++ ./kinit/setproctitle.cpp	10 Jul 2002 05:12:45 -0000	1.3
@@ -73,6 +73,12 @@
 # define SPT_TYPE	SPT_REUSEARGV
 #endif
 
+#if defined(HAVE_NSGETENVIRON) && defined(HAVE_CRT_EXTERNS_H)
+#include <sys/time.h>
+#include <crt_externs.h>
+#define environ (*_NSGetEnviron())
+#endif
+
 #if SPT_TYPE != SPT_NONE && SPT_TYPE != SPT_BUILTIN
 
 # if SPT_TYPE == SPT_PSTAT
--- ./kio/Makefile.am	1 Oct 2002 03:06:46 -0000	1.1.1.4
+++ ./kio/Makefile.am	1 Oct 2002 03:59:13 -0000	1.5
@@ -20,7 +20,7 @@
 
 INCLUDES=  -I$(srcdir)/.. $(all_includes) $(SSL_INCLUDES)
 
-SUBDIRS = kssl kio bookmarks kfile . kpasswdserver misc pics tests
+SUBDIRS = kssl kio bookmarks kfile . kded kpasswdserver misc pics tests
 
 lib_LTLIBRARIES = libkio.la
 
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ./kio/kded/Makefile	25 Jun 2002 02:49:09 -0000	1.1
@@ -0,0 +1,7 @@
+# That's right!  OSX's linker is so anal, I had to totally
+# mess with the link order to get things to build.  Scary, scary.
+
+all:
+	pushd ../../kded; $(MAKE); popd
+
+install:
--- ./kio/kio/kurlcompletion.cpp	1 Oct 2002 03:06:59 -0000	1.1.1.3
+++ ./kio/kio/kurlcompletion.cpp	1 Oct 2002 03:59:13 -0000	1.4
@@ -740,6 +740,11 @@
 // Environment variables
 //
 
+#if defined(HAVE_NSGETENVIRON) && defined(HAVE_CRT_EXTERNS_H)   
+#include <crt_externs.h>                                 
+#define environ (*_NSGetEnviron()) 
+#endif
+
 extern char **environ; // Array of environment variables
 
 bool KURLCompletion::envCompletion(const MyURL &url, QString *match)
--- ./kio/kio/kurlcompletion.h	10 Jul 2002 04:49:47 -0000	1.1.1.2
+++ ./kio/kio/kurlcompletion.h	10 Jul 2002 05:12:46 -0000	1.3
@@ -23,6 +23,10 @@
 #ifndef KURLCOMPLETION_H
 #define KURLCOMPLETION_H
 
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
 #include <kcompletion.h>
 #include <kio/jobclasses.h>
 #include <qstring.h>
--- ./kio/kpasswdserver/Makefile.am	1 Oct 2002 03:07:02 -0000	1.1.1.2
+++ ./kio/kpasswdserver/Makefile.am	1 Oct 2002 03:59:14 -0000	1.3
@@ -10,4 +10,4 @@
 kded_kpasswdserver_la_SOURCES = kpasswdserver.cpp kpasswdserver.skel 
 kded_kpasswdserver_la_METASOURCES = AUTO
 kded_kpasswdserver_la_LDFLAGS = $(all_libraries) -module -avoid-version
-kded_kpasswdserver_la_LIBADD = $(LIB_KIO)
+kded_kpasswdserver_la_LIBADD = $(LIB_KIO) $(LIB_KDED)
--- ./kio/kssl/kopenssl.cc	29 Oct 2002 02:38:36 -0000	1.1.1.4
+++ ./kio/kssl/kopenssl.cc	29 Oct 2002 02:58:41 -0000	1.5
@@ -251,6 +251,9 @@
             #ifdef _AIX
             << "/opt/freeware/lib/"
 	    #endif
+	    #ifdef __APPLE__
+	    << "@PREFIX@/lib/"
+	    #endif
 	    << "/usr/lib/"
 	    << "/usr/ssl/lib/"
             << "/usr/local/lib/"
@@ -269,6 +272,7 @@
 	     #elif defined(__APPLE__)
 	     << "libssl.dylib"
 	     << "libssl.0.9.dylib"
+	     << "libssl.0.9.6.dylib"
              #else
              << "libssl.so"
 	     << "libssl.so.0"
@@ -286,6 +290,7 @@
 	     #elif defined(__APPLE__)
 	     << "libcrypto.dylib"
 	     << "libcrypto.0.9.dylib"
+	     << "libcrypto.0.9.6.dylib"
 	     #else
              << "libcrypto.so"
 	     << "libcrypto.so.0"
--- ./kio/misc/kpac/dhcp.h	10 Jul 2002 04:50:03 -0000	1.1.1.2
+++ ./kio/misc/kpac/dhcp.h	10 Jul 2002 05:12:46 -0000	1.3
@@ -29,6 +29,10 @@
 
 #define DHCP_OPT_LEN 312
 
+#ifndef uint8_t
+#include <stdint.h>
+#endif
+
 struct dhcp_msg
 {
 #define DHCP_BOOTREQUEST 1
--- ./kio/misc/kpac/kpac_dhcp_helper.c	10 Jul 2002 04:50:04 -0000	1.1.1.2
+++ ./kio/misc/kpac/kpac_dhcp_helper.c	29 Oct 2002 14:19:18 -0000	1.2
@@ -19,6 +19,7 @@
 /* $Id$ */
 
 #include <config.h>
+#include <sys/types.h>
 #include <grp.h>
 
 #include <unistd.h>
--- ./kio/misc/kssld/Makefile.am	10 Jul 2002 04:50:08 -0000	1.1.1.2
+++ ./kio/misc/kssld/Makefile.am	10 Jul 2002 05:12:46 -0000	1.3
@@ -21,7 +21,7 @@
 kde_module_LTLIBRARIES = kded_kssld.la
 
 kded_kssld_la_LDFLAGS = $(all_libraries) -module -avoid-version
-kded_kssld_la_LIBADD = $(LIB_KIO)
+kded_kssld_la_LIBADD = $(LIB_KIO) $(LIB_KSYCOCA) $(LIB_KDED)
 kded_kssld_la_SOURCES = kssld.cpp kssld.skel
 
 METASOURCES = AUTO
--- ./kioslave/http/http.cc	29 Oct 2002 02:38:43 -0000	1.1.1.6
+++ ./kioslave/http/http.cc	29 Oct 2002 02:58:41 -0000	1.5
@@ -33,9 +33,9 @@
 #include <sys/socket.h>
 #include <netinet/tcp.h>
 
+#include <unistd.h>
 /*
 #include <netdb.h>
-#include <unistd.h>
 #include <sys/time.h>
 #include <sys/wait.h>
 #include <netinet/in.h>
--- ./kioslave/http/kcookiejar/Makefile.am	1 Oct 2002 03:07:20 -0000	1.1.1.3
+++ ./kioslave/http/kcookiejar/Makefile.am	1 Oct 2002 03:59:15 -0000	1.3
@@ -17,7 +17,7 @@
 kded_kcookiejar_la_SOURCES = kcookiejar.cpp kcookieserver.cpp \
 			kcookieserver.skel kcookiewin.cpp 
 kded_kcookiejar_la_LDFLAGS = $(all_libraries) -module -avoid-version
-kded_kcookiejar_la_LIBADD = $(LIB_KIO)
+kded_kcookiejar_la_LIBADD = $(LIB_KIO) $(LIB_KDED)
 
 kcookiejar_SOURCES = dummy.cpp
 kcookiejar_LDADD = kcookiejar.la
--- ./kstyles/keramik/keramik.cpp	5 Nov 2002 00:05:43 -0000	1.1.1.5
+++ ./kstyles/keramik/keramik.cpp	5 Nov 2002 00:16:44 -0000	1.4
@@ -30,7 +30,7 @@
    Boston, MA 02111-1307, USA.
 */
 
-// $Id$
+// $Id$
 
 #include <qbitmap.h>
 #include <qcombobox.h>
--- ./kstyles/keramik/keramik.h	29 Oct 2002 02:39:01 -0000	1.1.1.4
+++ ./kstyles/keramik/keramik.h	29 Oct 2002 02:58:42 -0000	1.3
@@ -27,7 +27,7 @@
    Boston, MA 02111-1307, USA.
 */
 
-// $Id$
+// $Id$
 
 #ifndef __keramik_h__
 #define __keramik_h__
--- ./kstyles/keramik/pixmaploader.cpp	5 Nov 2002 00:05:43 -0000	1.1.1.5
+++ ./kstyles/keramik/pixmaploader.cpp	5 Nov 2002 00:16:44 -0000	1.4
@@ -18,7 +18,7 @@
    Boston, MA 02111-1307, USA.
 */
 
-// $Id$
+// $Id$
 
 #include <qapplication.h>
 #include <qbitmap.h>
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ ./libkscreensaver/configure.in.in	7 Oct 2002 01:28:30 -0000	1.1
@@ -0,0 +1 @@
+DO_NOT_COMPILE="$DO_NOT_COMPILE libkscreensaver"
--- ./libkscreensaver/Makefile.am	14 Aug 2002 14:04:21 -0000	1.1.1.3
+++ ./libkscreensaver/Makefile.am	14 Aug 2002 14:17:58 -0000	1.4
@@ -1,7 +1,7 @@
 lib_LTLIBRARIES = libkscreensaver.la
 libkscreensaver_la_SOURCES = main.cpp kscreensaver.cpp
-libkscreensaver_la_LIBADD  = $(LIB_KIO)
-libkscreensaver_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -version-info 5:0:1
+libkscreensaver_la_LIBADD  = $(LIB_KIO) $(LIB_KSYCOCA) $(LIB_X11) $(LIB_KDECORE) $(LIB_QT)
+libkscreensaver_la_LDFLAGS = $(all_libraries) $(KDE_RPATH) -version-info 5:0:1 $(QT_LDFLAGS) -static
 
 include_HEADERS = kscreensaver.h kscreensaver_vroot.h
 
--- ./libltdl/ltdl.c	10 Jul 2002 04:51:21 -0000	1.1.1.2
+++ ./libltdl/ltdl.c	7 Nov 2002 20:54:56 -0000	1.5
@@ -63,6 +63,11 @@
 #include <sys/ldr.h>
 #endif /* _AIX */
 
+#define HAVE_SYS_PARAM_H  1 /*XXX*/
+#if HAVE_SYS_PARAM_H
+#  include <sys/param.h>
+#endif
+
 #include "ltdl.h"
 
 /* Bah.  We don't want inline.  Needs autoconf check, which we don't want.  */
@@ -1010,6 +1015,97 @@
 
 
 
+/* --- NSModule INTERFACE LOADER --- */
+
+/* dynamic linking for Darwin */
+
+#if defined(__APPLE__) && defined(NeXTBSD)
+#define __Darwin__  /* XXX - better way to do this?? */
+#endif
+
+#ifdef __Darwin__
+
+#include <mach-o/dyld.h>
+
+static lt_module
+sys_darwindl_open (loader_data, filename)
+     lt_user_data loader_data;
+     const char *filename;
+{
+  lt_module         module = NULL;
+  NSObjectFileImage image;
+
+  if (NSCreateObjectFileImageFromFile(filename, &image) != NSObjectFileImageSuccess)
+    {
+      MUTEX_SETERROR (LT_DLSTRERROR (CANNOT_OPEN));
+    }
+  else
+    {
+      unsigned long options = NSLINKMODULE_OPTION_BINDNOW |
+                              NSLINKMODULE_OPTION_PRIVATE |
+                              NSLINKMODULE_OPTION_RETURN_ON_ERROR;
+
+      module = (lt_module)NSLinkModule(image, filename, options);
+      NSDestroyObjectFileImage(image);
+
+      if (!module)
+        {
+          MUTEX_SETERROR (LT_DLSTRERROR (CANNOT_OPEN));
+        }
+    }
+
+  return module;
+}
+
+static int
+sys_darwindl_close (loader_data, module)
+     lt_user_data loader_data;
+     lt_module module;
+{
+  int errors = 0;
+#ifdef __ppc__
+  unsigned long options = NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES;
+#else
+  unsigned long options = NSUNLINKMODULE_OPTION_NONE;
+#endif
+
+  if (!NSUnLinkModule((NSModule)module, options))
+    {
+      MUTEX_SETERROR (LT_DLSTRERROR (CANNOT_CLOSE));
+      ++errors;
+    }
+
+  return errors;
+}
+
+static lt_ptr
+sys_darwindl_sym (loader_data, module, symbol_name)
+     lt_user_data loader_data;
+     lt_module module;
+     const char *symbol_name;
+{
+  lt_ptr   address = NULL;
+  NSSymbol symbol;
+  
+  symbol = NSLookupSymbolInModule((NSModule)module, symbol_name);
+
+  if (!symbol)
+    {
+      MUTEX_SETERROR (LT_DLSTRERROR (SYMBOL_NOT_FOUND));
+    }
+  else
+    {
+      address = NSAddressOfSymbol(symbol);
+    }
+
+  return address;
+}
+
+static struct lt_user_dlloader sys_darwindl =
+  { "_", sys_darwindl_open, sys_darwindl_close, sys_darwindl_sym, 0, 0 };
+
+#endif /* __Darwin__ */
+
 
 /* --- DLD_LINK() INTERFACE LOADER --- */
 
@@ -1315,6 +1411,9 @@
 #ifdef __BEOS__
       errors += lt_dlloader_add (lt_dlloader_next (0), &sys_bedl, "dlopen");
 #endif
+#ifdef __Darwin__
+      errors += lt_dlloader_add (lt_dlloader_next (0), &sys_darwindl, "NSModule");
+#endif
 #if HAVE_DLD
       errors += lt_dlloader_add (lt_dlloader_next (0), &sys_dld, "dld");
 #endif
@@ -1544,11 +1643,14 @@
   /* try to open the old library first; if it was dlpreopened,
      we want the preopened version of it, even if a dlopenable
      module is available */
+/*	HACKALERT: Why? Mac OS/Darwin can't open static libs, it is
+	a waste to even try. Disabled for kde.	*/
+#if 0
   if (old_name && tryall_dlopen(handle, old_name) == 0)
     {
       return 0;
     }
-
+#endif
   /* try to open the dynamic library */
   if (dlname)
     {
@@ -1567,6 +1669,28 @@
 	    }
 
 	  sprintf (filename, "%s/%s", libdir, dlname);
+	  error = (tryall_dlopen (handle, filename) != 0);
+	  LT_DLFREE (filename);
+
+	  if (!error)
+	    {
+	      return 0;
+	    }
+	}
+
+      /* then look for the same module, but with "lib" prepended */
+      if (installed && libdir)
+	{
+	  len	    = strlen (libdir) + 4 + strlen (dlname);
+	  filename  = LT_DLMALLOC (char, 1+ len);
+
+	  if (!filename)
+	    {
+	      MUTEX_SETERROR (LT_DLSTRERROR (NO_MEMORY));
+	      return 1;
+	    }
+
+	  sprintf (filename, "%s/%s%s", libdir, "lib", dlname);
 	  error = (tryall_dlopen (handle, filename) != 0);
 	  LT_DLFREE (filename);
 
--- ./libltdl/ltdl.m4	10 Jul 2002 04:51:21 -0000	1.1.1.2
+++ ./libltdl/ltdl.m4	10 Jul 2002 05:12:47 -0000	1.3
@@ -103,6 +103,9 @@
 	osf*)
 	  libltdl_cv_sys_dlopen_deplibs=yes
 	  ;;
+	darwin*)
+	  libltdl_cv_sys_dlopen_deplibs=yes
+	  ;;
 	esac
 ])
 if test "$libltdl_cv_sys_dlopen_deplibs" != yes; then
