diff -uNbr qt-x11-free-3.1.0/config.tests/unix/nis.test qt-x11-free-3.1.0-new/config.tests/unix/nis.test
--- qt-x11-free-3.1.0/config.tests/unix/nis.test	Wed Sep 11 17:19:05 2002
+++ qt-x11-free-3.1.0-new/config.tests/unix/nis.test	Wed Nov 13 09:07:07 2002
@@ -30,7 +30,7 @@
     # on Solaris it's -lnsl, it's not specified because X11 already links it
     LIBS=nsl
 else
-    LIBS=`sed -n -e '/^QMAKE_LIBS_NIS[	 ]*=/ { s/[^=]*=[	 ]*//; s/-l/ /g; p; }' $XCONFIG`
+    LIBS=`sed -n -e '/^QMAKE_LIBS_NIS[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-l/ /g; p; }' $XCONFIG`
 fi
 LIBDIRS="$IN_LIBDIRS /usr/shlib /usr/lib /lib"
 if [ -z "$LIBS" ]; then
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/opengl.test qt-x11-free-3.1.0-new/config.tests/x11/opengl.test
--- qt-x11-free-3.1.0/config.tests/x11/opengl.test	Wed Sep 11 17:37:35 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/opengl.test	Wed Nov 13 09:07:07 2002
@@ -27,9 +27,9 @@
 [ "$VERBOSE" = "yes" ] && echo "OpenGL auto-detection... ($*)"
 
 # check for lib
-LIBS=`sed -n -e '/^QMAKE_LIBS_OPENGL[	 ]*=/ { s/[^=]*=[	 ]*//; s/-l/ /g; p; }' $XCONFIG`
-GLDIRS=`sed -n -e '/^QMAKE_LIBDIR_OPENGL[	 ]*=/ { s/[^=]*=[	 ]*//; p; }' $XCONFIG`
-XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[	 ]*=/ { s/[^=]*=[	 ]*//; p; }' $XCONFIG`
+LIBS=`sed -n -e '/^QMAKE_LIBS_OPENGL[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-l/ /g; p; }' $XCONFIG`
+GLDIRS=`sed -n -e '/^QMAKE_LIBDIR_OPENGL[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; p; }' $XCONFIG`
+XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; p; }' $XCONFIG`
 LIBDIRS="$IN_LIBDIRS $GLDIRS $XDIRS /usr/shlib /usr/lib /lib"
 for L in $LIBS; do
     FOUND_LIB=
@@ -71,8 +71,8 @@
 # check for headers
 if [ "$OPENGL" = "yes" ]; then
     INCS="GL/gl.h GL/glu.h"
-    GLDIRS=`sed -n -e '/^QMAKE_INCDIR_OPENGL[	 ]*=/ { s/[^=]*=[	 ]*//; p; }' $XCONFIG`
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; p; }' $XCONFIG`
+    GLDIRS=`sed -n -e '/^QMAKE_INCDIR_OPENGL[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $GLDIRS $XDIRS /usr/include /include"
 
     for I in $INCS; do
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/sm.test qt-x11-free-3.1.0-new/config.tests/x11/sm.test
--- qt-x11-free-3.1.0/config.tests/x11/sm.test	Wed Sep 11 17:31:45 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/sm.test	Wed Nov 13 09:07:07 2002
@@ -23,7 +23,7 @@
 # check for headers
 if [ "$SM" = "yes" ]; then
     INC="X11/SM/SM.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/xfreetype.test qt-x11-free-3.1.0-new/config.tests/x11/xfreetype.test
--- qt-x11-free-3.1.0/config.tests/x11/xfreetype.test	Thu Oct 10 11:23:19 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/xfreetype.test	Wed Nov 13 09:07:07 2002
@@ -33,7 +33,7 @@
 rm -f $OUTDIR/config.tests/x11/xft2
 
 # check for the XftFreeType library
-XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-L/ /g; p; }' $XCONFIG`
+XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-L/ /g; p; }' $XCONFIG`
 LIBDIRS="$IN_LIBDIRS $XDIRS /usr/shlib /usr/lib /lib"
 F=
 for LIBDIR in $LIBDIRS; do
@@ -53,7 +53,7 @@
 XFT_H=
 if [ "$XFREETYPE" = "yes" ]; then
     INC="X11/Xft/Xft.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
@@ -87,7 +87,7 @@
 
 if [ "$XFREETYPE" = "yes" ] && [ -z "$XFTCOMPAT_H" ]; then
     INC="X11/Xft/XftFreetype.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
@@ -103,7 +103,6 @@
     fi
 fi
 
-
 # check for XftNameUnparse in X11/Xft/Xft.h
 XFTNAMEUNPARSE=yes
 if [ "$XFREETYPE" = "yes" ] && [ -f "$XFTCOMPAT_H" ]; then
@@ -115,12 +114,26 @@
     fi
 fi
 
+# check for fontconfig headers
+#if [ "$XFREETYPE" = "yes" ]; then
+#    INC="fontconfig/fontconfig.h"
+#    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
+#    INCDIRS="$IN_INCDIRS $XDIRS $LDIRS /usr/include /include"
+#    for INCDIR in $INCDIRS; do
+#        if [ -f $INCDIR/$INC ]; then
+#            echo "yes" > $OUTDIR/config.tests/x11/xft2
+#            [ "$VERBOSE" = "yes" ] && echo "  Found $INC in $INCDIR"
+#            break
+#        fi
+#    done
+#fi
+
 # check for freetype2 headers
 FREETYPE2_INCDIR=
 if [ "$XFREETYPE" = "yes" ]; then
     INC="freetype2/freetype/freetype.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
-    LDIRS=`sed -n -e '/^QMAKE_INCDIR[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
+    LDIRS=`sed -n -e '/^QMAKE_INCDIR[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS $LDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/xinerama.test qt-x11-free-3.1.0-new/config.tests/x11/xinerama.test
--- qt-x11-free-3.1.0/config.tests/x11/xinerama.test	Wed Sep 11 17:32:05 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/xinerama.test	Wed Nov 13 09:07:07 2002
@@ -26,7 +26,7 @@
 [ "$VERBOSE" = "yes" ] && echo "Xinerama auto-detection... ($*)"
 
 # check for lib
-XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-L/ /g; p; }' $XCONFIG`
+XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-L/ /g; p; }' $XCONFIG`
 LIBDIRS="$IN_LIBDIRS $XDIRS /usr/shlib /usr/lib /lib"
 F=
 for LIBDIR in $LIBDIRS; do
@@ -47,7 +47,7 @@
 # check for headers
 if [ "$XINERAMA" = "yes" ]; then
     INC="X11/extensions/Xinerama.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/xinput.test qt-x11-free-3.1.0-new/config.tests/x11/xinput.test
--- qt-x11-free-3.1.0/config.tests/x11/xinput.test	Wed Sep 11 17:32:13 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/xinput.test	Wed Nov 13 09:07:07 2002
@@ -26,7 +26,7 @@
 [ "$VERBOSE" = "yes" ] && echo "XInput auto-detection... ($*)"
 
 # check for the XInput library
-XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-L/ /g; p; }' $XCONFIG`
+XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-L/ /g; p; }' $XCONFIG`
 LIBDIRS="$IN_LIBDIRS $XDIRS /usr/shlib /usr/lib /lib"
 F=
 for LIBDIR in $LIBDIRS; do
@@ -45,7 +45,7 @@
 # check for XInput.h and the IRIX wacom.h
 if [ "$XINPUT" = "yes" ]; then
     INCS="X11/extensions/XInput.h wacom.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
 
     for I in $INCS; do
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/xkb.test qt-x11-free-3.1.0-new/config.tests/x11/xkb.test
--- qt-x11-free-3.1.0/config.tests/x11/xkb.test	Wed Sep 11 17:32:26 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/xkb.test	Wed Nov 13 09:07:07 2002
@@ -54,7 +54,7 @@
 XKBLIB_H=
 if [ "$XKB" = "yes" ]; then
     INC="X11/XKBlib.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
diff -uNbr qt-x11-free-3.1.0/config.tests/x11/xrender.test qt-x11-free-3.1.0-new/config.tests/x11/xrender.test
--- qt-x11-free-3.1.0/config.tests/x11/xrender.test	Wed Sep 11 17:32:32 2002
+++ qt-x11-free-3.1.0-new/config.tests/x11/xrender.test	Wed Nov 13 09:07:07 2002
@@ -26,7 +26,7 @@
 [ "$VERBOSE" = "yes" ] && echo "XRender auto-detection... ($*)"
 
 # check for lib
-XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-L/ /g; p; }' $XCONFIG`
+XDIRS=`sed -n -e '/^QMAKE_LIBDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-L/ /g; p; }' $XCONFIG`
 LIBDIRS="$IN_LIBDIRS $XDIRS /usr/shlib /usr/lib /lib"
 F=
 for LIBDIR in $LIBDIRS; do
@@ -45,7 +45,7 @@
 # check for headers
 if [ "$XRENDER" = "yes" ]; then
     INC="X11/extensions/Xrender.h"
-    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[	]*=/ { s/[^=]*=[	 ]*//; s/-I/ /g; p; }' $XCONFIG`
+    XDIRS=`sed -n -e '/^QMAKE_INCDIR_X11[[:space:]]*=/ { s/[^=]*=[[:space:]]*//; s/-I/ /g; p; }' $XCONFIG`
     INCDIRS="$IN_INCDIRS $XDIRS /usr/include /include"
     F=
     for INCDIR in $INCDIRS; do
diff -uNbr qt-x11-free-3.1.0/include/private/qapplication_p.h qt-x11-free-3.1.0-new/include/private/qapplication_p.h
--- qt-x11-free-3.1.0/include/private/qapplication_p.h	Thu Nov  7 08:07:37 2002
+++ qt-x11-free-3.1.0-new/include/private/qapplication_p.h	Wed Nov 13 09:07:07 2002
@@ -73,7 +73,7 @@
 
 #if defined (Q_OS_WIN32) || defined (Q_OS_CYGWIN)
 extern Qt::WindowsVersion qt_winver;
-#elif defined (Q_OS_MAC)
+#elif defined (Q_OS_MACX)
 extern Qt::MacintoshVersion qt_macver;
 #endif
 
diff -uNbr qt-x11-free-3.1.0/include/private/qsettings_p.h qt-x11-free-3.1.0-new/include/private/qsettings_p.h
--- qt-x11-free-3.1.0/include/private/qsettings_p.h	Thu Nov  7 08:07:21 2002
+++ qt-x11-free-3.1.0-new/include/private/qsettings_p.h	Wed Nov 13 09:07:07 2002
@@ -94,7 +94,7 @@
     bool modified :1;
     bool globalScope :1;
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     // system dependent implementations to use the 
     // system specific setting database (ie. registry on Windows)
 
diff -uNbr qt-x11-free-3.1.0/include/qapplication.h qt-x11-free-3.1.0-new/include/qapplication.h
--- qt-x11-free-3.1.0/include/qapplication.h	Thu Nov  7 08:07:33 2002
+++ qt-x11-free-3.1.0-new/include/qapplication.h	Wed Nov 13 09:07:07 2002
@@ -244,7 +244,7 @@
 
 #if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
     static WindowsVersion winVersion();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_OS_MACX)
     static MacintoshVersion macVersion();
 #endif
 #if defined(Q_WS_WIN)
diff -uNbr qt-x11-free-3.1.0/include/qglobal.h qt-x11-free-3.1.0-new/include/qglobal.h
--- qt-x11-free-3.1.0/include/qglobal.h	Thu Nov  7 08:07:22 2002
+++ qt-x11-free-3.1.0-new/include/qglobal.h	Wed Nov 13 09:07:07 2002
@@ -78,8 +78,9 @@
      UNIX	- Any UNIX BSD/SYSV system
 */
 
-#if defined(__APPLE__) && defined(__GNUC__)
-#  define Q_OS_MACX
+#if defined(__APPLE__) && defined(__GNUC__) && !defined(Q_OS_DARWIN)
+#  define Q_OS_DARWIN
+#  define Q_OS_FREEBSD
 #elif defined(__MACOSX__)
 #  define Q_OS_MACX
 #elif defined(macintosh)
@@ -149,11 +150,11 @@
 #elif defined(__svr4__)     /* UnixWare 7 + GCC, Open UNIX 8 + GCC */
 #  define Q_OS_UNIXWARE
 #  define Q_OS_UNIXWARE7
-#else
+#elsif !defined(Q_OS_DARWIN)
 #  error "Qt has not been ported to this OS - talk to qt-bugs@trolltech.com"
 #endif
 
-#if defined(Q_OS_MAC9) || defined(Q_OS_MACX)
+#if defined(Q_OS_MAC9) || defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
 #  define Q_OS_MAC
 #endif
 
@@ -665,7 +666,7 @@
 #define Q_UINT64		Q_ULONG
 #endif
 
-#if defined(Q_OS_MACX) && !defined(QT_LARGEFILE_SUPPORT)
+#if (defined(Q_OS_MACX) || defined(Q_OS_DARWIN)) && !defined(QT_LARGEFILE_SUPPORT)
 #  define QT_LARGEFILE_SUPPORT 64
 #endif
 #if defined(QT_LARGEFILE_SUPPORT)
@@ -874,7 +875,7 @@
 #  define QT_DEBUG				// display debug messages
 #  if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
 #    if !defined(NO_DEBUG) && !defined(DEBUG)
-#      if !defined(Q_OS_MACX)			// clash with MacOS X headers
+#      if !defined(Q_OS_MACX) && !defined(Q_OS_DARWIN)	// clash with MacOS X headers
 #        define DEBUG
 #      endif
 #    endif
diff -uNbr qt-x11-free-3.1.0/include/qglobal.h~ qt-x11-free-3.1.0-new/include/qglobal.h~
--- qt-x11-free-3.1.0/include/qglobal.h~	Wed Dec 31 19:00:00 1969
+++ qt-x11-free-3.1.0-new/include/qglobal.h~	Wed Nov 13 09:07:07 2002
@@ -0,0 +1,1045 @@
+/****************************************************************************
+** $Id$
+**
+** Global type declarations and definitions
+**
+** Created : 920529
+**
+** Copyright (C) 1992-2002 Trolltech AS.  All rights reserved.
+**
+** This file is part of the tools module of the Qt GUI Toolkit.
+**
+** This file may be distributed under the terms of the Q Public License
+** as defined by Trolltech AS of Norway and appearing in the file
+** LICENSE.QPL included in the packaging of this file.
+**
+** This file may be distributed and/or modified under the terms of the
+** GNU General Public License version 2 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.
+**
+** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
+** licenses may use this file in accordance with the Qt Commercial License
+** Agreement provided with the Software.
+**
+** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
+** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+**
+** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
+**   information about Qt Commercial License Agreements.
+** See http://www.trolltech.com/qpl/ for QPL licensing information.
+** See http://www.trolltech.com/gpl/ for GPL licensing information.
+**
+** Contact info@trolltech.com if any conditions of this licensing are
+** not clear to you.
+**
+**********************************************************************/
+
+#ifndef QGLOBAL_H
+#define QGLOBAL_H
+
+#define QT_VERSION_STR   "3.1.0"
+/*
+   QT_VERSION is (major << 16) + (minor << 8) + patch.
+ */
+#define QT_VERSION 0x030100
+
+/*
+   The operating system, must be one of: (Q_OS_x)
+
+     MACX	- Mac OS X
+     MAC9	- Mac OS 9
+     MSDOS	- MS-DOS and Windows
+     OS2	- OS/2
+     OS2EMX	- XFree86 on OS/2 (not PM)
+     WIN32	- Win32 (Windows 95/98/ME and Windows NT/2000/XP)
+     CYGWIN	- Cygwin
+     SOLARIS	- Sun Solaris
+     HPUX	- HP-UX
+     ULTRIX	- DEC Ultrix
+     LINUX	- Linux
+     FREEBSD	- FreeBSD
+     NETBSD	- NetBSD
+     OPENBSD	- OpenBSD
+     BSDI	- BSD/OS
+     IRIX	- SGI Irix
+     OSF	- HP Tru64 UNIX
+     SCO	- SCO OpenServer 5
+     UNIXWARE	- UnixWare 7, Open UNIX 8
+     AIX	- AIX
+     HURD	- GNU Hurd
+     DGUX	- DG/UX
+     RELIANT	- Reliant UNIX
+     DYNIX	- DYNIX/ptx
+     QNX	- QNX
+     QNX6	- QNX RTP 6.1
+     LYNX	- LynxOS
+     BSD4	- Any BSD 4.4 system
+     UNIX	- Any UNIX BSD/SYSV system
+*/
+
+#if defined(__APPLE__) && defined(__GNUC__) && !defined(Q_OS_DARWIN)
+#  define Q_OS_DARWIN
+#  define Q_OS_FREEBSD
+#elif defined(__MACOSX__)
+#  define Q_OS_MACX
+#elif defined(macintosh)
+#  define Q_OS_MAC9
+#elif defined(__CYGWIN__)
+#  define Q_OS_CYGWIN
+#elif defined(MSDOS) || defined(_MSDOS)
+#  define Q_OS_MSDOS
+#elif defined(__OS2__)
+#  if defined(__EMX__)
+#    define Q_OS_OS2EMX
+#  else
+#    define Q_OS_OS2
+#  endif
+#elif !defined(SAG_COM) && (defined(WIN64) || defined(_WIN64) || defined(__WIN64__))
+#  define Q_OS_WIN32
+#  define Q_OS_WIN64
+#elif !defined(SAG_COM) && (defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__))
+#  define Q_OS_WIN32
+#elif defined(__MWERKS__) && defined(__INTEL__)
+#  define Q_OS_WIN32
+#elif defined(__sun) || defined(sun)
+#  define Q_OS_SOLARIS
+#elif defined(hpux) || defined(__hpux)
+#  define Q_OS_HPUX
+#elif defined(__ultrix) || defined(ultrix)
+#  define Q_OS_ULTRIX
+#elif defined(sinix)
+#  define Q_OS_RELIANT
+#elif defined(__linux__) || defined(__linux)
+#  define Q_OS_LINUX
+#elif defined(__FreeBSD__)
+#  define Q_OS_FREEBSD
+#  define Q_OS_BSD4
+#elif defined(__NetBSD__)
+#  define Q_OS_NETBSD
+#  define Q_OS_BSD4
+#elif defined(__OpenBSD__)
+#  define Q_OS_OPENBSD
+#  define Q_OS_BSD4
+#elif defined(__bsdi__)
+#  define Q_OS_BSDI
+#  define Q_OS_BSD4
+#elif defined(__sgi)
+#  define Q_OS_IRIX
+#elif defined(__osf__)
+#  define Q_OS_OSF
+#elif defined(_AIX)
+#  define Q_OS_AIX
+#elif defined(__Lynx__)
+#  define Q_OS_LYNX
+#elif defined(__GNU_HURD__)
+#  define Q_OS_HURD
+#elif defined(__DGUX__)
+#  define Q_OS_DGUX
+#elif defined(__QNXNTO__)
+#  define Q_OS_QNX6
+#elif defined(__QNX__)
+#  define Q_OS_QNX
+#elif defined(_SEQUENT_)
+#  define Q_OS_DYNIX
+#elif defined(_SCO_DS)      /* SCO OpenServer 5 */
+#  define Q_OS_SCO
+#elif defined(__USLC__)     /* UnixWare 7 + UDK, Open UNIX 8 + OUDK */
+#  define Q_OS_UNIXWARE
+#  define Q_OS_UNIXWARE7
+#elif defined(__svr4__)     /* UnixWare 7 + GCC, Open UNIX 8 + GCC */
+#  define Q_OS_UNIXWARE
+#  define Q_OS_UNIXWARE7
+#elsif !defined(Q_OS_DARWIN)
+#  error "Qt has not been ported to this OS - talk to qt-bugs@trolltech.com"
+#endif
+
+#if defined(Q_OS_MAC9) || defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
+#  define Q_OS_MAC
+#endif
+
+#if defined(Q_OS_MAC9) || defined(Q_OS_MSDOS) || defined(Q_OS_OS2) || defined(Q_OS_WIN32) || defined(Q_OS_WIN64)
+#  undef Q_OS_UNIX
+#elif !defined(Q_OS_UNIX)
+#  define Q_OS_UNIX
+#endif
+
+
+/*
+   The compiler, must be one of: (Q_CC_x)
+
+     SYM	- Symantec C++ for both PC and Macintosh
+     MPW	- MPW C++
+     MWERKS	- Metrowerks CodeWarrior
+     MSVC	- Microsoft Visual C/C++
+     BOR	- Borland/Turbo C++
+     WAT	- Watcom C++
+     GNU	- GNU C++
+     COMEAU	- Comeau C++
+     EDG	- Edison Design Group C++
+     OC		- CenterLine C++
+     SUN	- Sun WorkShop, Forte Developer, or Sun ONE Studio C++
+     MIPS	- MIPSpro C++
+     DEC	- DEC C++
+     HP		- HPUX C++
+     HPACC	- HPUX ANSI C++
+     USLC	- SCO OUDK, UDK, and UnixWare 2.X C++
+     CDS	- Reliant C++
+     KAI	- KAI C++
+     INTEL	- Intel C++
+     HIGHC	- MetaWare High C/C++
+     PGI	- Portland Group C++
+     GHS	- Green Hills Optimizing C++ Compilers
+
+   Should be sorted most to least authoritative.
+*/
+
+/* Symantec C++ is now Digital Mars */
+#if defined(__DMC__) || defined(__SC__)
+#  define Q_CC_SYM
+/* "explicit" semantics implemented in 8.1e but keyword recognized since 7.5 */
+#  if defined(__SC__) && __SC__ < 0x750
+#    define Q_NO_EXPLICIT_KEYWORD
+#  endif
+#  define Q_NO_USING_KEYWORD
+#  if !defined(_CPPUNWIND)
+#    define Q_NO_EXCEPTIONS
+#  endif
+
+#elif defined(applec)
+#  define Q_CC_MPW
+#  define Q_NO_BOOL_TYPE
+#  define Q_NO_EXPLICIT_KEYWORD
+#  define Q_NO_USING_KEYWORD
+
+#elif defined(__MWERKS__)
+#  define Q_CC_MWERKS
+/* "explicit" recognized since 4.0d1 */
+#  define QMAC_PASCAL pascal
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#elif defined(_MSC_VER)
+#  define Q_CC_MSVC
+/* proper support of bool for _MSC_VER >= 1100 */
+#  define Q_CANNOT_DELETE_CONSTANT
+#  define Q_INLINE_TEMPLATES inline
+/* Visual C++.Net issues for _MSC_VER >= 1300 */
+#  if _MSC_VER >= 1300
+#    define Q_CC_MSVC_NET
+#    define Q_TYPENAME
+#  endif
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#elif defined(__BORLANDC__) || defined(__TURBOC__)
+#  define Q_CC_BOR
+#  if __BORLANDC__ < 0x502
+#    define Q_NO_BOOL_TYPE
+#    define Q_NO_EXPLICIT_KEYWORD
+#  endif
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#elif defined(__WATCOMC__)
+#  define Q_CC_WAT
+#  if defined(Q_OS_QNX4)
+/* compiler flags */
+#    define Q_TYPENAME
+#    define Q_NO_BOOL_TYPE
+#    define Q_CANNOT_DELETE_CONSTANT
+#    define mutable
+/* ??? */
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+/* no template classes in QVariant */
+#    define QT_NO_TEMPLATE_VARIANT
+/* Wcc does not fill in functions needed by valuelists, maps, and
+   valuestacks implicitly */
+#    define Q_FULL_TEMPLATE_INSTANTIATION
+/* can we just compare the structures? */
+#    define Q_FULL_TEMPLATE_INSTANTIATION_MEMCMP
+/* these are not useful to our customers */
+#    define QT_QWS_NO_SHM
+#    define QT_NO_QWS_MULTIPROCESS
+#    define QT_NO_SQL
+#    define QT_NO_QWS_CURSOR
+#  endif
+
+#elif defined(__GNUC__)
+#  define Q_CC_GNU
+#  define Q_C_CALLBACKS
+#  if __GNUC__ == 2 && __GNUC_MINOR__ <= 7
+#    define Q_FULL_TEMPLATE_INSTANTIATION
+#  endif
+/* GCC 2.95 knows "using" but does not support it correctly */
+#  if __GNUC__ == 2 && __GNUC_MINOR__ <= 95
+#    define Q_NO_USING_KEYWORD
+#  endif
+#  if (defined(__arm__) || defined(__ARMEL__)) && !defined(QT_MOC_CPP)
+#    define Q_PACKED __attribute__ ((packed))
+#  endif
+#  if !defined(__EXCEPTIONS)
+#    define Q_NO_EXCEPTIONS
+#  endif
+
+/* IBM compiler versions are a bit messy. There are actually two products:
+   the C product, and the C++ product. The C++ compiler is always packaged
+   with the latest version of the C compiler. Version numbers do not always
+   match. This little table (I'm not sure it's accurate) should be helpful:
+
+   C++ product                C product
+
+            C Set 3.1         C Compiler 3.0
+                  ...         ...
+   C++ Compiler 3.6.6         C Compiler 4.3
+                  ...         ...
+   Visual Age C++ 4.0         ...
+                  ...         ...
+   Visual Age C++ 5.0         C Compiler 5.0
+
+   Now:
+   __xlC__    is the version of the C compiler in hexadecimal notation
+              is only an approximation of the C++ compiler version
+   __IBMCPP__ is the version of the C++ compiler in decimal notation
+              but it is not defined on older compilers like C Set 3.1 */
+#elif defined(__xlC__)
+#  define Q_CC_XLC
+#  define Q_FULL_TEMPLATE_INSTANTIATION
+#  if __xlC__ < 0x400
+#    define Q_NO_BOOL_TYPE
+#    define Q_NO_EXPLICIT_KEYWORD
+#    define Q_NO_USING_KEYWORD
+#    define Q_TYPENAME
+#    define Q_INLINE_TEMPLATES inline
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    define Q_CANNOT_DELETE_CONSTANT
+#  endif
+
+/* Older versions of DEC C++ do not define __EDG__ or __EDG - observed
+   on DEC C++ V5.5-004. New versions do define  __EDG__ - observed on
+   Compaq C++ V6.3-002.
+   This compiler is different enough from other EDG compilers to handle
+   it separately anyway. */
+#elif defined(__DECCXX)
+#  define Q_CC_DEC
+/* Compaq C++ V6 compilers are EDG-based but I'm not sure about older
+   DEC C++ V5 compilers. */
+#  if defined(__EDG__)
+#    define Q_CC_EDG
+#  endif
+/* Compaq have disabled EDG's _BOOL macro and use _BOOL_EXISTS instead
+   - observed on Compaq C++ V6.3-002.
+   In any case versions prior to Compaq C++ V6.0-005 do not have bool. */
+#  if !defined(_BOOL_EXISTS)
+#    define Q_NO_BOOL_TYPE
+#  endif
+/* Spurious (?) error messages observed on Compaq C++ V6.5-014. */
+#  define Q_NO_USING_KEYWORD
+/* Apply to all versions prior to Compaq C++ V6.0-000 - observed on
+   DEC C++ V5.5-004. */
+#  if __DECCXX_VER < 60060000
+#    define Q_TYPENAME
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    define Q_CANNOT_DELETE_CONSTANT
+#  endif
+/* avoid undefined symbol problems with out-of-line template members */
+#  define Q_INLINE_TEMPLATES inline
+
+/* Compilers with EDG front end are similar. To detect them we test:
+   __EDG documented by SGI, observed on MIPSpro 7.3.1.1 and KAI C++ 4.0b
+   __EDG__ documented in EDG online docs, observed on Compaq C++ V6.3-002 */
+#elif defined(__EDG) || defined(__EDG__)
+#  define Q_CC_EDG
+/* From the EDG documentation (does not seem to apply to Compaq C++):
+   _BOOL
+    	Defined in C++ mode when bool is a keyword. The name of this
+	predefined macro is specified by a configuration flag. _BOOL
+	is the default.
+   __BOOL_DEFINED
+   	Defined in Microsoft C++ mode when bool is a keyword. */
+#  if !defined(_BOOL) && !defined(__BOOL_DEFINED)
+#    define Q_NO_BOOL_TYPE
+#  endif
+
+/* The Portland Group compiler is based on EDG and does define __EDG__ */
+#  if defined(__COMO__)
+#    define Q_CC_COMEAU
+#    define Q_C_CALLBACKS
+
+/* Using the `using' keyword avoids KAI C++ warnings */
+#  elif defined(__KCC)
+#    define Q_CC_KAI
+#    if !defined(_EXCEPTIONS)
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* Using the `using' keyword avoids Intel C++ warnings */
+#  elif defined(__INTEL_COMPILER)
+#    define Q_CC_INTEL
+#    if !defined(__EXCEPTIONS)
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* The Portland Group compiler is based on EDG and does define __EDG__ */
+#  elif defined(__PGI)
+#    define Q_CC_PGI
+#    if !defined(__EXCEPTIONS)
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* Never tested! */
+#  elif defined(__ghs)
+#    define Q_CC_GHS
+
+/* The UnixWare 7 UDK compiler is based on EDG and does define __EDG__ */
+#  elif defined(__USLC__) && defined(__SCO_VERSION__)
+#    define Q_CC_USLC
+/* The latest UDK 7.1.1b does not need this, but previous versions do */
+#    if !defined(__SCO_VERSION__) || (__SCO_VERSION__ < 302200010)
+#      define Q_INLINE_TEMPLATES inline
+#    endif
+#    define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+/* Never tested! */
+#  elif defined(CENTERLINE_CLPP) || defined(OBJECTCENTER)
+#    define Q_CC_OC
+#    define Q_NO_USING_KEYWORD
+
+/* CDS++ defines __EDG__ although this is not documented in the Reliant
+   documentation. It also follows conventions like _BOOL and this documented */
+#  elif defined(sinix)
+#    define Q_CC_CDS
+#    define Q_NO_USING_KEYWORD
+#    if defined(__cplusplus) && (__cplusplus < 2) /* Cfront C++ mode */
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* The MIPSpro compiler in o32 mode is based on EDG but disables features
+   such as template specialization nevertheless */
+#  elif defined(__sgi)
+#    define Q_CC_MIPS
+#    if defined(_MIPS_SIM) && (_MIPS_SIM == _ABIO32) /* o32 ABI */
+#      define Q_TYPENAME
+#      define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#      define Q_STRICT_INLINING_RULES
+#    elif defined(_COMPILER_VERSION) && (_COMPILER_VERSION < 730) /* 7.2 */
+#      define Q_TYPENAME
+#      define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    endif
+#    define Q_NO_USING_KEYWORD /* ### check "using" status */
+#  endif
+
+/* The older UnixWare 2.X compiler? */
+#elif defined(__USLC__)
+#  define Q_CC_USLC
+#  define Q_TYPENAME
+#  define Q_NO_BOOL_TYPE
+#  define Q_NO_EXPLICIT_KEYWORD
+#  define Q_NO_USING_KEYWORD
+#  define Q_INLINE_TEMPLATES inline
+
+/* Never tested! */
+#elif defined(__HIGHC__)
+#  define Q_CC_HIGHC
+
+#elif defined(__SUNPRO_CC)
+#  define Q_CC_SUN
+/* 5.0 compiler or better
+    'bool' is enabled by default but can be disabled using -features=nobool
+    in which case _BOOL is not defined
+        this is the default in 4.2 compatibility mode triggered by -compat=4 */
+#  if __SUNPRO_CC >= 0x500
+#    if !defined(_BOOL)
+#      define Q_NO_BOOL_TYPE
+#    endif
+#    if defined(__SUNPRO_CC_COMPAT) && (__SUNPRO_CC_COMPAT <= 4)
+#      define Q_NO_USING_KEYWORD
+#    endif
+#    define Q_C_CALLBACKS
+/* 4.2 compiler or older */
+#  else
+#    define Q_NO_BOOL_TYPE
+#    define Q_NO_EXPLICIT_KEYWORD
+#    define Q_NO_USING_KEYWORD
+#  endif
+
+/* CDS++ does not seem to define __EDG__ or __EDG according to Reliant
+   documentation but nevertheless uses EDG conventions like _BOOL */
+#elif defined(sinix)
+#  define Q_CC_EDG
+#  define Q_CC_CDS
+#  if !defined(_BOOL)
+#    define Q_NO_BOOL_TYPE
+#  endif
+#  define Q_BROKEN_TEMPLATE_SPECIALIZATION
+
+#elif defined(Q_OS_HPUX)
+/* __HP_aCC was not defined in first aCC releases */
+#  if defined(__HP_aCC) || __cplusplus >= 199707L
+#    define Q_CC_HPACC
+#  else
+#    define Q_CC_HP
+#    define Q_NO_BOOL_TYPE
+#    define Q_FULL_TEMPLATE_INSTANTIATION
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    define Q_NO_EXPLICIT_KEYWORD
+#  endif
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#else
+#  error "Qt has not been tested with this compiler - talk to qt-bugs@trolltech.com"
+#endif
+
+#ifndef Q_PACKED
+#  define Q_PACKED
+#endif
+
+
+/*
+   The window system, must be one of: (Q_WS_x)
+
+     MACX	- Mac OS X
+     MAC9	- Mac OS 9
+     QWS	- Qt/Embedded
+     WIN32	- Windows
+     X11	- X Window System
+     PM		- unsupported
+     WIN16	- unsupported
+*/
+
+#if defined(Q_OS_MAC9)
+#  define Q_WS_MAC9
+#elif defined(Q_OS_MSDOS)
+#  define Q_WS_WIN16
+#  error "Qt requires Win32 and does not work with Windows 3.x"
+#elif defined(_WIN32_X11_)
+#  define Q_WS_X11
+#elif defined(Q_OS_WIN32)
+#  define Q_WS_WIN32
+#  if defined(Q_OS_WIN64)
+#    define Q_WS_WIN64
+#  endif
+#elif defined(Q_OS_OS2)
+#  define Q_WS_PM
+#  error "Qt does not work with OS/2 Presentation Manager or Workplace Shell"
+#elif defined(Q_OS_UNIX)
+#  if defined(QWS)
+#    define Q_WS_QWS
+#    define QT_NO_QWS_IM
+#  elif defined(Q_OS_MACX)
+#    define Q_WS_MACX
+#  else
+#    define Q_WS_X11
+#  endif
+#endif
+#if defined(Q_OS_MAC) && !defined(QMAC_PASCAL)
+#  define QMAC_PASCAL
+#endif
+
+#if defined(Q_WS_WIN16) || defined(Q_WS_WIN32)
+#  define Q_WS_WIN
+#endif
+
+#if (defined(Q_WS_MAC9) || defined(Q_WS_MACX)) && !defined(Q_WS_QWS) && !defined(Q_WS_X11)
+#  define Q_WS_MAC
+#endif
+
+
+/*
+   Some classes do not permit copies to be made of an object.
+   These classes contains a private copy constructor and operator=
+   to disable copying (the compiler gives an error message).
+   Undefine Q_DISABLE_COPY to turn off this checking.
+*/
+
+#define Q_DISABLE_COPY
+
+#if defined(__cplusplus)
+
+
+//
+// Useful type definitions for Qt
+//
+
+#if defined(Q_NO_BOOL_TYPE)
+#if defined(Q_CC_HP)
+// bool is an unsupported reserved keyword in later versions
+#define bool int
+#else
+typedef int bool;
+#endif
+#endif
+
+typedef unsigned char   uchar;
+typedef unsigned short  ushort;
+typedef unsigned	uint;
+typedef unsigned long   ulong;
+typedef char	       *pchar;
+typedef uchar	       *puchar;
+typedef const char     *pcchar;
+
+
+//
+// Constant bool values
+//
+
+#ifndef TRUE
+const bool FALSE = 0;
+const bool TRUE = !0;
+#endif
+#if defined(__WATCOMC__)
+#  if defined(Q_OS_QNX4)
+const bool false = FALSE;
+const bool true = TRUE;
+#  endif
+#endif
+
+
+//
+// Use the "explicit" keyword on platforms that support it.
+//
+
+#if !defined(Q_NO_EXPLICIT_KEYWORD)
+#  define Q_EXPLICIT explicit
+#else
+#  define Q_EXPLICIT
+#endif
+
+
+//
+// Workaround for static const members on MSVC++.
+//
+
+#if defined(Q_CC_MSVC)
+#  define QT_STATIC_CONST static
+#  define QT_STATIC_CONST_IMPL
+#else
+#  define QT_STATIC_CONST static const
+#  define QT_STATIC_CONST_IMPL const
+#endif
+
+
+//
+// Utility macros and inline functions
+//
+
+#define QMAX(a, b)	((b) < (a) ? (a) : (b))
+#define QMIN(a, b)	((a) < (b) ? (a) : (b))
+#define QABS(a)	((a) >= 0  ? (a) : -(a))
+
+inline int qRound( double d )
+{
+    return d >= 0.0 ? int(d + 0.5) : int( d - ((int)d-1) + 0.5 ) + ((int)d-1);
+}
+
+
+//
+// Size-dependent types (architechture-dependent byte order)
+//
+
+#if !defined(QT_CLEAN_NAMESPACE)
+// source compatibility with Qt 1.x
+typedef signed char		INT8;		// 8 bit signed
+typedef unsigned char		UINT8;		// 8 bit unsigned
+typedef short			INT16;		// 16 bit signed
+typedef unsigned short		UINT16;		// 16 bit unsigned
+typedef int			INT32;		// 32 bit signed
+typedef unsigned int		UINT32;		// 32 bit unsigned
+#endif
+
+typedef signed char		Q_INT8;		// 8 bit signed
+typedef unsigned char		Q_UINT8;	// 8 bit unsigned
+typedef short			Q_INT16;	// 16 bit signed
+typedef unsigned short		Q_UINT16;	// 16 bit unsigned
+typedef int			Q_INT32;	// 32 bit signed
+typedef unsigned int		Q_UINT32;	// 32 bit unsigned
+#if defined(Q_OS_WIN64)
+// LLP64 64-bit model on Windows
+typedef __int64			Q_LONG;		// word up to 64 bit signed
+typedef unsigned __int64	Q_ULONG;	// word up to 64 bit unsigned
+#else
+// LP64 64-bit model on Linux
+typedef long			Q_LONG;
+typedef unsigned long		Q_ULONG;
+#endif
+
+#if !defined(QT_CLEAN_NAMESPACE)
+// mininum size of 64 bits is not guaranteed
+#define Q_INT64			Q_LONG
+#define Q_UINT64		Q_ULONG
+#endif
+
+#if (defined(Q_OS_MACX) || defined(Q_OS_DARWIN)) && !defined(QT_LARGEFILE_SUPPORT)
+#  define QT_LARGEFILE_SUPPORT 64
+#endif
+#if defined(QT_LARGEFILE_SUPPORT)
+    typedef unsigned long long QtOffset;
+#else
+    typedef Q_ULONG QtOffset;
+#endif
+
+
+//
+// Data stream functions is provided by many classes (defined in qdatastream.h)
+//
+
+class QDataStream;
+
+
+//
+// Feature subsetting
+//
+// Note that disabling some features will produce a libqt that is not
+// compatible with other libqt builds. Such modifications are only
+// supported on Qt/Embedded where reducing the library size is important
+// and where the application-suite is often a fixed set.
+//
+
+#if !defined(QT_MOC)
+#if defined(QCONFIG_LOCAL)
+#include <qconfig-local.h>
+#elif defined(QCONFIG_MINIMAL)
+#include <qconfig-minimal.h>
+#elif defined(QCONFIG_SMALL)
+#include <qconfig-small.h>
+#elif defined(QCONFIG_MEDIUM)
+#include <qconfig-medium.h>
+#elif defined(QCONFIG_LARGE)
+#include <qconfig-large.h>
+#else // everything...
+#include <qconfig.h>
+#endif
+#endif
+
+
+#ifndef QT_BUILD_KEY
+#define QT_BUILD_KEY "unspecified"
+#endif
+
+// prune to local config
+#include "qmodules.h"
+#ifndef QT_MODULE_ICONVIEW
+# define QT_NO_ICONVIEW
+#endif
+#ifndef QT_MODULE_WORKSPACE
+# define QT_NO_WORKSPACE
+#endif
+#ifndef QT_MODULE_NETWORK
+#define QT_NO_NETWORK
+#endif
+#ifndef QT_MODULE_CANVAS
+# define QT_NO_CANVAS
+#endif
+#ifndef QT_MODULE_TABLE
+#define QT_NO_TABLE
+#endif
+#ifndef QT_MODULE_XML
+# define QT_NO_XML
+#endif
+#ifndef QT_MODULE_OPENGL
+# define QT_NO_OPENGL
+#endif
+#if !defined(QT_MODULE_SQL)
+# define QT_NO_SQL
+#endif
+
+#if defined(Q_WS_MAC9)
+//No need for menu merging
+#  ifndef QMAC_QMENUBAR_NO_MERGE
+#    define QMAC_QMENUBAR_NO_MERGE
+#  endif
+//Mac9 does not use quartz
+#  ifndef QMAC_NO_QUARTZ
+#    define QMAC_NO_QUARTZ
+#  endif
+#  ifndef QMAC_QMENUBAR_NO_EVENT
+#    define QMAC_QMENUBAR_NO_EVENT
+#  endif
+#endif
+#if defined(Q_WS_MACX) //for no nobody uses quartz, just putting in first level hooks
+#  ifndef QMAC_NO_QUARTZ
+#    define QMAC_NO_QUARTZ
+#  endif
+#  ifndef QMAC_QMENUBAR_NO_EVENT
+#    define QMAC_QMENUBAR_NO_EVENT
+#  endif
+#endif
+
+#if !defined(Q_WS_QWS) && !defined(QT_NO_COP)
+#  define QT_NO_COP
+#endif
+
+#ifndef QT_H
+#include <qfeatures.h>
+#endif // QT_H
+
+
+//
+// Create Qt DLL if QT_DLL is defined (Windows only)
+//
+
+#if defined(Q_OS_WIN32) || defined(Q_OS_WIN64)
+#  if defined(QT_NODLL)
+#    undef QT_MAKEDLL
+#    undef QT_DLL
+#  elif defined(QT_MAKEDLL)	/* create a Qt DLL library */
+#    if defined(QT_DLL)
+#      undef QT_DLL
+#    endif
+#    define Q_EXPORT  __declspec(dllexport)
+#    define Q_TEMPLATEDLL
+#    define Q_TEMPLATE_EXTERN
+#    undef  Q_DISABLE_COPY	/* avoid unresolved externals */
+#  elif defined(QT_DLL)		/* use a Qt DLL library */
+#    define Q_EXPORT  __declspec(dllimport)
+#    define Q_TEMPLATEDLL
+#    ifndef Q_TEMPLATE_EXTERN
+#      if defined(Q_CC_MSVC)
+#        define Q_TEMPLATE_EXTERN /*extern*/ //### too many warnings, even though disabled
+#      else
+#        define Q_TEMPLATE_EXTERN
+#      endif
+#    endif
+#    undef  Q_DISABLE_COPY  /* avoid unresolved externals */
+#  endif
+#else
+#  undef QT_MAKEDLL		/* ignore these for other platforms */
+#  undef QT_DLL
+#endif
+
+#ifndef Q_EXPORT
+#  define Q_EXPORT
+#endif
+
+
+//
+// Some platform specific stuff
+//
+
+#if defined(Q_WS_WIN)
+extern Q_EXPORT bool qt_winunicode;
+#endif
+
+
+//
+// System information
+//
+
+Q_EXPORT const char *qVersion();
+Q_EXPORT bool qSysInfo( int *wordSize, bool *bigEndian );
+#if defined(Q_OS_MAC)
+int qMacVersion();
+#elif defined(Q_WS_WIN)
+Q_EXPORT int qWinVersion();
+#if defined(UNICODE)
+#define QT_WA( uni, ansi ) if ( qt_winunicode ) { uni } else { ansi }
+#define QT_WA_INLINE( uni, ansi ) ( qt_winunicode ? uni : ansi )
+#else
+#define QT_WA( uni, ansi ) ansi
+#define QT_WA_INLINE( uni, ansi ) ansi
+#endif
+#endif
+
+#ifdef Q_OS_TEMP
+#ifdef QT_WA
+#undef QT_WA
+#undef QT_WA_INLINE
+#endif
+#define QT_WA( uni, ansi ) uni
+#define QT_WA_INLINE( uni, ansi ) ( uni )
+#endif
+
+#ifndef Q_INLINE_TEMPLATES
+#  define Q_INLINE_TEMPLATES
+#endif
+
+#ifndef Q_TYPENAME
+#  define Q_TYPENAME typename
+#endif
+
+//
+// Use to avoid "unused parameter" warnings
+//
+
+#define Q_UNUSED(x) (void)x;
+
+//
+// Debugging and error handling
+//
+
+#if !defined(QT_NO_CHECK)
+#  define QT_CHECK_STATE			// check state of objects etc.
+#  define QT_CHECK_RANGE			// check range of indexes etc.
+#  define QT_CHECK_NULL				// check null pointers
+#  define QT_CHECK_MATH				// check math functions
+#endif
+
+#if !defined(QT_NO_DEBUG) && !defined(QT_DEBUG)
+#  define QT_DEBUG				// display debug messages
+#  if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+#    if !defined(NO_DEBUG) && !defined(DEBUG)
+#      if !defined(Q_OS_MACX) && !defined(Q_OS_DARWIN)	// clash with MacOS X headers
+#        define DEBUG
+#      endif
+#    endif
+#  endif
+#endif
+
+
+Q_EXPORT void qDebug( const char *, ... )	// print debug message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void qWarning( const char *, ... )	// print warning message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void qFatal( const char *, ... )	// print fatal message and exit
+#if defined(Q_CC_GNU)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void qSystemWarning( const char *, int code = -1 );
+
+#if !defined(QT_CLEAN_NAMESPACE) 		// compatibility with Qt 1
+
+Q_EXPORT void debug( const char *, ... )	// print debug message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void warning( const char *, ... )	// print warning message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void fatal( const char *, ... )	// print fatal message and exit
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+#endif // QT_CLEAN_NAMESPACE
+
+
+#if !defined(Q_ASSERT)
+#  if defined(QT_CHECK_STATE)
+#    if defined(QT_FATAL_ASSERT)
+#      define Q_ASSERT(x)  ((x) ? (void)0 : qFatal("ASSERT: \"%s\" in %s (%d)",#x,__FILE__,__LINE__))
+#    else
+#      define Q_ASSERT(x)  ((x) ? (void)0 : qWarning("ASSERT: \"%s\" in %s (%d)",#x,__FILE__,__LINE__))
+#    endif
+#  else
+#    define Q_ASSERT(x)
+#  endif
+#endif
+
+#if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+#  if !defined(ASSERT)
+#    if !defined(Q_OS_TEMP)
+#      define ASSERT(x) Q_ASSERT(x)
+#    endif
+#  endif
+#endif // QT_NO_COMPAT
+
+
+Q_EXPORT bool qt_check_pointer( bool c, const char *, int );
+
+#if defined(QT_CHECK_NULL)
+#  define Q_CHECK_PTR(p) (qt_check_pointer((p)==0,__FILE__,__LINE__))
+#else
+#  define Q_CHECK_PTR(p)
+#endif
+
+#if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+#  if !defined(CHECK_PTR)
+#    define CHECK_PTR(x) Q_CHECK_PTR(x)
+#  endif
+#endif // QT_NO_COMPAT
+
+enum QtMsgType { QtDebugMsg, QtWarningMsg, QtFatalMsg };
+
+typedef void (*QtMsgHandler)(QtMsgType, const char *);
+Q_EXPORT QtMsgHandler qInstallMsgHandler( QtMsgHandler );
+
+#if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+typedef QtMsgHandler msg_handler;
+#endif // QT_NO_COMPAT
+
+Q_EXPORT void qSuppressObsoleteWarnings( bool = TRUE );
+
+Q_EXPORT void qObsolete( const char *obj, const char *oldfunc,
+		   const char *newfunc );
+Q_EXPORT void qObsolete( const char *obj, const char *oldfunc );
+Q_EXPORT void qObsolete( const char *message );
+
+
+//
+// Install paths from configure
+//
+
+Q_EXPORT const char *qInstallPath();
+Q_EXPORT const char *qInstallPathDocs();
+Q_EXPORT const char *qInstallPathHeaders();
+Q_EXPORT const char *qInstallPathLibs();
+Q_EXPORT const char *qInstallPathBins();
+Q_EXPORT const char *qInstallPathPlugins();
+Q_EXPORT const char *qInstallPathData();
+
+#endif // __cplusplus
+
+// compilers which follow outdated template instantiation rules
+// require a class to have a comparison operator to exist when
+// a QValueList of this type is instantiated. It's not actually
+// used in the list, though. Hence the dummy implementation.
+// Just in case other code relies on it we better trigger a warning
+// mandating a real implementation.
+#ifdef Q_FULL_TEMPLATE_INSTANTIATION
+#  define Q_DUMMY_COMPARISON_OPERATOR(C) \
+    bool operator==( const C& ) const { \
+        qWarning( #C"::operator==( const "#C"& ) got called." ); \
+        return FALSE; \
+    }
+#else
+#  define Q_DUMMY_COMPARISON_OPERATOR(C)
+#endif
+
+#endif // QGLOBAL_H
+
+//
+// Avoid some particularly useless warnings from some stupid compilers.
+// To get ALL C++ compiler warnings, define QT_CC_WARNINGS or comment out
+// the line "#define QT_NO_WARNINGS"
+//
+
+#if !defined(QT_CC_WARNINGS)
+#  define QT_NO_WARNINGS
+#endif
+#if defined(QT_NO_WARNINGS)
+#  if defined(Q_CC_MSVC)
+#    pragma warning(disable: 4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
+#    pragma warning(disable: 4275) // non - DLL-interface classkey 'identifier' used as base for DLL-interface classkey 'identifier'
+#    pragma warning(disable: 4514) // unreferenced inline/local function has been removed
+#    pragma warning(disable: 4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
+#    pragma warning(disable: 4097) // typedef-name 'identifier1' used as synonym for class-name 'identifier2'
+#    pragma warning(disable: 4706) // assignment within conditional expression
+#    pragma warning(disable: 4786) // truncating debug info after 255 characters
+#    pragma warning(disable: 4660) // template-class specialization 'identifier' is already instantiated
+#    pragma warning(disable: 4355) // 'this' : used in base member initializer list
+#    pragma warning(disable: 4231) // nonstandard extension used : 'extern' before template explicit instantiation
+#  elif defined(Q_CC_BOR)
+#    pragma option -w-inl
+#    pragma option -w-aus
+#    pragma warn -inl
+#    pragma warn -pia
+#    pragma warn -ccc
+#    pragma warn -rch
+#    pragma warn -sig
+#  elif defined(Q_CC_MWERKS)
+#    pragma warn_possunwant off
+#  endif
+#endif
diff -uNbr qt-x11-free-3.1.0/include/qpoint.h qt-x11-free-3.1.0-new/include/qpoint.h
--- qt-x11-free-3.1.0/include/qpoint.h	Thu Nov  7 08:07:30 2002
+++ qt-x11-free-3.1.0-new/include/qpoint.h	Wed Nov 13 09:07:07 2002
@@ -83,7 +83,7 @@
 private:
     static void warningDivByZero();
 
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACX)
     QCOORD yp;
     QCOORD xp;
 #else
diff -uNbr qt-x11-free-3.1.0/include/qrect.h qt-x11-free-3.1.0-new/include/qrect.h
--- qt-x11-free-3.1.0/include/qrect.h	Thu Nov  7 08:07:30 2002
+++ qt-x11-free-3.1.0-new/include/qrect.h	Wed Nov 13 09:07:07 2002
@@ -132,7 +132,7 @@
     friend Q_EXPORT bool operator!=( const QRect &, const QRect & );
 
 private:
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACX)
     QCOORD y1;
     QCOORD x1;
     QCOORD y2;
diff -uNbr qt-x11-free-3.1.0/include/qt.h qt-x11-free-3.1.0-new/include/qt.h
--- qt-x11-free-3.1.0/include/qt.h	Sat Oct 12 06:09:14 2002
+++ qt-x11-free-3.1.0-new/include/qt.h	Wed Nov 13 09:07:07 2002
@@ -323,7 +323,7 @@
 #include <qfontfactoryttf_qws.h>
 #include <qgfx_qws.h>
 #include <qgfxvnc_qws.h>
-#if !defined( QT_NO_SOUND ) && !defined( Q_OS_MACX )
+#if !defined( QT_NO_SOUND ) && !defined( Q_OS_MACX ) && !defined( Q_OS_DARWIN )
 # include <qsoundqss_qws.h>
 #endif
 #include "qwsdisplay_qws.h"
diff -uNbr qt-x11-free-3.1.0/mkspecs/darwin-g++/qmake.conf qt-x11-free-3.1.0-new/mkspecs/darwin-g++/qmake.conf
--- qt-x11-free-3.1.0/mkspecs/darwin-g++/qmake.conf	Thu Nov  7 08:08:00 2002
+++ qt-x11-free-3.1.0-new/mkspecs/darwin-g++/qmake.conf	Wed Nov 13 09:07:07 2002
@@ -6,18 +6,20 @@
 
 MAKEFILE_GENERATOR	= UNIX
 TEMPLATE		= app
-CONFIG			+= qt warn_on release resource_fork
+CONFIG			+= qt warn_on release lib_version_first
 
 QMAKE_CC		= cc
 QMAKE_LEX		= flex
 QMAKE_LEXFLAGS		= 
 QMAKE_YACC		= yacc
 QMAKE_YACCFLAGS		= -d
-QMAKE_CFLAGS		= -pipe
+QMAKE_CFLAGS		= -fPIC -fno-common -pipe -Ddlsym=dlsym_auto_underscore
 QMAKE_CFLAGS_DEPS	= -M
 QMAKE_CFLAGS_WARN_ON	= -Wall -W
 QMAKE_CFLAGS_WARN_OFF	= -w
-QMAKE_CFLAGS_RELEASE	= -O2
+#QMAKE_CFLAGS_RELEASE	= -Os -frename-registers -mmultiple -mcpu=750 -mtune=750
+#for debugging purposes, -frename-registers -mmultiple mess up gdb
+QMAKE_CFLAGS_RELEASE	= -Os -mcpu=750 -mtune=750
 QMAKE_CFLAGS_DEBUG	= -g
 QMAKE_CFLAGS_SHLIB	= -fPIC
 QMAKE_EXTENSION_SHLIB	= dylib
@@ -35,8 +37,8 @@
 QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
 QMAKE_CXXFLAGS_THREAD	=
 
-QMAKE_INCDIR		= /usr/local/include
-QMAKE_LIBDIR		=
+QMAKE_INCDIR		= @PREFIX@/include
+QMAKE_LIBDIR		= @PREFIX@/lib
 QMAKE_INCDIR_X11	= /usr/X11R6/include
 QMAKE_LIBDIR_X11	= /usr/X11R6/lib
 QMAKE_INCDIR_QT		= $(QTDIR)/include
@@ -46,22 +48,22 @@
 
 QMAKE_LINK		= c++
 QMAKE_LINK_SHLIB	= c++
-QMAKE_LFLAGS		=
+QMAKE_LFLAGS		= -framework CoreServices
 QMAKE_LFLAGS_RELEASE	=
 QMAKE_LFLAGS_DEBUG	=
-QMAKE_LFLAGS_SHLIB	= -dynamiclib
+QMAKE_LFLAGS_SHLIB	= -dynamiclib -install_name $$QMAKE_LIBDIR/$(TARGET) -bind_at_load
 QMAKE_LFLAGS_PLUGIN	= -bundle
 QMAKE_LFLAGS_THREAD	= 
 QMAKE_RPATH		= 
 
-QMAKE_LIBS_DYNLOAD	=
+QMAKE_LIBS_DYNLOAD	= -ldl
 QMAKE_LIBS_X11		= -lXext -lX11 -lm
 QMAKE_LIBS_X11SM	= -lSM -lICE
 QMAKE_LIBS_QT		= -lqt
 QMAKE_LIBS_QT_THREAD	= -lqt-mt
 QMAKE_LIBS_OPENGL	= -lGLU -lGL -lXmu
 QMAKE_LIBS_OPENGL_QT	= -lGL -lXmu
-QMAKE_LIBS_THREAD	=
+QMAKE_LIBS_THREAD	= -lXt
 
 QMAKE_MOC		= $(QTDIR)/bin/moc
 QMAKE_UIC		= $(QTDIR)/bin/uic
diff -uNbr qt-x11-free-3.1.0/qmake/generators/mac/metrowerks_xml.cpp qt-x11-free-3.1.0-new/qmake/generators/mac/metrowerks_xml.cpp
--- qt-x11-free-3.1.0/qmake/generators/mac/metrowerks_xml.cpp	Thu Nov  7 08:07:46 2002
+++ qt-x11-free-3.1.0-new/qmake/generators/mac/metrowerks_xml.cpp	Wed Nov 13 09:07:07 2002
@@ -42,7 +42,7 @@
 #include <qregexp.h>
 #include <stdlib.h>
 #include <time.h>
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_OS_MACX)
 #include <Carbon/Carbon.h>
 #include <sys/types.h>
 #include <sys/stat.h>
diff -uNbr qt-x11-free-3.1.0/qmake/generators/unix/unixmake.cpp qt-x11-free-3.1.0-new/qmake/generators/unix/unixmake.cpp
--- qt-x11-free-3.1.0/qmake/generators/unix/unixmake.cpp	Thu Nov  7 08:07:46 2002
+++ qt-x11-free-3.1.0-new/qmake/generators/unix/unixmake.cpp	Wed Nov 13 09:07:07 2002
@@ -133,14 +133,6 @@
 	    !project->variables()["QMAKE_LIB_FLAG"].isEmpty() &&
 	    project->isActiveConfig("dll"))
 	project->variables()["QMAKE_LFLAGS"] += project->variables()["QMAKE_LFLAGS_PREBIND"];
-    if(!project->isEmpty("QMAKE_INCDIR"))
-	project->variables()["INCLUDEPATH"] += project->variables()["QMAKE_INCDIR"];
-    if(!project->isEmpty("QMAKE_LIBDIR")) {
-	if ( !project->isEmpty("QMAKE_RPATH") )
-	    project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue("QMAKE_LIBDIR", " " + var("QMAKE_RPATH"), 
-								  " " + var("QMAKE_RPATH"), "");
-	project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue( "QMAKE_LIBDIR", "-L", " -L", "" );
-    }
     if ( extern_libs && (project->isActiveConfig("qt") || project->isActiveConfig("opengl")) ) {
 	if(configs.findIndex("x11lib") == -1)
 	    configs.append("x11lib");
@@ -174,6 +166,14 @@
 	    else
 		project->variables()["QMAKE_LIBS"] += project->variables()["QMAKE_LIBS_QT"];
 	}
+    }
+    if(!project->isEmpty("QMAKE_INCDIR"))
+	project->variables()["INCLUDEPATH"] += project->variables()["QMAKE_INCDIR"];
+    if(!project->isEmpty("QMAKE_LIBDIR")) {
+	if ( !project->isEmpty("QMAKE_RPATH") )
+	    project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue("QMAKE_LIBDIR", " " + var("QMAKE_RPATH"), 
+								  " " + var("QMAKE_RPATH"), "");
+	project->variables()["QMAKE_LIBDIR_FLAGS"] += varGlue( "QMAKE_LIBDIR", "-L", " -L", "" );
     }
     if ( project->isActiveConfig("thread") ) {
 	if(project->isActiveConfig("qt"))
diff -uNbr qt-x11-free-3.1.0/src/kernel/qapplication.h qt-x11-free-3.1.0-new/src/kernel/qapplication.h
--- qt-x11-free-3.1.0/src/kernel/qapplication.h	Thu Nov  7 08:07:33 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qapplication.h	Wed Nov 13 09:07:07 2002
@@ -244,7 +244,7 @@
 
 #if defined(Q_OS_WIN32) || defined(Q_OS_CYGWIN)
     static WindowsVersion winVersion();
-#elif defined(Q_OS_MAC)
+#elif defined(Q_OS_MACX)
     static MacintoshVersion macVersion();
 #endif
 #if defined(Q_WS_WIN)
diff -uNbr qt-x11-free-3.1.0/src/kernel/qapplication_p.h qt-x11-free-3.1.0-new/src/kernel/qapplication_p.h
--- qt-x11-free-3.1.0/src/kernel/qapplication_p.h	Thu Nov  7 08:07:37 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qapplication_p.h	Wed Nov 13 09:07:07 2002
@@ -73,7 +73,7 @@
 
 #if defined (Q_OS_WIN32) || defined (Q_OS_CYGWIN)
 extern Qt::WindowsVersion qt_winver;
-#elif defined (Q_OS_MAC)
+#elif defined (Q_OS_MACX)
 extern Qt::MacintoshVersion qt_macver;
 #endif
 
diff -uNbr qt-x11-free-3.1.0/src/kernel/qpoint.h qt-x11-free-3.1.0-new/src/kernel/qpoint.h
--- qt-x11-free-3.1.0/src/kernel/qpoint.h	Thu Nov  7 08:07:30 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qpoint.h	Wed Nov 13 09:07:07 2002
@@ -83,7 +83,7 @@
 private:
     static void warningDivByZero();
 
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACX)
     QCOORD yp;
     QCOORD xp;
 #else
diff -uNbr qt-x11-free-3.1.0/src/kernel/qpolygonscanner.cpp qt-x11-free-3.1.0-new/src/kernel/qpolygonscanner.cpp
--- qt-x11-free-3.1.0/src/kernel/qpolygonscanner.cpp	Thu Nov  7 08:07:34 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qpolygonscanner.cpp	Wed Nov 13 09:07:07 2002
@@ -488,7 +488,7 @@
  */
 
 typedef struct {
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACX)
     int y, x;
 #else
     int x, y;
diff -uNbr qt-x11-free-3.1.0/src/kernel/qprocess_unix.cpp qt-x11-free-3.1.0-new/src/kernel/qprocess_unix.cpp
--- qt-x11-free-3.1.0/src/kernel/qprocess_unix.cpp	Thu Nov  7 08:07:30 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qprocess_unix.cpp	Wed Nov 13 09:07:07 2002
@@ -746,7 +746,7 @@
 
 	if ( env == 0 ) { // inherit environment and start process
 	    QString command = _arguments[0];
-#if defined(Q_OS_MACX) //look in a bundle
+#if defined(Q_OS_MACX) || defined(Q_OS_DARWIN) //look in a bundle
 	    const QString mac_bundle_suffix = ".app/Contents/MacOS/";
 	    if(!QFile::exists(command) && QFile::exists(command + mac_bundle_suffix)) {
 		QString exec = command;
@@ -766,7 +766,7 @@
 	} else { // start process with environment settins as specified in env
 	    // construct the environment for exec
 	    int numEntries = env->count();
-#if defined(Q_OS_MACX)
+#if defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
 	    QString ld_library_path("DYLD_LIBRARY_PATH");
 #else
 	    QString ld_library_path("LD_LIBRARY_PATH");
@@ -798,7 +798,7 @@
 		    QStringList pathList = QStringList::split( ':', getenv( "PATH" ) );
 		    for (QStringList::Iterator it = pathList.begin(); it != pathList.end(); ++it ) {
 			QString dir = *it;
-#if defined(Q_OS_MACX) //look in a bundle
+#if defined(Q_OS_MACX) || defined(Q_OS_DARWIN) //look in a bundle
 			if(!QFile::exists(dir + "/" + command) && QFile::exists(dir + "/" + command + ".app"))
 			    dir += "/" + command + ".app/Contents/MacOS";
 #endif
@@ -808,7 +808,7 @@
 			QFileInfo fileInfo( dir + "/" + command );
 #endif
 			if ( fileInfo.isExecutable() ) {
-#if defined(Q_OS_MACX)
+#if defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
 			    arglistQ[0] = fileInfo.absFilePath().local8Bit();
 #else
 			    arglistQ[0] = fileInfo.filePath().local8Bit();
@@ -819,7 +819,7 @@
 		    }
 		}
 	    }
-#if defined(Q_OS_MACX)
+#if defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
 	    if(!QFile::exists(arglist[0])) {
 		QString command = arglist[0];
 		const QString mac_bundle_suffix = ".app/Contents/MacOS/";
diff -uNbr qt-x11-free-3.1.0/src/kernel/qrect.h qt-x11-free-3.1.0-new/src/kernel/qrect.h
--- qt-x11-free-3.1.0/src/kernel/qrect.h	Thu Nov  7 08:07:30 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qrect.h	Wed Nov 13 09:07:07 2002
@@ -132,7 +132,7 @@
     friend Q_EXPORT bool operator!=( const QRect &, const QRect & );
 
 private:
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACX)
     QCOORD y1;
     QCOORD x1;
     QCOORD y2;
diff -uNbr qt-x11-free-3.1.0/src/kernel/qt.h qt-x11-free-3.1.0-new/src/kernel/qt.h
--- qt-x11-free-3.1.0/src/kernel/qt.h	Sat Oct 12 06:09:14 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qt.h	Wed Nov 13 09:07:07 2002
@@ -323,7 +323,7 @@
 #include <qfontfactoryttf_qws.h>
 #include <qgfx_qws.h>
 #include <qgfxvnc_qws.h>
-#if !defined( QT_NO_SOUND ) && !defined( Q_OS_MACX )
+#if !defined( QT_NO_SOUND ) && !defined( Q_OS_MACX ) && !defined( Q_OS_DARWIN )
 # include <qsoundqss_qws.h>
 #endif
 #include "qwsdisplay_qws.h"
diff -uNbr qt-x11-free-3.1.0/src/kernel/qwidget_x11.cpp qt-x11-free-3.1.0-new/src/kernel/qwidget_x11.cpp
--- qt-x11-free-3.1.0/src/kernel/qwidget_x11.cpp	Thu Nov  7 08:07:33 2002
+++ qt-x11-free-3.1.0-new/src/kernel/qwidget_x11.cpp	Wed Nov 13 09:23:54 2002
@@ -1561,7 +1561,6 @@
 	else {
 	    topData()->showMode = 1;
 	    show();
-	    hideChildren( FALSE );
 	}
     } else {
 	show();
diff -uNbr qt-x11-free-3.1.0/src/tools/qdir.cpp qt-x11-free-3.1.0-new/src/tools/qdir.cpp
--- qt-x11-free-3.1.0/src/tools/qdir.cpp	Thu Nov  7 08:07:22 2002
+++ qt-x11-free-3.1.0-new/src/tools/qdir.cpp	Wed Nov 13 09:07:07 2002
@@ -1059,7 +1059,7 @@
     return '/';
 #elif defined (Q_FS_FAT) || defined(Q_WS_WIN)
     return '\\';
-#elif defined (Q_OS_MAC)
+#elif defined (Q_OS_MACX)
     return ':';
 #else
     return '/';
diff -uNbr qt-x11-free-3.1.0/src/tools/qdir_unix.cpp qt-x11-free-3.1.0-new/src/tools/qdir_unix.cpp
--- qt-x11-free-3.1.0/src/tools/qdir_unix.cpp	Thu Nov  7 08:07:23 2002
+++ qt-x11-free-3.1.0-new/src/tools/qdir_unix.cpp	Wed Nov 13 09:07:07 2002
@@ -86,7 +86,7 @@
 
 bool QDir::mkdir( const QString &dirName, bool acceptAbsPath ) const
 {
-#if defined(Q_OS_MACX)  // Mac X doesn't support trailing /'s
+#if defined(Q_OS_MACX) || defined(Q_OS_DARWIN) // Mac X doesn't support trailing /'s
     QString name = dirName;
     if (dirName[dirName.length() - 1] == "/")
 	name = dirName.left( dirName.length() - 1 );
diff -uNbr qt-x11-free-3.1.0/src/tools/qglobal.cpp qt-x11-free-3.1.0-new/src/tools/qglobal.cpp
--- qt-x11-free-3.1.0/src/tools/qglobal.cpp	Thu Nov  7 08:07:24 2002
+++ qt-x11-free-3.1.0-new/src/tools/qglobal.cpp	Wed Nov 13 09:07:07 2002
@@ -149,7 +149,7 @@
     return TRUE;
 }
 
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_OS_MACX)
 
 #include "qt_mac.h"
 
diff -uNbr qt-x11-free-3.1.0/src/tools/qglobal.h qt-x11-free-3.1.0-new/src/tools/qglobal.h
--- qt-x11-free-3.1.0/src/tools/qglobal.h	Thu Nov  7 08:07:22 2002
+++ qt-x11-free-3.1.0-new/src/tools/qglobal.h	Wed Nov 13 09:07:07 2002
@@ -78,8 +78,9 @@
      UNIX	- Any UNIX BSD/SYSV system
 */
 
-#if defined(__APPLE__) && defined(__GNUC__)
-#  define Q_OS_MACX
+#if defined(__APPLE__) && defined(__GNUC__) && !defined(Q_OS_DARWIN)
+#  define Q_OS_DARWIN
+#  define Q_OS_FREEBSD
 #elif defined(__MACOSX__)
 #  define Q_OS_MACX
 #elif defined(macintosh)
@@ -149,11 +150,11 @@
 #elif defined(__svr4__)     /* UnixWare 7 + GCC, Open UNIX 8 + GCC */
 #  define Q_OS_UNIXWARE
 #  define Q_OS_UNIXWARE7
-#else
+#elsif !defined(Q_OS_DARWIN)
 #  error "Qt has not been ported to this OS - talk to qt-bugs@trolltech.com"
 #endif
 
-#if defined(Q_OS_MAC9) || defined(Q_OS_MACX)
+#if defined(Q_OS_MAC9) || defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
 #  define Q_OS_MAC
 #endif
 
@@ -665,7 +666,7 @@
 #define Q_UINT64		Q_ULONG
 #endif
 
-#if defined(Q_OS_MACX) && !defined(QT_LARGEFILE_SUPPORT)
+#if (defined(Q_OS_MACX) || defined(Q_OS_DARWIN)) && !defined(QT_LARGEFILE_SUPPORT)
 #  define QT_LARGEFILE_SUPPORT 64
 #endif
 #if defined(QT_LARGEFILE_SUPPORT)
@@ -874,7 +875,7 @@
 #  define QT_DEBUG				// display debug messages
 #  if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
 #    if !defined(NO_DEBUG) && !defined(DEBUG)
-#      if !defined(Q_OS_MACX)			// clash with MacOS X headers
+#      if !defined(Q_OS_MACX) && !defined(Q_OS_DARWIN)	// clash with MacOS X headers
 #        define DEBUG
 #      endif
 #    endif
diff -uNbr qt-x11-free-3.1.0/src/tools/qglobal.h~ qt-x11-free-3.1.0-new/src/tools/qglobal.h~
--- qt-x11-free-3.1.0/src/tools/qglobal.h~	Wed Dec 31 19:00:00 1969
+++ qt-x11-free-3.1.0-new/src/tools/qglobal.h~	Thu Nov  7 08:07:22 2002
@@ -0,0 +1,1044 @@
+/****************************************************************************
+** $Id$
+**
+** Global type declarations and definitions
+**
+** Created : 920529
+**
+** Copyright (C) 1992-2002 Trolltech AS.  All rights reserved.
+**
+** This file is part of the tools module of the Qt GUI Toolkit.
+**
+** This file may be distributed under the terms of the Q Public License
+** as defined by Trolltech AS of Norway and appearing in the file
+** LICENSE.QPL included in the packaging of this file.
+**
+** This file may be distributed and/or modified under the terms of the
+** GNU General Public License version 2 as published by the Free Software
+** Foundation and appearing in the file LICENSE.GPL included in the
+** packaging of this file.
+**
+** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
+** licenses may use this file in accordance with the Qt Commercial License
+** Agreement provided with the Software.
+**
+** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
+** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+**
+** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
+**   information about Qt Commercial License Agreements.
+** See http://www.trolltech.com/qpl/ for QPL licensing information.
+** See http://www.trolltech.com/gpl/ for GPL licensing information.
+**
+** Contact info@trolltech.com if any conditions of this licensing are
+** not clear to you.
+**
+**********************************************************************/
+
+#ifndef QGLOBAL_H
+#define QGLOBAL_H
+
+#define QT_VERSION_STR   "3.1.0"
+/*
+   QT_VERSION is (major << 16) + (minor << 8) + patch.
+ */
+#define QT_VERSION 0x030100
+
+/*
+   The operating system, must be one of: (Q_OS_x)
+
+     MACX	- Mac OS X
+     MAC9	- Mac OS 9
+     MSDOS	- MS-DOS and Windows
+     OS2	- OS/2
+     OS2EMX	- XFree86 on OS/2 (not PM)
+     WIN32	- Win32 (Windows 95/98/ME and Windows NT/2000/XP)
+     CYGWIN	- Cygwin
+     SOLARIS	- Sun Solaris
+     HPUX	- HP-UX
+     ULTRIX	- DEC Ultrix
+     LINUX	- Linux
+     FREEBSD	- FreeBSD
+     NETBSD	- NetBSD
+     OPENBSD	- OpenBSD
+     BSDI	- BSD/OS
+     IRIX	- SGI Irix
+     OSF	- HP Tru64 UNIX
+     SCO	- SCO OpenServer 5
+     UNIXWARE	- UnixWare 7, Open UNIX 8
+     AIX	- AIX
+     HURD	- GNU Hurd
+     DGUX	- DG/UX
+     RELIANT	- Reliant UNIX
+     DYNIX	- DYNIX/ptx
+     QNX	- QNX
+     QNX6	- QNX RTP 6.1
+     LYNX	- LynxOS
+     BSD4	- Any BSD 4.4 system
+     UNIX	- Any UNIX BSD/SYSV system
+*/
+
+#if defined(__APPLE__) && defined(__GNUC__)
+#  define Q_OS_MACX
+#elif defined(__MACOSX__)
+#  define Q_OS_MACX
+#elif defined(macintosh)
+#  define Q_OS_MAC9
+#elif defined(__CYGWIN__)
+#  define Q_OS_CYGWIN
+#elif defined(MSDOS) || defined(_MSDOS)
+#  define Q_OS_MSDOS
+#elif defined(__OS2__)
+#  if defined(__EMX__)
+#    define Q_OS_OS2EMX
+#  else
+#    define Q_OS_OS2
+#  endif
+#elif !defined(SAG_COM) && (defined(WIN64) || defined(_WIN64) || defined(__WIN64__))
+#  define Q_OS_WIN32
+#  define Q_OS_WIN64
+#elif !defined(SAG_COM) && (defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__NT__))
+#  define Q_OS_WIN32
+#elif defined(__MWERKS__) && defined(__INTEL__)
+#  define Q_OS_WIN32
+#elif defined(__sun) || defined(sun)
+#  define Q_OS_SOLARIS
+#elif defined(hpux) || defined(__hpux)
+#  define Q_OS_HPUX
+#elif defined(__ultrix) || defined(ultrix)
+#  define Q_OS_ULTRIX
+#elif defined(sinix)
+#  define Q_OS_RELIANT
+#elif defined(__linux__) || defined(__linux)
+#  define Q_OS_LINUX
+#elif defined(__FreeBSD__)
+#  define Q_OS_FREEBSD
+#  define Q_OS_BSD4
+#elif defined(__NetBSD__)
+#  define Q_OS_NETBSD
+#  define Q_OS_BSD4
+#elif defined(__OpenBSD__)
+#  define Q_OS_OPENBSD
+#  define Q_OS_BSD4
+#elif defined(__bsdi__)
+#  define Q_OS_BSDI
+#  define Q_OS_BSD4
+#elif defined(__sgi)
+#  define Q_OS_IRIX
+#elif defined(__osf__)
+#  define Q_OS_OSF
+#elif defined(_AIX)
+#  define Q_OS_AIX
+#elif defined(__Lynx__)
+#  define Q_OS_LYNX
+#elif defined(__GNU_HURD__)
+#  define Q_OS_HURD
+#elif defined(__DGUX__)
+#  define Q_OS_DGUX
+#elif defined(__QNXNTO__)
+#  define Q_OS_QNX6
+#elif defined(__QNX__)
+#  define Q_OS_QNX
+#elif defined(_SEQUENT_)
+#  define Q_OS_DYNIX
+#elif defined(_SCO_DS)      /* SCO OpenServer 5 */
+#  define Q_OS_SCO
+#elif defined(__USLC__)     /* UnixWare 7 + UDK, Open UNIX 8 + OUDK */
+#  define Q_OS_UNIXWARE
+#  define Q_OS_UNIXWARE7
+#elif defined(__svr4__)     /* UnixWare 7 + GCC, Open UNIX 8 + GCC */
+#  define Q_OS_UNIXWARE
+#  define Q_OS_UNIXWARE7
+#else
+#  error "Qt has not been ported to this OS - talk to qt-bugs@trolltech.com"
+#endif
+
+#if defined(Q_OS_MAC9) || defined(Q_OS_MACX)
+#  define Q_OS_MAC
+#endif
+
+#if defined(Q_OS_MAC9) || defined(Q_OS_MSDOS) || defined(Q_OS_OS2) || defined(Q_OS_WIN32) || defined(Q_OS_WIN64)
+#  undef Q_OS_UNIX
+#elif !defined(Q_OS_UNIX)
+#  define Q_OS_UNIX
+#endif
+
+
+/*
+   The compiler, must be one of: (Q_CC_x)
+
+     SYM	- Symantec C++ for both PC and Macintosh
+     MPW	- MPW C++
+     MWERKS	- Metrowerks CodeWarrior
+     MSVC	- Microsoft Visual C/C++
+     BOR	- Borland/Turbo C++
+     WAT	- Watcom C++
+     GNU	- GNU C++
+     COMEAU	- Comeau C++
+     EDG	- Edison Design Group C++
+     OC		- CenterLine C++
+     SUN	- Sun WorkShop, Forte Developer, or Sun ONE Studio C++
+     MIPS	- MIPSpro C++
+     DEC	- DEC C++
+     HP		- HPUX C++
+     HPACC	- HPUX ANSI C++
+     USLC	- SCO OUDK, UDK, and UnixWare 2.X C++
+     CDS	- Reliant C++
+     KAI	- KAI C++
+     INTEL	- Intel C++
+     HIGHC	- MetaWare High C/C++
+     PGI	- Portland Group C++
+     GHS	- Green Hills Optimizing C++ Compilers
+
+   Should be sorted most to least authoritative.
+*/
+
+/* Symantec C++ is now Digital Mars */
+#if defined(__DMC__) || defined(__SC__)
+#  define Q_CC_SYM
+/* "explicit" semantics implemented in 8.1e but keyword recognized since 7.5 */
+#  if defined(__SC__) && __SC__ < 0x750
+#    define Q_NO_EXPLICIT_KEYWORD
+#  endif
+#  define Q_NO_USING_KEYWORD
+#  if !defined(_CPPUNWIND)
+#    define Q_NO_EXCEPTIONS
+#  endif
+
+#elif defined(applec)
+#  define Q_CC_MPW
+#  define Q_NO_BOOL_TYPE
+#  define Q_NO_EXPLICIT_KEYWORD
+#  define Q_NO_USING_KEYWORD
+
+#elif defined(__MWERKS__)
+#  define Q_CC_MWERKS
+/* "explicit" recognized since 4.0d1 */
+#  define QMAC_PASCAL pascal
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#elif defined(_MSC_VER)
+#  define Q_CC_MSVC
+/* proper support of bool for _MSC_VER >= 1100 */
+#  define Q_CANNOT_DELETE_CONSTANT
+#  define Q_INLINE_TEMPLATES inline
+/* Visual C++.Net issues for _MSC_VER >= 1300 */
+#  if _MSC_VER >= 1300
+#    define Q_CC_MSVC_NET
+#    define Q_TYPENAME
+#  endif
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#elif defined(__BORLANDC__) || defined(__TURBOC__)
+#  define Q_CC_BOR
+#  if __BORLANDC__ < 0x502
+#    define Q_NO_BOOL_TYPE
+#    define Q_NO_EXPLICIT_KEYWORD
+#  endif
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#elif defined(__WATCOMC__)
+#  define Q_CC_WAT
+#  if defined(Q_OS_QNX4)
+/* compiler flags */
+#    define Q_TYPENAME
+#    define Q_NO_BOOL_TYPE
+#    define Q_CANNOT_DELETE_CONSTANT
+#    define mutable
+/* ??? */
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+/* no template classes in QVariant */
+#    define QT_NO_TEMPLATE_VARIANT
+/* Wcc does not fill in functions needed by valuelists, maps, and
+   valuestacks implicitly */
+#    define Q_FULL_TEMPLATE_INSTANTIATION
+/* can we just compare the structures? */
+#    define Q_FULL_TEMPLATE_INSTANTIATION_MEMCMP
+/* these are not useful to our customers */
+#    define QT_QWS_NO_SHM
+#    define QT_NO_QWS_MULTIPROCESS
+#    define QT_NO_SQL
+#    define QT_NO_QWS_CURSOR
+#  endif
+
+#elif defined(__GNUC__)
+#  define Q_CC_GNU
+#  define Q_C_CALLBACKS
+#  if __GNUC__ == 2 && __GNUC_MINOR__ <= 7
+#    define Q_FULL_TEMPLATE_INSTANTIATION
+#  endif
+/* GCC 2.95 knows "using" but does not support it correctly */
+#  if __GNUC__ == 2 && __GNUC_MINOR__ <= 95
+#    define Q_NO_USING_KEYWORD
+#  endif
+#  if (defined(__arm__) || defined(__ARMEL__)) && !defined(QT_MOC_CPP)
+#    define Q_PACKED __attribute__ ((packed))
+#  endif
+#  if !defined(__EXCEPTIONS)
+#    define Q_NO_EXCEPTIONS
+#  endif
+
+/* IBM compiler versions are a bit messy. There are actually two products:
+   the C product, and the C++ product. The C++ compiler is always packaged
+   with the latest version of the C compiler. Version numbers do not always
+   match. This little table (I'm not sure it's accurate) should be helpful:
+
+   C++ product                C product
+
+            C Set 3.1         C Compiler 3.0
+                  ...         ...
+   C++ Compiler 3.6.6         C Compiler 4.3
+                  ...         ...
+   Visual Age C++ 4.0         ...
+                  ...         ...
+   Visual Age C++ 5.0         C Compiler 5.0
+
+   Now:
+   __xlC__    is the version of the C compiler in hexadecimal notation
+              is only an approximation of the C++ compiler version
+   __IBMCPP__ is the version of the C++ compiler in decimal notation
+              but it is not defined on older compilers like C Set 3.1 */
+#elif defined(__xlC__)
+#  define Q_CC_XLC
+#  define Q_FULL_TEMPLATE_INSTANTIATION
+#  if __xlC__ < 0x400
+#    define Q_NO_BOOL_TYPE
+#    define Q_NO_EXPLICIT_KEYWORD
+#    define Q_NO_USING_KEYWORD
+#    define Q_TYPENAME
+#    define Q_INLINE_TEMPLATES inline
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    define Q_CANNOT_DELETE_CONSTANT
+#  endif
+
+/* Older versions of DEC C++ do not define __EDG__ or __EDG - observed
+   on DEC C++ V5.5-004. New versions do define  __EDG__ - observed on
+   Compaq C++ V6.3-002.
+   This compiler is different enough from other EDG compilers to handle
+   it separately anyway. */
+#elif defined(__DECCXX)
+#  define Q_CC_DEC
+/* Compaq C++ V6 compilers are EDG-based but I'm not sure about older
+   DEC C++ V5 compilers. */
+#  if defined(__EDG__)
+#    define Q_CC_EDG
+#  endif
+/* Compaq have disabled EDG's _BOOL macro and use _BOOL_EXISTS instead
+   - observed on Compaq C++ V6.3-002.
+   In any case versions prior to Compaq C++ V6.0-005 do not have bool. */
+#  if !defined(_BOOL_EXISTS)
+#    define Q_NO_BOOL_TYPE
+#  endif
+/* Spurious (?) error messages observed on Compaq C++ V6.5-014. */
+#  define Q_NO_USING_KEYWORD
+/* Apply to all versions prior to Compaq C++ V6.0-000 - observed on
+   DEC C++ V5.5-004. */
+#  if __DECCXX_VER < 60060000
+#    define Q_TYPENAME
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    define Q_CANNOT_DELETE_CONSTANT
+#  endif
+/* avoid undefined symbol problems with out-of-line template members */
+#  define Q_INLINE_TEMPLATES inline
+
+/* Compilers with EDG front end are similar. To detect them we test:
+   __EDG documented by SGI, observed on MIPSpro 7.3.1.1 and KAI C++ 4.0b
+   __EDG__ documented in EDG online docs, observed on Compaq C++ V6.3-002 */
+#elif defined(__EDG) || defined(__EDG__)
+#  define Q_CC_EDG
+/* From the EDG documentation (does not seem to apply to Compaq C++):
+   _BOOL
+    	Defined in C++ mode when bool is a keyword. The name of this
+	predefined macro is specified by a configuration flag. _BOOL
+	is the default.
+   __BOOL_DEFINED
+   	Defined in Microsoft C++ mode when bool is a keyword. */
+#  if !defined(_BOOL) && !defined(__BOOL_DEFINED)
+#    define Q_NO_BOOL_TYPE
+#  endif
+
+/* The Portland Group compiler is based on EDG and does define __EDG__ */
+#  if defined(__COMO__)
+#    define Q_CC_COMEAU
+#    define Q_C_CALLBACKS
+
+/* Using the `using' keyword avoids KAI C++ warnings */
+#  elif defined(__KCC)
+#    define Q_CC_KAI
+#    if !defined(_EXCEPTIONS)
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* Using the `using' keyword avoids Intel C++ warnings */
+#  elif defined(__INTEL_COMPILER)
+#    define Q_CC_INTEL
+#    if !defined(__EXCEPTIONS)
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* The Portland Group compiler is based on EDG and does define __EDG__ */
+#  elif defined(__PGI)
+#    define Q_CC_PGI
+#    if !defined(__EXCEPTIONS)
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* Never tested! */
+#  elif defined(__ghs)
+#    define Q_CC_GHS
+
+/* The UnixWare 7 UDK compiler is based on EDG and does define __EDG__ */
+#  elif defined(__USLC__) && defined(__SCO_VERSION__)
+#    define Q_CC_USLC
+/* The latest UDK 7.1.1b does not need this, but previous versions do */
+#    if !defined(__SCO_VERSION__) || (__SCO_VERSION__ < 302200010)
+#      define Q_INLINE_TEMPLATES inline
+#    endif
+#    define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+/* Never tested! */
+#  elif defined(CENTERLINE_CLPP) || defined(OBJECTCENTER)
+#    define Q_CC_OC
+#    define Q_NO_USING_KEYWORD
+
+/* CDS++ defines __EDG__ although this is not documented in the Reliant
+   documentation. It also follows conventions like _BOOL and this documented */
+#  elif defined(sinix)
+#    define Q_CC_CDS
+#    define Q_NO_USING_KEYWORD
+#    if defined(__cplusplus) && (__cplusplus < 2) /* Cfront C++ mode */
+#      define Q_NO_EXCEPTIONS
+#    endif
+
+/* The MIPSpro compiler in o32 mode is based on EDG but disables features
+   such as template specialization nevertheless */
+#  elif defined(__sgi)
+#    define Q_CC_MIPS
+#    if defined(_MIPS_SIM) && (_MIPS_SIM == _ABIO32) /* o32 ABI */
+#      define Q_TYPENAME
+#      define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#      define Q_STRICT_INLINING_RULES
+#    elif defined(_COMPILER_VERSION) && (_COMPILER_VERSION < 730) /* 7.2 */
+#      define Q_TYPENAME
+#      define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    endif
+#    define Q_NO_USING_KEYWORD /* ### check "using" status */
+#  endif
+
+/* The older UnixWare 2.X compiler? */
+#elif defined(__USLC__)
+#  define Q_CC_USLC
+#  define Q_TYPENAME
+#  define Q_NO_BOOL_TYPE
+#  define Q_NO_EXPLICIT_KEYWORD
+#  define Q_NO_USING_KEYWORD
+#  define Q_INLINE_TEMPLATES inline
+
+/* Never tested! */
+#elif defined(__HIGHC__)
+#  define Q_CC_HIGHC
+
+#elif defined(__SUNPRO_CC)
+#  define Q_CC_SUN
+/* 5.0 compiler or better
+    'bool' is enabled by default but can be disabled using -features=nobool
+    in which case _BOOL is not defined
+        this is the default in 4.2 compatibility mode triggered by -compat=4 */
+#  if __SUNPRO_CC >= 0x500
+#    if !defined(_BOOL)
+#      define Q_NO_BOOL_TYPE
+#    endif
+#    if defined(__SUNPRO_CC_COMPAT) && (__SUNPRO_CC_COMPAT <= 4)
+#      define Q_NO_USING_KEYWORD
+#    endif
+#    define Q_C_CALLBACKS
+/* 4.2 compiler or older */
+#  else
+#    define Q_NO_BOOL_TYPE
+#    define Q_NO_EXPLICIT_KEYWORD
+#    define Q_NO_USING_KEYWORD
+#  endif
+
+/* CDS++ does not seem to define __EDG__ or __EDG according to Reliant
+   documentation but nevertheless uses EDG conventions like _BOOL */
+#elif defined(sinix)
+#  define Q_CC_EDG
+#  define Q_CC_CDS
+#  if !defined(_BOOL)
+#    define Q_NO_BOOL_TYPE
+#  endif
+#  define Q_BROKEN_TEMPLATE_SPECIALIZATION
+
+#elif defined(Q_OS_HPUX)
+/* __HP_aCC was not defined in first aCC releases */
+#  if defined(__HP_aCC) || __cplusplus >= 199707L
+#    define Q_CC_HPACC
+#  else
+#    define Q_CC_HP
+#    define Q_NO_BOOL_TYPE
+#    define Q_FULL_TEMPLATE_INSTANTIATION
+#    define Q_BROKEN_TEMPLATE_SPECIALIZATION
+#    define Q_NO_EXPLICIT_KEYWORD
+#  endif
+#  define Q_NO_USING_KEYWORD /* ### check "using" status */
+
+#else
+#  error "Qt has not been tested with this compiler - talk to qt-bugs@trolltech.com"
+#endif
+
+#ifndef Q_PACKED
+#  define Q_PACKED
+#endif
+
+
+/*
+   The window system, must be one of: (Q_WS_x)
+
+     MACX	- Mac OS X
+     MAC9	- Mac OS 9
+     QWS	- Qt/Embedded
+     WIN32	- Windows
+     X11	- X Window System
+     PM		- unsupported
+     WIN16	- unsupported
+*/
+
+#if defined(Q_OS_MAC9)
+#  define Q_WS_MAC9
+#elif defined(Q_OS_MSDOS)
+#  define Q_WS_WIN16
+#  error "Qt requires Win32 and does not work with Windows 3.x"
+#elif defined(_WIN32_X11_)
+#  define Q_WS_X11
+#elif defined(Q_OS_WIN32)
+#  define Q_WS_WIN32
+#  if defined(Q_OS_WIN64)
+#    define Q_WS_WIN64
+#  endif
+#elif defined(Q_OS_OS2)
+#  define Q_WS_PM
+#  error "Qt does not work with OS/2 Presentation Manager or Workplace Shell"
+#elif defined(Q_OS_UNIX)
+#  if defined(QWS)
+#    define Q_WS_QWS
+#    define QT_NO_QWS_IM
+#  elif defined(Q_OS_MACX)
+#    define Q_WS_MACX
+#  else
+#    define Q_WS_X11
+#  endif
+#endif
+#if defined(Q_OS_MAC) && !defined(QMAC_PASCAL)
+#  define QMAC_PASCAL
+#endif
+
+#if defined(Q_WS_WIN16) || defined(Q_WS_WIN32)
+#  define Q_WS_WIN
+#endif
+
+#if (defined(Q_WS_MAC9) || defined(Q_WS_MACX)) && !defined(Q_WS_QWS) && !defined(Q_WS_X11)
+#  define Q_WS_MAC
+#endif
+
+
+/*
+   Some classes do not permit copies to be made of an object.
+   These classes contains a private copy constructor and operator=
+   to disable copying (the compiler gives an error message).
+   Undefine Q_DISABLE_COPY to turn off this checking.
+*/
+
+#define Q_DISABLE_COPY
+
+#if defined(__cplusplus)
+
+
+//
+// Useful type definitions for Qt
+//
+
+#if defined(Q_NO_BOOL_TYPE)
+#if defined(Q_CC_HP)
+// bool is an unsupported reserved keyword in later versions
+#define bool int
+#else
+typedef int bool;
+#endif
+#endif
+
+typedef unsigned char   uchar;
+typedef unsigned short  ushort;
+typedef unsigned	uint;
+typedef unsigned long   ulong;
+typedef char	       *pchar;
+typedef uchar	       *puchar;
+typedef const char     *pcchar;
+
+
+//
+// Constant bool values
+//
+
+#ifndef TRUE
+const bool FALSE = 0;
+const bool TRUE = !0;
+#endif
+#if defined(__WATCOMC__)
+#  if defined(Q_OS_QNX4)
+const bool false = FALSE;
+const bool true = TRUE;
+#  endif
+#endif
+
+
+//
+// Use the "explicit" keyword on platforms that support it.
+//
+
+#if !defined(Q_NO_EXPLICIT_KEYWORD)
+#  define Q_EXPLICIT explicit
+#else
+#  define Q_EXPLICIT
+#endif
+
+
+//
+// Workaround for static const members on MSVC++.
+//
+
+#if defined(Q_CC_MSVC)
+#  define QT_STATIC_CONST static
+#  define QT_STATIC_CONST_IMPL
+#else
+#  define QT_STATIC_CONST static const
+#  define QT_STATIC_CONST_IMPL const
+#endif
+
+
+//
+// Utility macros and inline functions
+//
+
+#define QMAX(a, b)	((b) < (a) ? (a) : (b))
+#define QMIN(a, b)	((a) < (b) ? (a) : (b))
+#define QABS(a)	((a) >= 0  ? (a) : -(a))
+
+inline int qRound( double d )
+{
+    return d >= 0.0 ? int(d + 0.5) : int( d - ((int)d-1) + 0.5 ) + ((int)d-1);
+}
+
+
+//
+// Size-dependent types (architechture-dependent byte order)
+//
+
+#if !defined(QT_CLEAN_NAMESPACE)
+// source compatibility with Qt 1.x
+typedef signed char		INT8;		// 8 bit signed
+typedef unsigned char		UINT8;		// 8 bit unsigned
+typedef short			INT16;		// 16 bit signed
+typedef unsigned short		UINT16;		// 16 bit unsigned
+typedef int			INT32;		// 32 bit signed
+typedef unsigned int		UINT32;		// 32 bit unsigned
+#endif
+
+typedef signed char		Q_INT8;		// 8 bit signed
+typedef unsigned char		Q_UINT8;	// 8 bit unsigned
+typedef short			Q_INT16;	// 16 bit signed
+typedef unsigned short		Q_UINT16;	// 16 bit unsigned
+typedef int			Q_INT32;	// 32 bit signed
+typedef unsigned int		Q_UINT32;	// 32 bit unsigned
+#if defined(Q_OS_WIN64)
+// LLP64 64-bit model on Windows
+typedef __int64			Q_LONG;		// word up to 64 bit signed
+typedef unsigned __int64	Q_ULONG;	// word up to 64 bit unsigned
+#else
+// LP64 64-bit model on Linux
+typedef long			Q_LONG;
+typedef unsigned long		Q_ULONG;
+#endif
+
+#if !defined(QT_CLEAN_NAMESPACE)
+// mininum size of 64 bits is not guaranteed
+#define Q_INT64			Q_LONG
+#define Q_UINT64		Q_ULONG
+#endif
+
+#if defined(Q_OS_MACX) && !defined(QT_LARGEFILE_SUPPORT)
+#  define QT_LARGEFILE_SUPPORT 64
+#endif
+#if defined(QT_LARGEFILE_SUPPORT)
+    typedef unsigned long long QtOffset;
+#else
+    typedef Q_ULONG QtOffset;
+#endif
+
+
+//
+// Data stream functions is provided by many classes (defined in qdatastream.h)
+//
+
+class QDataStream;
+
+
+//
+// Feature subsetting
+//
+// Note that disabling some features will produce a libqt that is not
+// compatible with other libqt builds. Such modifications are only
+// supported on Qt/Embedded where reducing the library size is important
+// and where the application-suite is often a fixed set.
+//
+
+#if !defined(QT_MOC)
+#if defined(QCONFIG_LOCAL)
+#include <qconfig-local.h>
+#elif defined(QCONFIG_MINIMAL)
+#include <qconfig-minimal.h>
+#elif defined(QCONFIG_SMALL)
+#include <qconfig-small.h>
+#elif defined(QCONFIG_MEDIUM)
+#include <qconfig-medium.h>
+#elif defined(QCONFIG_LARGE)
+#include <qconfig-large.h>
+#else // everything...
+#include <qconfig.h>
+#endif
+#endif
+
+
+#ifndef QT_BUILD_KEY
+#define QT_BUILD_KEY "unspecified"
+#endif
+
+// prune to local config
+#include "qmodules.h"
+#ifndef QT_MODULE_ICONVIEW
+# define QT_NO_ICONVIEW
+#endif
+#ifndef QT_MODULE_WORKSPACE
+# define QT_NO_WORKSPACE
+#endif
+#ifndef QT_MODULE_NETWORK
+#define QT_NO_NETWORK
+#endif
+#ifndef QT_MODULE_CANVAS
+# define QT_NO_CANVAS
+#endif
+#ifndef QT_MODULE_TABLE
+#define QT_NO_TABLE
+#endif
+#ifndef QT_MODULE_XML
+# define QT_NO_XML
+#endif
+#ifndef QT_MODULE_OPENGL
+# define QT_NO_OPENGL
+#endif
+#if !defined(QT_MODULE_SQL)
+# define QT_NO_SQL
+#endif
+
+#if defined(Q_WS_MAC9)
+//No need for menu merging
+#  ifndef QMAC_QMENUBAR_NO_MERGE
+#    define QMAC_QMENUBAR_NO_MERGE
+#  endif
+//Mac9 does not use quartz
+#  ifndef QMAC_NO_QUARTZ
+#    define QMAC_NO_QUARTZ
+#  endif
+#  ifndef QMAC_QMENUBAR_NO_EVENT
+#    define QMAC_QMENUBAR_NO_EVENT
+#  endif
+#endif
+#if defined(Q_WS_MACX) //for no nobody uses quartz, just putting in first level hooks
+#  ifndef QMAC_NO_QUARTZ
+#    define QMAC_NO_QUARTZ
+#  endif
+#  ifndef QMAC_QMENUBAR_NO_EVENT
+#    define QMAC_QMENUBAR_NO_EVENT
+#  endif
+#endif
+
+#if !defined(Q_WS_QWS) && !defined(QT_NO_COP)
+#  define QT_NO_COP
+#endif
+
+#ifndef QT_H
+#include <qfeatures.h>
+#endif // QT_H
+
+
+//
+// Create Qt DLL if QT_DLL is defined (Windows only)
+//
+
+#if defined(Q_OS_WIN32) || defined(Q_OS_WIN64)
+#  if defined(QT_NODLL)
+#    undef QT_MAKEDLL
+#    undef QT_DLL
+#  elif defined(QT_MAKEDLL)	/* create a Qt DLL library */
+#    if defined(QT_DLL)
+#      undef QT_DLL
+#    endif
+#    define Q_EXPORT  __declspec(dllexport)
+#    define Q_TEMPLATEDLL
+#    define Q_TEMPLATE_EXTERN
+#    undef  Q_DISABLE_COPY	/* avoid unresolved externals */
+#  elif defined(QT_DLL)		/* use a Qt DLL library */
+#    define Q_EXPORT  __declspec(dllimport)
+#    define Q_TEMPLATEDLL
+#    ifndef Q_TEMPLATE_EXTERN
+#      if defined(Q_CC_MSVC)
+#        define Q_TEMPLATE_EXTERN /*extern*/ //### too many warnings, even though disabled
+#      else
+#        define Q_TEMPLATE_EXTERN
+#      endif
+#    endif
+#    undef  Q_DISABLE_COPY  /* avoid unresolved externals */
+#  endif
+#else
+#  undef QT_MAKEDLL		/* ignore these for other platforms */
+#  undef QT_DLL
+#endif
+
+#ifndef Q_EXPORT
+#  define Q_EXPORT
+#endif
+
+
+//
+// Some platform specific stuff
+//
+
+#if defined(Q_WS_WIN)
+extern Q_EXPORT bool qt_winunicode;
+#endif
+
+
+//
+// System information
+//
+
+Q_EXPORT const char *qVersion();
+Q_EXPORT bool qSysInfo( int *wordSize, bool *bigEndian );
+#if defined(Q_OS_MAC)
+int qMacVersion();
+#elif defined(Q_WS_WIN)
+Q_EXPORT int qWinVersion();
+#if defined(UNICODE)
+#define QT_WA( uni, ansi ) if ( qt_winunicode ) { uni } else { ansi }
+#define QT_WA_INLINE( uni, ansi ) ( qt_winunicode ? uni : ansi )
+#else
+#define QT_WA( uni, ansi ) ansi
+#define QT_WA_INLINE( uni, ansi ) ansi
+#endif
+#endif
+
+#ifdef Q_OS_TEMP
+#ifdef QT_WA
+#undef QT_WA
+#undef QT_WA_INLINE
+#endif
+#define QT_WA( uni, ansi ) uni
+#define QT_WA_INLINE( uni, ansi ) ( uni )
+#endif
+
+#ifndef Q_INLINE_TEMPLATES
+#  define Q_INLINE_TEMPLATES
+#endif
+
+#ifndef Q_TYPENAME
+#  define Q_TYPENAME typename
+#endif
+
+//
+// Use to avoid "unused parameter" warnings
+//
+
+#define Q_UNUSED(x) (void)x;
+
+//
+// Debugging and error handling
+//
+
+#if !defined(QT_NO_CHECK)
+#  define QT_CHECK_STATE			// check state of objects etc.
+#  define QT_CHECK_RANGE			// check range of indexes etc.
+#  define QT_CHECK_NULL				// check null pointers
+#  define QT_CHECK_MATH				// check math functions
+#endif
+
+#if !defined(QT_NO_DEBUG) && !defined(QT_DEBUG)
+#  define QT_DEBUG				// display debug messages
+#  if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+#    if !defined(NO_DEBUG) && !defined(DEBUG)
+#      if !defined(Q_OS_MACX)			// clash with MacOS X headers
+#        define DEBUG
+#      endif
+#    endif
+#  endif
+#endif
+
+
+Q_EXPORT void qDebug( const char *, ... )	// print debug message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void qWarning( const char *, ... )	// print warning message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void qFatal( const char *, ... )	// print fatal message and exit
+#if defined(Q_CC_GNU)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void qSystemWarning( const char *, int code = -1 );
+
+#if !defined(QT_CLEAN_NAMESPACE) 		// compatibility with Qt 1
+
+Q_EXPORT void debug( const char *, ... )	// print debug message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void warning( const char *, ... )	// print warning message
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+Q_EXPORT void fatal( const char *, ... )	// print fatal message and exit
+#if defined(Q_CC_GNU) && !defined(__INSURE__)
+    __attribute__ ((format (printf, 1, 2)))
+#endif
+;
+
+#endif // QT_CLEAN_NAMESPACE
+
+
+#if !defined(Q_ASSERT)
+#  if defined(QT_CHECK_STATE)
+#    if defined(QT_FATAL_ASSERT)
+#      define Q_ASSERT(x)  ((x) ? (void)0 : qFatal("ASSERT: \"%s\" in %s (%d)",#x,__FILE__,__LINE__))
+#    else
+#      define Q_ASSERT(x)  ((x) ? (void)0 : qWarning("ASSERT: \"%s\" in %s (%d)",#x,__FILE__,__LINE__))
+#    endif
+#  else
+#    define Q_ASSERT(x)
+#  endif
+#endif
+
+#if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+#  if !defined(ASSERT)
+#    if !defined(Q_OS_TEMP)
+#      define ASSERT(x) Q_ASSERT(x)
+#    endif
+#  endif
+#endif // QT_NO_COMPAT
+
+
+Q_EXPORT bool qt_check_pointer( bool c, const char *, int );
+
+#if defined(QT_CHECK_NULL)
+#  define Q_CHECK_PTR(p) (qt_check_pointer((p)==0,__FILE__,__LINE__))
+#else
+#  define Q_CHECK_PTR(p)
+#endif
+
+#if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+#  if !defined(CHECK_PTR)
+#    define CHECK_PTR(x) Q_CHECK_PTR(x)
+#  endif
+#endif // QT_NO_COMPAT
+
+enum QtMsgType { QtDebugMsg, QtWarningMsg, QtFatalMsg };
+
+typedef void (*QtMsgHandler)(QtMsgType, const char *);
+Q_EXPORT QtMsgHandler qInstallMsgHandler( QtMsgHandler );
+
+#if !defined(QT_NO_COMPAT)			// compatibility with Qt 2
+typedef QtMsgHandler msg_handler;
+#endif // QT_NO_COMPAT
+
+Q_EXPORT void qSuppressObsoleteWarnings( bool = TRUE );
+
+Q_EXPORT void qObsolete( const char *obj, const char *oldfunc,
+		   const char *newfunc );
+Q_EXPORT void qObsolete( const char *obj, const char *oldfunc );
+Q_EXPORT void qObsolete( const char *message );
+
+
+//
+// Install paths from configure
+//
+
+Q_EXPORT const char *qInstallPath();
+Q_EXPORT const char *qInstallPathDocs();
+Q_EXPORT const char *qInstallPathHeaders();
+Q_EXPORT const char *qInstallPathLibs();
+Q_EXPORT const char *qInstallPathBins();
+Q_EXPORT const char *qInstallPathPlugins();
+Q_EXPORT const char *qInstallPathData();
+
+#endif // __cplusplus
+
+// compilers which follow outdated template instantiation rules
+// require a class to have a comparison operator to exist when
+// a QValueList of this type is instantiated. It's not actually
+// used in the list, though. Hence the dummy implementation.
+// Just in case other code relies on it we better trigger a warning
+// mandating a real implementation.
+#ifdef Q_FULL_TEMPLATE_INSTANTIATION
+#  define Q_DUMMY_COMPARISON_OPERATOR(C) \
+    bool operator==( const C& ) const { \
+        qWarning( #C"::operator==( const "#C"& ) got called." ); \
+        return FALSE; \
+    }
+#else
+#  define Q_DUMMY_COMPARISON_OPERATOR(C)
+#endif
+
+#endif // QGLOBAL_H
+
+//
+// Avoid some particularly useless warnings from some stupid compilers.
+// To get ALL C++ compiler warnings, define QT_CC_WARNINGS or comment out
+// the line "#define QT_NO_WARNINGS"
+//
+
+#if !defined(QT_CC_WARNINGS)
+#  define QT_NO_WARNINGS
+#endif
+#if defined(QT_NO_WARNINGS)
+#  if defined(Q_CC_MSVC)
+#    pragma warning(disable: 4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
+#    pragma warning(disable: 4275) // non - DLL-interface classkey 'identifier' used as base for DLL-interface classkey 'identifier'
+#    pragma warning(disable: 4514) // unreferenced inline/local function has been removed
+#    pragma warning(disable: 4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
+#    pragma warning(disable: 4097) // typedef-name 'identifier1' used as synonym for class-name 'identifier2'
+#    pragma warning(disable: 4706) // assignment within conditional expression
+#    pragma warning(disable: 4786) // truncating debug info after 255 characters
+#    pragma warning(disable: 4660) // template-class specialization 'identifier' is already instantiated
+#    pragma warning(disable: 4355) // 'this' : used in base member initializer list
+#    pragma warning(disable: 4231) // nonstandard extension used : 'extern' before template explicit instantiation
+#  elif defined(Q_CC_BOR)
+#    pragma option -w-inl
+#    pragma option -w-aus
+#    pragma warn -inl
+#    pragma warn -pia
+#    pragma warn -ccc
+#    pragma warn -rch
+#    pragma warn -sig
+#  elif defined(Q_CC_MWERKS)
+#    pragma warn_possunwant off
+#  endif
+#endif
diff -uNbr qt-x11-free-3.1.0/src/tools/qgpluginmanager.cpp qt-x11-free-3.1.0-new/src/tools/qgpluginmanager.cpp
--- qt-x11-free-3.1.0/src/tools/qgpluginmanager.cpp	Thu Nov  7 08:07:22 2002
+++ qt-x11-free-3.1.0-new/src/tools/qgpluginmanager.cpp	Wed Nov 13 09:07:07 2002
@@ -316,7 +316,7 @@
 
 #if defined(Q_OS_WIN32)
     QString filter = "dll";
-#elif defined(Q_OS_MACX)
+#elif defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
     QString filter = "dylib";
 #elif defined(Q_OS_UNIX)
     QString filter = "so";
@@ -329,6 +329,17 @@
 	    continue;
 	libList.append( lib );
     }
+
+#if defined(Q_OS_DARWIN)
+    /* do it again on darwin, since .dylib and .so both exist :P */
+    plugins = QDir(path).entryList( "*.so" );
+    for ( QStringList::Iterator p = plugins.begin(); p != plugins.end(); ++p ) {
+	QString lib = QDir::cleanDirPath( path + "/" + *p );
+	if ( libList.contains( lib ) )
+	    continue;
+	libList.append( lib );
+    }
+#endif
 }
 
 const QLibrary* QGPluginManager::library( const QString& feature ) const
diff -uNbr qt-x11-free-3.1.0/src/tools/qlibrary.cpp qt-x11-free-3.1.0-new/src/tools/qlibrary.cpp
--- qt-x11-free-3.1.0/src/tools/qlibrary.cpp	Thu Nov  7 08:07:22 2002
+++ qt-x11-free-3.1.0-new/src/tools/qlibrary.cpp	Wed Nov 13 09:07:07 2002
@@ -319,11 +319,12 @@
 
     QString filename = libfile;
 
+/* FIXME - do we have to search out both .dylib and .so in darwin? */
 #if defined(Q_WS_WIN)
     if ( filename.findRev( '.' ) <= filename.findRev( '/' ) )
 	filename += ".dll";
-#elif defined(Q_OS_MACX)
-    if ( filename.find( ".dylib" ) == -1 )
+#elif defined(Q_OS_MACX) || defined(Q_OS_DARWIN)
+    if ( filename.find( ".dylib" ) == -1 && filename.find( ".so" ) == -1 )
 	filename += ".dylib";
 #else
     if ( filename.find( ".so" ) == -1 ) {
diff -uNbr qt-x11-free-3.1.0/src/tools/qlibrary_unix.cpp qt-x11-free-3.1.0-new/src/tools/qlibrary_unix.cpp
--- qt-x11-free-3.1.0/src/tools/qlibrary_unix.cpp	Thu Nov  7 08:07:24 2002
+++ qt-x11-free-3.1.0-new/src/tools/qlibrary_unix.cpp	Wed Nov 13 09:07:07 2002
@@ -53,7 +53,7 @@
   It's not too hard to guess what the functions do.
 */
 
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACX)
 
 bool QLibraryPrivate::loadLibrary()
 {
diff -uNbr qt-x11-free-3.1.0/src/tools/qsettings.cpp qt-x11-free-3.1.0-new/src/tools/qsettings.cpp
--- qt-x11-free-3.1.0/src/tools/qsettings.cpp	Thu Nov  7 08:07:21 2002
+++ qt-x11-free-3.1.0-new/src/tools/qsettings.cpp	Wed Nov 13 09:07:07 2002
@@ -455,7 +455,7 @@
 QSettingsPrivate::QSettingsPrivate( QSettings::Format format )
     : groupDirty( TRUE ), modified(FALSE), globalScope(TRUE)
 {
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( format != QSettings::Ini )
 	return;
 #else
@@ -765,7 +765,7 @@
 */
 void QSettings::insertSearchPath( System s, const QString &path)
 {
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd ) {
 	d->sysInsertSearchPath( s, path );
 	return;
@@ -779,12 +779,12 @@
 	return;
     }
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd && s != Unix ) {
 #else
     if ( s != Unix ) {
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_OS_MACX)
 	if(s != Mac) //mac is respected on the mac as well
 #endif
 	    return;
@@ -819,12 +819,12 @@
 	return;
     }
 #endif
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd && s != Unix ) {
 #else
     if ( s != Unix ) {
 #endif
-#if !defined(QWS) && defined(Q_OS_MAC)
+#if !defined(QWS) && defined(Q_OS_MACX)
 	if(s != Mac) //mac is respected on the mac as well
 #endif
 	    return;
@@ -845,7 +845,7 @@
     d = new QSettingsPrivate( Native );
     Q_CHECK_PTR(d);
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     d->sysd = 0;
     d->sysInit();
 #endif
@@ -862,7 +862,7 @@
     d = new QSettingsPrivate( format );
     Q_CHECK_PTR(d);
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     d->sysd = 0;
     if ( format == Native )
 	d->sysInit();
@@ -880,7 +880,7 @@
 {
     sync();
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	d->sysClear();
 #endif
@@ -895,7 +895,7 @@
 */
 bool QSettings::sync()
 {
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysSync();
 #endif
@@ -1027,7 +1027,7 @@
     }
 
     QString theKey = groupKey( group(), key );
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysReadBoolEntry( theKey, def, ok );
 #endif
@@ -1079,7 +1079,7 @@
     }
 
     QString theKey = groupKey( group(), key );
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysReadDoubleEntry( theKey, def, ok );
 #endif
@@ -1125,7 +1125,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysReadNumEntry( theKey, def, ok );
 #endif
@@ -1172,7 +1172,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysReadEntry( theKey, def, ok );
 #endif
@@ -1245,7 +1245,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysWriteEntry( theKey, value );
 #endif
@@ -1277,7 +1277,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysWriteEntry( theKey, value );
 #endif
@@ -1308,7 +1308,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysWriteEntry( theKey, value );
 #endif
@@ -1371,7 +1371,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysWriteEntry( theKey, value );
 #endif
@@ -1432,7 +1432,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysRemoveEntry( theKey );
 #endif
@@ -1511,7 +1511,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysEntryList( theKey );
 #endif
@@ -1608,7 +1608,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return d->sysSubkeyList( theKey );
 #endif
@@ -1701,7 +1701,7 @@
 
     QString theKey = groupKey( group(), key );
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     if ( d->sysd )
 	return QDateTime();
 #endif
@@ -1908,7 +1908,7 @@
 #if defined(Q_WS_WIN)
     actualSearchPath = "/" + domain.mid( 0, lastDot ) + "/" + product;
     insertSearchPath( Windows, actualSearchPath );
-#elif !defined(QWS) && defined(Q_OS_MAC)
+#elif !defined(QWS) && defined(Q_OS_MACX)
     QString topLevelDomain = domain.right( domain.length() - lastDot - 1 ) + ".";
     if ( topLevelDomain.isEmpty() )
 	topLevelDomain = "com.";
diff -uNbr qt-x11-free-3.1.0/src/tools/qsettings_p.h qt-x11-free-3.1.0-new/src/tools/qsettings_p.h
--- qt-x11-free-3.1.0/src/tools/qsettings_p.h	Thu Nov  7 08:07:21 2002
+++ qt-x11-free-3.1.0-new/src/tools/qsettings_p.h	Wed Nov 13 09:07:07 2002
@@ -94,7 +94,7 @@
     bool modified :1;
     bool globalScope :1;
 
-#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MAC))
+#if !defined(QWS) && (defined(Q_WS_WIN) || defined(Q_OS_MACX))
     // system dependent implementations to use the 
     // system specific setting database (ie. registry on Windows)
 
diff -uNbr qt-x11-free-3.1.0/tools/designer/app/main.cpp qt-x11-free-3.1.0-new/tools/designer/app/main.cpp
--- qt-x11-free-3.1.0/tools/designer/app/main.cpp	Thu Sep 19 08:18:07 2002
+++ qt-x11-free-3.1.0-new/tools/designer/app/main.cpp	Wed Nov 13 09:07:07 2002
@@ -174,7 +174,7 @@
 #ifdef Q_WS_WIN
     extern void qInitImages_designerlib();
     qInitImages_designerlib();
-#else
+#elif !defined(Q_OS_DARWIN)
     extern void qInitImages_designer();
     qInitImages_designer();
 #endif
diff -uNbr qt-x11-free-3.1.0/tools/designer/designer/designer.pro qt-x11-free-3.1.0-new/tools/designer/designer/designer.pro
--- qt-x11-free-3.1.0/tools/designer/designer/designer.pro	Fri Oct 25 08:20:52 2002
+++ qt-x11-free-3.1.0-new/tools/designer/designer/designer.pro	Wed Nov 13 09:07:07 2002
@@ -1,5 +1,5 @@
 TEMPLATE	= lib
-CONFIG		+= qt warn_on staticlib qmake_cache
+CONFIG		+= qt warn_on qmake_cache
 CONFIG 		-= dll
 !force_static:!win32:contains(QT_PRODUCT,qt-internal) {
    CONFIG          -= staticlib
diff -uNbr qt-x11-free-3.1.0/tools/designer/designer/mainwindow.cpp qt-x11-free-3.1.0-new/tools/designer/designer/mainwindow.cpp
--- qt-x11-free-3.1.0/tools/designer/designer/mainwindow.cpp	Mon Nov  4 17:55:15 2002
+++ qt-x11-free-3.1.0-new/tools/designer/designer/mainwindow.cpp	Wed Nov 13 09:07:07 2002
@@ -120,7 +120,7 @@
 #ifdef Q_WS_WIN
     extern void qInitImages_designerlib();
     qInitImages_designerlib();
-#else
+#elif !defined(Q_OS_DARWIN)
     extern void qInitImages_designer();
     qInitImages_designer();
 #endif
diff -uNbr qt-x11-free-3.1.0/tools/designer/editor/editor.pro qt-x11-free-3.1.0-new/tools/designer/editor/editor.pro
--- qt-x11-free-3.1.0/tools/designer/editor/editor.pro	Wed Sep 25 04:07:06 2002
+++ qt-x11-free-3.1.0-new/tools/designer/editor/editor.pro	Wed Nov 13 09:07:07 2002
@@ -1,5 +1,5 @@
 TEMPLATE	= lib
-CONFIG		+= qt warn_on staticlib
+CONFIG		+= qt warn_on
 CONFIG		-= dll
 HEADERS		= editor.h  \
 		  parenmatcher.h  \
