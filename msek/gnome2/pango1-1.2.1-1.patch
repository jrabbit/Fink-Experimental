diff -Naur pango-1.2.1.old/Makefile.in pango-1.2.1.new/Makefile.in
--- pango-1.2.1.old/Makefile.in	Thu Jan 30 02:59:20 2003
+++ pango-1.2.1.new/Makefile.in	Thu Feb 13 13:18:26 2003
@@ -118,7 +118,7 @@
 XFT_LIBS = @XFT_LIBS@
 ms_librarian = @ms_librarian@
 
-SUBDIRS = pango modules examples docs tools tests
+SUBDIRS = pango modules docs tools
 
 EXTRA_DIST = \
 	pango.spec.in	\
diff -Naur pango-1.2.1.old/configure pango-1.2.1.new/configure
--- pango-1.2.1.old/configure	Thu Jan 30 02:53:01 2003
+++ pango-1.2.1.new/configure	Wed Feb 19 17:01:18 2003
@@ -5683,10 +5683,10 @@
   darwin* | rhapsody*)
     case "$host_os" in
     rhapsody* | darwin1.[012])
-      allow_undefined_flag='-undefined suppress'
+#      allow_undefined_flag='-undefined suppress'
       ;;
     *) # Darwin 1.3 on
-      allow_undefined_flag='-flat_namespace -undefined suppress'
+#      allow_undefined_flag='-flat_namespace -undefined suppress'
       ;;
     esac
     # FIXME: Relying on posixy $() will cause problems for
@@ -9122,7 +9122,7 @@
 
   if $have_freetype ; then
     pango_save_cppflags="$CPPFLAGS"
-    CPPFLAGS="$CPPFLAGS $FREETYPE_CFLAGS"
+    CPPFLAGS="$FREETYPE_CFLAGS $CPPFLAGS"
 
     echo "$as_me:$LINENO: checking For sufficiently new FreeType (at least 2.0.1)" >&5
 echo $ECHO_N "checking For sufficiently new FreeType (at least 2.0.1)... $ECHO_C" >&6
@@ -9177,7 +9177,7 @@
 
 ## see which freetype we have, 2.0.3 vs. 2.0.4
 pango_save_cppflags="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS $FREETYPE_CFLAGS"
+CPPFLAGS="$FREETYPE_CFLAGS $CPPFLAGS"
 if test "${ac_cv_header_freetype_internal_tterrors_h+set}" = set; then
   echo "$as_me:$LINENO: checking for freetype/internal/tterrors.h" >&5
 echo $ECHO_N "checking for freetype/internal/tterrors.h... $ECHO_C" >&6
diff -Naur pango-1.2.1.old/ltmain.sh pango-1.2.1.new/ltmain.sh
--- pango-1.2.1.old/ltmain.sh	Sat Nov  9 05:40:11 2002
+++ pango-1.2.1.new/ltmain.sh	Thu Feb 13 13:18:26 2003
@@ -4047,10 +4047,10 @@
 
 # Directory that this library needs to be installed in:
 libdir='$install_libdir'"
-	  if test "$installed" = no && test $need_relink = yes; then
-	    $echo >> $output "\
-relink_command=\"$relink_command\""
-	  fi
+#	  if test "$installed" = no && test $need_relink = yes; then
+#	    $echo >> $output "\
+#relink_command=\"$relink_command\""
+#	  fi
 	done
       fi
 
diff -Naur pango-1.2.1.old/modules/thai/Makefile.in pango-1.2.1.new/modules/thai/Makefile.in
--- pango-1.2.1.old/modules/thai/Makefile.in	Thu Jan 30 02:59:28 2003
+++ pango-1.2.1.new/modules/thai/Makefile.in	Wed Feb 19 16:53:55 2003
@@ -124,7 +124,7 @@
 
 pangolibs = $(top_builddir)/pango/libpango-$(PANGO_API_VERSION).la $(FRIBIDI_LIBS) $(GLIB_LIBS)
 pangoxlibs = $(top_builddir)/pango/libpangox-$(PANGO_API_VERSION).la $(X_LIBS) $(pangolibs)
-pangoxftlibs = $(top_builddir)/pango/libpangoxft-$(PANGO_API_VERSION).la $(XFT_LIBS) $(pangolibs)
+pangoxftlibs = $(top_builddir)/pango/libpangoxft-$(PANGO_API_VERSION).la $(XFT_LIBS) $(pangoxlibs)
 pangoft2libs = $(top_builddir)/pango/libpangoft2-$(PANGO_API_VERSION).la $(FREETYPE_LIBS) $(pangolibs)
 @HAVE_XFT_TRUE@@INCLUDE_THAI_XFT_TRUE@XFT_MODULES = 
 @HAVE_XFT_TRUE@@INCLUDE_THAI_XFT_FALSE@XFT_MODULES = @HAVE_XFT_TRUE@@INCLUDE_THAI_XFT_FALSE@pango-thai-xft.la
diff -Naur pango-1.2.1.old/pango/Makefile.in pango-1.2.1.new/pango/Makefile.in
--- pango-1.2.1.old/pango/Makefile.in	Thu Jan 30 02:59:21 2003
+++ pango-1.2.1.new/pango/Makefile.in	Wed Feb 19 16:54:07 2003
@@ -70,7 +70,7 @@
 ECHO = @ECHO@
 EXEEXT = @EXEEXT@
 FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
-FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
+FONTCONFIG_LIBS = @FONTCONFIG_LIBS@ -lfreetype
 FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
 FREETYPE_CONFIG = @FREETYPE_CONFIG@
 FREETYPE_LIBS = @FREETYPE_LIBS@
@@ -138,8 +138,8 @@
 	-DLIBDIR=\"$(libdir)\"				\
 	-DMODULE_VERSION=\"$(PANGO_MODULE_VERSION)\"	\
 	-DG_DISABLE_DEPRECATED				\
-	$(GLIB_CFLAGS)					\
 	$(XFT_CFLAGS)					\
+	$(GLIB_CFLAGS)					\
 	$(FONTCONFIG_CFLAGS)				\
 	$(FREETYPE_CFLAGS)				\
 	$(X_CFLAGS)					\
@@ -164,6 +164,9 @@
 
 @PLATFORM_WIN32_TRUE@no_undefined = @PLATFORM_WIN32_TRUE@-no-undefined
 
+pango_export_symbols = -export-symbols pango.def
+pangoft2_export_symbols = -export-symbols pangoft2.def
+
 @OS_WIN32_TRUE@pango_export_symbols = @OS_WIN32_TRUE@-export-symbols pango.def
 @OS_WIN32_TRUE@pangowin32_export_symbols = @OS_WIN32_TRUE@-export-symbols pangowin32.def
 @OS_WIN32_TRUE@pangoft2_export_symbols = @OS_WIN32_TRUE@-export-symbols pangoft2.def
@@ -226,7 +229,7 @@
 libpango_1_0_la_DEPENDENCIES = $(pango_win32res)
 
 libpangox_1_0_la_LDFLAGS = -version-info $(LT_VERSION_INFO)
-libpangox_1_0_la_LIBADD = libpango-$(PANGO_API_VERSION).la $(INCLUDED_X_MODULES) $(X_LIBS) $(X_EXTRA_LIBS)
+libpangox_1_0_la_LIBADD = libpango-$(PANGO_API_VERSION).la $(INCLUDED_X_MODULES) $(X_LIBS) $(X_EXTRA_LIBS) $(GLIB_LIBS)
 libpangox_1_0_la_DEPENDENCIES = $(INCLUDED_X_MODULES) libpango-$(PANGO_API_VERSION).la
 
 libpangowin32_1_0_la_SOURCES = \
@@ -253,7 +256,7 @@
 
 
 libpangoxft_1_0_la_LDFLAGS = -version-info $(LT_VERSION_INFO)
-libpangoxft_1_0_la_LIBADD = opentype/libpango-ot.la libpango-$(PANGO_API_VERSION).la $(INCLUDED_XFT_MODULES) $(XFT_LIBS) 
+libpangoxft_1_0_la_LIBADD = $(XFT_LIBS) opentype/libpango-ot.la libpango-$(PANGO_API_VERSION).la $(INCLUDED_XFT_MODULES) $(GLIB_LIBS) $(X_LIBS)
 libpangoxft_1_0_la_DEPENDENCIES = $(INCLUDED_XFT_MODULES) libpango-$(PANGO_API_VERSION).la
 
 libpangoft2_1_0_la_SOURCES = \
@@ -309,10 +312,10 @@
 pango_querymodules_SOURCES = \
 	querymodules.c
 
-@HAVE_XFT_TRUE@pango_querymodules_LDADD = @HAVE_XFT_TRUE@$(FT2_BUILD_LIBS) $(X_BUILD_LIBS) libpangoxft-$(PANGO_API_VERSION).la $(GLIB_LIBS) $(FRIBIDI_LIBS) $(XFT_LIBS) $(FONTCONFIG_LIBS)
-@HAVE_XFT_FALSE@pango_querymodules_LDADD = @HAVE_XFT_FALSE@$(FT2_BUILD_LIBS) $(X_BUILD_LIBS) $(WIN32_BUILD_LIBS) $(GLIB_LIBS) $(FRIBIDI_LIBS) $(X_LIBS) $(FONTCONFIG_LIBS) $(X_EXTRA_LIBS)
-@HAVE_XFT_TRUE@pango_querymodules_DEPENDENCIES = @HAVE_XFT_TRUE@$(FT2_BUILD_LIBS) $(X_BUILD_LIBS) libpangoxft-$(PANGO_API_VERSION).la libpango-$(PANGO_API_VERSION).la
-@HAVE_XFT_FALSE@pango_querymodules_DEPENDENCIES = @HAVE_XFT_FALSE@$(FT2_BUILD_LIBS) $(X_BUILD_LIBS) $(WIN32_BUILD_LIBS) libpango-$(PANGO_API_VERSION).la
+@HAVE_XFT_TRUE@pango_querymodules_LDADD = $(X_BUILD_LIBS) libpangoxft-$(PANGO_API_VERSION).la $(GLIB_LIBS) $(FRIBIDI_LIBS)
+@HAVE_XFT_FALSE@pango_querymodules_LDADD = $(X_BUILD_LIBS) $(WIN32_BUILD_LIBS) $(GLIB_LIBS) $(FRIBIDI_LIBS) $(X_LIBS) $(X_EXTRA_LIBS)
+@HAVE_XFT_TRUE@pango_querymodules_DEPENDENCIES = $(X_BUILD_LIBS) libpangoxft-$(PANGO_API_VERSION).la libpango-$(PANGO_API_VERSION).la
+@HAVE_XFT_FALSE@pango_querymodules_DEPENDENCIES = $(X_BUILD_LIBS) $(WIN32_BUILD_LIBS) libpango-$(PANGO_API_VERSION).la
 
 EXTRA_DIST = \
 	$(pango_built_headers)			\
diff -Naur pango-1.2.1.old/pango/opentype/Makefile.in pango-1.2.1.new/pango/opentype/Makefile.in
--- pango-1.2.1.old/pango/opentype/Makefile.in	Thu Jan 30 02:59:22 2003
+++ pango-1.2.1.new/pango/opentype/Makefile.in	Wed Feb 19 16:54:45 2003
@@ -123,9 +123,9 @@
 	-DSYSCONFDIR=\"$(sysconfdir)\"		\
 	-DLIBDIR=\"$(libdir)\"			\
 	-DG_DISABLE_DEPRECATED			\
+	$(X_CFLAGS)				\
 	$(GLIB_CFLAGS)				\
 	$(FREETYPE_CFLAGS)			\
-	$(X_CFLAGS)				\
 	-I$(top_srcdir)
 
 
@@ -140,6 +140,8 @@
 noinst_LTLIBRARIES = libpango-ot.la
 
 libpango_ot_la_SOURCES = \
+	ftcompat.c		\
+	ftcompat.h		\
 	fterrcompat.h		\
 	ftxopen.c	 	\
 	ftxopen.h	 	\
@@ -187,7 +189,7 @@
 X_PRE_LIBS = @X_PRE_LIBS@
 libpango_ot_la_LDFLAGS = 
 libpango_ot_la_LIBADD = 
-libpango_ot_la_OBJECTS =  ftxopen.lo ftxgdef.lo ftxgpos.lo ftxgsub.lo \
+libpango_ot_la_OBJECTS =  ftcompat.lo ftxopen.lo ftxgdef.lo ftxgpos.lo ftxgsub.lo \
 pango-ot-info.lo pango-ot-ruleset.lo
 @BUILD_OT_TESTS_TRUE@noinst_PROGRAMS =  ottest$(EXEEXT)
 PROGRAMS =  $(noinst_PROGRAMS)
@@ -334,6 +336,7 @@
 	    || cp -p $$d/$$file $(distdir)/$$file || :; \
 	  fi; \
 	done
+ftcompat.lo ftcompat.o: ftcompat.c ftcompat.h
 disasm.o: disasm.c disasm.h ftxopen.h ftxgdef.h ftxgsub.h ftxgpos.h
 ftxgdef.lo ftxgdef.o : ftxgdef.c fterrcompat.h ../../config.h ftxopen.h \
 	ftxgdef.h ftxgsub.h ftxgpos.h ftxopenf.h
diff -Naur pango-1.2.1.old/pango/opentype/ftcompat.c pango-1.2.1.new/pango/opentype/ftcompat.c
--- pango-1.2.1.old/pango/opentype/ftcompat.c	Thu Jan  1 09:00:00 1970
+++ pango-1.2.1.new/pango/opentype/ftcompat.c	Wed Feb 19 16:54:45 2003
@@ -0,0 +1,248 @@
+/*
+ *  ftcompat.c
+ *
+ *    Provides binary compatibility between freetype 2.0.x and 2.1.x.
+ *
+ *  Copyright 2003 by
+ *  Masanori Sekino <msek@users.sourceforge.net>
+ */
+
+#include "ftcompat.h"
+
+
+#define FTX_BYTE_( p, i )	( ((const FT_Byte*)(p))[(i)] )
+#define FTX_INT8_( p, i )	( ((const FT_Char*)(p))[(i)] )
+
+#define FTX_INT16( x )		( (FT_Int16)(x)  )
+#define FTX_UINT16( x )		( (FT_UInt16)(x) )
+#define FTX_INT32( x )		( (FT_Int32)(x)  )
+#define FTX_UINT32( x )		( (FT_UInt32)(x) )
+
+#define FTX_BYTE_I16( p, i, s )	( FTX_INT16(  FTX_BYTE_( p, i ) ) << (s) )
+#define FTX_BYTE_U16( p, i, s )	( FTX_UINT16( FTX_BYTE_( p, i ) ) << (s) )
+#define FTX_BYTE_I32( p, i, s )	( FTX_INT32(  FTX_BYTE_( p, i ) ) << (s) )
+#define FTX_BYTE_U32( p, i, s )	( FTX_UINT32( FTX_BYTE_( p, i ) ) << (s) )
+
+#define FTX_INT8_I16( p, i, s )	( FTX_INT16(  FTX_INT8_( p, i ) ) << (s) )
+#define FTX_INT8_U16( p, i, s )	( FTX_UINT16( FTX_INT8_( p, i ) ) << (s) )
+#define FTX_INT8_I32( p, i, s )	( FTX_INT32(  FTX_INT8_( p, i ) ) << (s) )
+#define FTX_INT8_U32( p, i, s )	( FTX_UINT32( FTX_INT8_( p, i ) ) << (s) )
+
+
+#define FTX_PEEK_SHORT( p )	FTX_INT16( FTX_INT8_I16( p, 0, 8) | \
+					   FTX_BYTE_I16( p, 1, 0) )
+
+#define FTX_PEEK_USHORT( p )	FTX_UINT16( FTX_BYTE_U16( p, 0, 8 ) | \
+					    FTX_BYTE_U16( p, 1, 0 ) )
+
+#define FTX_PEEK_LONG( p )	FTX_INT32( FTX_INT8_I32( p, 0, 24 ) | \
+					   FTX_BYTE_I32( p, 1, 16 ) | \
+					   FTX_BYTE_I32( p, 2,  8 ) | \
+					   FTX_BYTE_I32( p, 3,  0 ) )
+
+#define FTX_PEEK_ULONG( p )	FTX_UINT32( FTX_BYTE_U32( p, 0, 24 ) | \
+					    FTX_BYTE_U32( p, 1, 16 ) | \
+					    FTX_BYTE_U32( p, 2,  8 ) | \
+					    FTX_BYTE_U32( p, 3,  0 ) )
+
+#define FTX_PEEK_OFF3( p )	FTX_INT32( FTX_INT8_I32( p, 0, 16 ) | \
+					   FTX_BYTE_I32( p, 1,  8 ) | \
+					   FTX_BYTE_I32( p, 2,  0 ) )
+
+#define FTX_PEEK_UOFF3( p )	FTX_UINT32( FTX_BYTE_U32( p, 0, 16 ) | \
+					    FTX_BYTE_U32( p, 1,  8 ) | \
+					    FTX_BYTE_U32( p, 2,  0 ) )
+
+
+#define FTX_NEXT_CHAR( buffer ) \
+	( (signed char)*buffer++ )
+
+#define FTX_NEXT_BYTE( buffer ) \
+	( (unsigned char)*buffer++ )
+
+#define FTX_NEXT_SHORT( buffer ) \
+	( (short)( buffer += 2, FTX_PEEK_SHORT( buffer - 2 ) ) )
+  
+#define FTX_NEXT_USHORT( buffer ) \
+	( (unsigned short)( buffer += 2, FTX_PEEK_USHORT( buffer - 2 ) ) )
+
+#define FTX_NEXT_OFF3( buffer ) \
+	( (long)( buffer += 3, FTX_PEEK_OFF3( buffer - 3 ) ) )
+
+#define FTX_NEXT_UOFF3( buffer ) \
+	( (unsigned long)( buffer += 3, FTX_PEEK_UOFF3( buffer - 3 ) ) )
+
+#define FTX_NEXT_LONG( buffer ) \
+	( (long)( buffer += 4, FTX_PEEK_LONG( buffer - 4 ) ) )
+
+#define FTX_NEXT_ULONG( buffer ) \
+	( (unsigned long)( buffer += 4, FTX_PEEK_ULONG( buffer - 4 ) ) )
+
+
+  FT_BASE_DEF( FT_Char )
+  FTX_Stream_GetChar( FT_Stream  stream )
+  {
+    FT_Char  result;
+
+
+    result = 0;
+    if ( stream->cursor < stream->limit )
+      result = *stream->cursor++;
+
+    return result;
+  }
+
+
+  FT_BASE_DEF( FT_Short )
+  FTX_Stream_GetShort( FT_Stream  stream )
+  {
+    FT_Byte*  p;
+    FT_Short  result;
+   
+    
+    result         = 0;
+    p              = stream->cursor;
+    if ( p + 1 < stream->limit )
+      result       = FTX_NEXT_SHORT( p );
+    stream->cursor = p;
+       
+    return result;
+  }        
+
+
+  FT_BASE_DEF( FT_Long )
+  FTX_Stream_GetOffset( FT_Stream  stream )
+  {
+    FT_Byte*  p;
+    FT_Long   result;
+
+
+    result         = 0;
+    p              = stream->cursor;
+    if ( p + 2 < stream->limit )
+      result       = FTX_NEXT_OFF3( p );
+    stream->cursor = p;
+    return result;
+  }
+
+
+  FT_BASE_DEF( FT_Long )
+  FTX_Stream_GetLong( FT_Stream  stream )
+  {
+    FT_Byte*  p;
+    FT_Long   result;
+
+
+    result         = 0;
+    p              = stream->cursor;
+    if ( p + 3 < stream->limit )
+      result       = FTX_NEXT_LONG( p );
+    stream->cursor = p;
+    return result;
+  }
+
+
+  FT_BASE_DEF( FT_Error )
+  FTX_Stream_Seek( FT_Stream  stream,
+                  FT_ULong   pos )
+  {
+    FT_Error  error = FT_Err_Ok;
+
+
+    stream->pos = pos;
+
+    if ( stream->read )
+    {
+      if ( stream->read( stream, pos, 0, 0 ) )
+      {
+        FT_ERROR(( "FT_Stream_Seek: invalid i/o; pos = 0x%lx, size = 0x%lx\n",
+                   pos, stream->size ));
+
+        error = FT_Err_Invalid_Stream_Operation;
+      }
+    }
+    /* note that seeking to the first position after the file is valid */
+    else if ( pos > stream->size )
+    {
+      FT_ERROR(( "FT_Stream_Seek: invalid i/o; pos = 0x%lx, size = 0x%lx\n",
+                 pos, stream->size ));
+
+      error = FT_Err_Invalid_Stream_Operation;
+    }
+
+    return error;
+  }
+
+
+  FT_BASE_DEF( FT_Error )
+  FTX_Stream_EnterFrame( FT_Stream  stream,
+                        FT_ULong   count )
+  {
+    FT_Error  error = FT_Err_Ok;
+    FT_ULong  read_bytes;
+
+
+    if ( stream->read )
+    {
+      /* allocate the frame in memory */
+      FT_Memory  memory = stream->memory;
+
+
+      if ( ALLOC( stream->base, count ) )
+        goto Exit;
+
+      /* read it */
+      read_bytes = stream->read( stream, stream->pos,
+                                 stream->base, count );
+      if ( read_bytes < count )
+      {
+        FT_ERROR(( "FT_Stream_EnterFrame:" ));
+        FT_ERROR(( " invalid read; expected %lu bytes, got %lu\n",
+                   count, read_bytes ));
+
+        FREE( stream->base );
+        error = FT_Err_Invalid_Stream_Operation;
+      }
+      stream->cursor = stream->base;
+      stream->limit  = stream->cursor + count;
+      stream->pos   += read_bytes;
+    }
+    else
+    {
+      /* check current and new position */
+      if ( stream->pos >= stream->size        ||
+           stream->pos + count > stream->size )
+      {
+        FT_ERROR(( "FT_Stream_EnterFrame:" ));
+        FT_ERROR(( " invalid i/o; pos = 0x%lx, count = %lu, size = 0x%lx\n",
+                   stream->pos, count, stream->size ));
+
+        error = FT_Err_Invalid_Stream_Operation;
+        goto Exit;
+      }
+
+      /* set cursor */
+      stream->cursor = stream->base + stream->pos;
+      stream->limit  = stream->cursor + count;
+      stream->pos   += count;
+    }
+
+  Exit:
+    return error;
+  }
+
+
+  FT_BASE_DEF( void )
+  FTX_Stream_ExitFrame( FT_Stream  stream )
+  {
+    if ( stream->read )
+    {
+      FT_Memory  memory = stream->memory;
+
+
+      FREE( stream->base );
+    }
+    stream->cursor = 0;
+    stream->limit  = 0;
+  }
+
diff -Naur pango-1.2.1.old/pango/opentype/ftcompat.h pango-1.2.1.new/pango/opentype/ftcompat.h
--- pango-1.2.1.old/pango/opentype/ftcompat.h	Thu Jan  1 09:00:00 1970
+++ pango-1.2.1.new/pango/opentype/ftcompat.h	Wed Feb 19 16:54:45 2003
@@ -0,0 +1,105 @@
+/*
+ *  ftcompat.h
+ *
+ *    Provides binary compatibility between freetype 2.0.x and 2.1.x.
+ *
+ *  Copyright 2003 by
+ *  Masanori Sekino <msek@users.sourceforge.net>
+ */
+
+#ifndef FTCOMPAT_H
+#define FTCOMPAT_H
+
+
+#include <freetype/internal/ftdebug.h>
+#include <freetype/internal/ftstream.h>
+
+#undef ALLOC_ARRAY
+#undef REALLOC_ARRAY
+#undef ALLOC
+#undef FREE
+#undef MEM_Copy
+
+#undef FILE_Pos
+#undef FILE_Seek
+#undef ACCESS_Frame
+#undef FORGET_Frame
+
+#undef GET_Char
+#undef GET_Byte
+#undef GET_Short
+#undef GET_UShort
+#undef GET_Offset
+#undef GET_UOffset
+#undef GET_Long
+#undef GET_ULong
+#undef GET_Tag4
+
+
+#define FTX_GET_MACRO( func, type )	( (type)func( stream ) )
+
+#define GET_Char()	FTX_GET_MACRO( FTX_Stream_GetChar, FT_Char )
+#define GET_Byte()	FTX_GET_MACRO( FTX_Stream_GetChar, FT_Byte )
+#define GET_Short()	FTX_GET_MACRO( FTX_Stream_GetShort, FT_Short )
+#define GET_UShort()	FTX_GET_MACRO( FTX_Stream_GetShort, FT_UShort )
+#define GET_Offset()	FTX_GET_MACRO( FTX_Stream_GetOffset, FT_Long )
+#define GET_UOffset()	FTX_GET_MACRO( FTX_Stream_GetOffset, FT_ULong )
+#define GET_Long()	FTX_GET_MACRO( FTX_Stream_GetLong, FT_Long )
+#define GET_ULong()	FTX_GET_MACRO( FTX_Stream_GetLong, FT_ULong )
+#define GET_Tag4()	FTX_GET_MACRO( FTX_Stream_GetLong, FT_ULong )
+
+#define FTX_MEM_ALLOC( _pointer_, _size_ ) \
+	FT_Alloc( memory, _size_, (void**)&(_pointer_) )
+#define FTX_MEM_FREE( _pointer_ ) \
+	FT_Free( memory, (void**)&(_pointer_) )
+#define FTX_MEM_REALLOC( _pointer_, _current_, _size_ ) \
+	FT_Realloc( memory, _current_, _size_, (void**)&(_pointer_) )
+
+#define ALLOC_ARRAY( _pointer_, _count_, _type_ ) \
+	FT_SET_ERROR( FTX_MEM_ALLOC( _pointer_, (_count_) * sizeof ( _type_ ) ) )
+#define REALLOC_ARRAY( _pointer_, _old_, _new_, _type_ ) \
+	FT_SET_ERROR( FTX_MEM_REALLOC( _pointer_, (_old_) * sizeof ( _type_ ), \
+                                                  (_new_) * sizeof ( _type_ ) ) )
+#define ALLOC( _pointer_, _size_ ) \
+	FT_SET_ERROR( FTX_MEM_ALLOC( _pointer_, _size_ ) )
+#define FREE( _pointer_ ) \
+	FTX_MEM_FREE( _pointer_ )
+#define MEM_Copy( dest, source, count ) \
+	memcpy( dest, source, count )
+
+#define FILE_Pos() \
+	FT_Stream_Pos( stream )
+#define FILE_Seek( position ) \
+	FT_SET_ERROR( FTX_Stream_Seek( stream, position ) )
+#define ACCESS_Frame( size ) \
+	FT_SET_ERROR( FTX_Stream_EnterFrame( stream, size ) )
+#define FORGET_Frame() \
+	FTX_Stream_ExitFrame( stream )
+
+
+  FT_BASE( FT_Char )
+  FTX_Stream_GetChar( FT_Stream  stream );
+                                        
+  FT_BASE( FT_Short )
+  FTX_Stream_GetShort( FT_Stream  stream );
+  
+  FT_BASE( FT_Long )                      
+  FTX_Stream_GetOffset( FT_Stream  stream );
+
+  FT_BASE( FT_Long )
+  FTX_Stream_GetLong( FT_Stream  stream );
+
+  FT_BASE( FT_Error )
+  FTX_Stream_Seek( FT_Stream  stream,
+                   FT_ULong   pos );
+
+  FT_BASE( FT_Error )
+  FTX_Stream_EnterFrame( FT_Stream  stream,
+                         FT_ULong   count );
+
+  FT_BASE( void )
+  FTX_Stream_ExitFrame( FT_Stream  stream );
+
+
+#endif /* FTCOMPAT_H */
+
diff -Naur pango-1.2.1.old/pango/opentype/fterrcompat.h pango-1.2.1.new/pango/opentype/fterrcompat.h
--- pango-1.2.1.old/pango/opentype/fterrcompat.h	Wed Apr 24 05:20:29 2002
+++ pango-1.2.1.new/pango/opentype/fterrcompat.h	Wed Feb 19 16:54:45 2003
@@ -48,4 +48,6 @@
 
 #endif /* >= 2.1.0 */
 
+#include "ftcompat.h"
+
 #endif /* FTERRCOMPAT_H */
diff -Naur pango-1.2.1.old/update-pango-modules pango-1.2.1.new/update-pango-modules
--- pango-1.2.1.old/update-pango-modules	Thu Jan  1 09:00:00 1970
+++ pango-1.2.1.new/update-pango-modules	Thu Feb 13 13:18:26 2003
@@ -0,0 +1,20 @@
+#!/bin/sh -e
+#
+# update-pango-modules
+#
+#   Package which install pango module(s) should call update-pango-modules in
+#   it's PostInstScript/PostRmScript to update pango.module file.
+#
+
+CONFDIR=@PREFIX@/etc/pango
+CONFFILE=$CONFDIR/pango.modules
+
+mkdir -p $CONFDIR
+
+TMPFILE=`tempfile`
+pango-querymodules >$TMPFILE
+
+mv -f $TMPFILE $CONFFILE
+chmod 0644 $CONFFILE
+
+exit 0
