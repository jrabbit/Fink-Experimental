diff -Naur pango-1.0.5.old/Makefile.in pango-1.0.5.new/Makefile.in
--- pango-1.0.5.old/Makefile.in	Mon Oct 14 01:50:47 2002
+++ pango-1.0.5.new/Makefile.in	Tue Nov 26 02:13:26 2002
@@ -116,7 +116,7 @@
 YACC = @YACC@
 ms_librarian = @ms_librarian@
 
-SUBDIRS = pango modules examples docs tools tests
+SUBDIRS = pango modules docs tools
 
 EXTRA_DIST = \
 	pango.spec.in	\
diff -Naur pango-1.0.5.old/configure pango-1.0.5.new/configure
--- pango-1.0.5.old/configure	Mon Oct 14 01:41:22 2002
+++ pango-1.0.5.new/configure	Tue Nov 26 02:13:26 2002
@@ -5522,7 +5522,7 @@
     # FIXME: Relying on posixy $() will cause problems for
     #        cross-compilation, but unfortunately the echo tests do not
     #        yet detect zsh echo's removal of \ escapes.
-    archive_cmds='$nonopt $(test "x$module" = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags -install_name $rpath/$soname $verstring'
+    archive_cmds='$nonopt $(test x$module = xyes && echo -bundle || echo -dynamiclib) $allow_undefined_flag -o $lib $libobjs $deplibs$linker_flags $(test .$module != .yes && echo -install_name $rpath/$soname $tmp_verstring)'
     # We need to add '_' to the symbols in $export_symbols first
     #archive_expsym_cmds="$archive_cmds"' && strip -s $export_symbols'
     hardcode_direct=yes
@@ -9365,7 +9365,7 @@
 
   if $have_freetype ; then
     pango_save_cppflags="$CPPFLAGS"
-    CPPFLAGS="$CPPFLAGS $FREETYPE_CFLAGS"
+    CPPFLAGS="$FREETYPE_CFLAGS $CPPFLAGS"
 
     echo "$as_me:$LINENO: checking For sufficiently new FreeType (at least 2.0.1)" >&5
 echo $ECHO_N "checking For sufficiently new FreeType (at least 2.0.1)... $ECHO_C" >&6
@@ -9435,7 +9435,7 @@
 
 ## see which freetype we have, 2.0.3 vs. 2.0.4
 pango_save_cppflags="$CPPFLAGS"
-CPPFLAGS="$CPPFLAGS $FREETYPE_CFLAGS"
+CPPFLAGS="$FREETYPE_CFLAGS $CPPFLAGS"
 if test "${ac_cv_header_freetype_internal_tterrors_h+set}" = set; then
   echo "$as_me:$LINENO: checking for freetype/internal/tterrors.h" >&5
 echo $ECHO_N "checking for freetype/internal/tterrors.h... $ECHO_C" >&6
diff -Naur pango-1.0.5.old/ltmain.sh pango-1.0.5.new/ltmain.sh
--- pango-1.0.5.old/ltmain.sh	Tue Aug 20 10:13:37 2002
+++ pango-1.0.5.new/ltmain.sh	Tue Nov 26 02:13:26 2002
@@ -2952,7 +2952,17 @@
 	if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
 	  eval cmds=\"$archive_expsym_cmds\"
 	else
+	  if test "x$verstring" = "x0.0"; then
+	    tmp_verstring=
+	  else
+	    tmp_verstring="$verstring"
+	  fi
+	  save_deplibs="$deplibs"
+	  for conv in $convenience; do
+	    deplibs="${deplibs%$conv*} ${deplibs#*$conv}"
+	  done
 	  eval cmds=\"$archive_cmds\"
+	  deplibs="$save_deplibs"
 	fi
 	save_ifs="$IFS"; IFS='~'
 	for cmd in $cmds; do
@@ -4006,10 +4016,10 @@
 
 # Directory that this library needs to be installed in:
 libdir='$install_libdir'"
-	  if test "$installed" = no && test "$need_relink" = yes; then
-	    $echo >> $output "\
-relink_command=\"$relink_command\""
-	  fi
+#	  if test "$installed" = no && test "$need_relink" = yes; then
+#	    $echo >> $output "\
+#relink_command=\"$relink_command\""
+#	  fi
 	done
       fi
 
diff -Naur pango-1.0.5.old/pango/Makefile.in pango-1.0.5.new/pango/Makefile.in
--- pango-1.0.5.old/pango/Makefile.in	Mon Oct 14 01:50:48 2002
+++ pango-1.0.5.new/pango/Makefile.in	Tue Nov 26 02:13:26 2002
@@ -249,7 +249,7 @@
 
 
 libpangoxft_1_0_la_LDFLAGS = -version-info $(LT_VERSION_INFO)
-libpangoxft_1_0_la_LIBADD = opentype/libpango-ot.la libpango-$(PANGO_API_VERSION).la $(INCLUDED_XFT_MODULES) $(XFT_LIBS) 
+libpangoxft_1_0_la_LIBADD = $(XFT_LIBS) opentype/libpango-ot.la libpango-$(PANGO_API_VERSION).la $(INCLUDED_XFT_MODULES)
 libpangoxft_1_0_la_DEPENDENCIES = $(INCLUDED_XFT_MODULES) libpango-$(PANGO_API_VERSION).la
 
 libpangoft2_1_0_la_SOURCES = \
diff -Naur pango-1.0.5.old/pango/pangoxft-font.c pango-1.0.5.new/pango/pangoxft-font.c
--- pango-1.0.5.old/pango/pangoxft-font.c	Fri Aug  9 08:25:30 2002
+++ pango-1.0.5.new/pango/pangoxft-font.c	Tue Nov 26 02:13:26 2002
@@ -544,7 +544,7 @@
   face = pango_xft_font_get_face (font);
 
   coverage = pango_coverage_new ();
-#ifdef HAVE_FT_GET_FIRST_CHAR
+#if 0 /* #ifdef HAVE_FT_GET_FIRST_CHAR */
   {
     FT_UInt gindex;
     FT_ULong charcode;
diff -Naur pango-1.0.5.old/pango.conf pango-1.0.5.new/pango.conf
--- pango-1.0.5.old/pango.conf	Thu Jan  1 09:00:00 1970
+++ pango-1.0.5.new/pango.conf	Tue Nov 26 02:11:17 2002
@@ -0,0 +1,35 @@
+## Defoma configuration file for Pango
+
+## @UNSUPPORTED_XLFD are the lists of XLFD which is not supported by defoma.
+## this value will avoid when supported XLFD may be not enough.
+##
+## family(case sensitive)-style-variant-weight-stretch => XLFDs
+%UNSUPPORTED_XLFD = (
+  "sans-normal-normal-normal-normal" =>
+    "-*-helvetica-medium-r-normal--*-*-*-*-*-*-*-*",
+  "sans-italic-normal-normal-normal" =>
+    "-*-helvetica-medium-o-normal--*-*-*-*-*-*-*-*",
+  "sans-normal-normal-bold-normal" =>
+    "-*-helvetica-bold-r-normal--*-*-*-*-*-*-*-*",
+  "sans-italic-normal-bold-normal" =>
+    "-*-helvetica-bold-o-normal--*-*-*-*-*-*-*-*",
+  "serif-normal-normal-normal-normal" =>
+    "-*-times-medium-r-normal--*-*-*-*-*-*-*-*",
+  "serif-italic-normal-normal-normal" =>
+    "-*-times-medium-i-normal--*-*-*-*-*-*-*-*",
+  "serif-normal-normal-bold-normal" =>
+    "-*-times-bold-r-normal--*-*-*-*-*-*-*-*",
+  "serif-italic-normal-bold-normal" =>
+    "-*-times-bold-i-normal--*-*-*-*-*-*-*-*",
+#  "monospace-normal-normal-normal-normal" =>
+#    "",
+#  "monospace-italic-normal-normal-normal" =>
+#    "",
+#  "monospace-normal-normal-bold-normal" =>
+#    "",
+#  "monospace-italic-normal-bold-normal" =>
+#    "",
+);
+
+## require this. do not delete.
+1;
diff -Naur pango-1.0.5.old/pango.defoma pango-1.0.5.new/pango.defoma
--- pango-1.0.5.old/pango.defoma	Thu Jan  1 09:00:00 1970
+++ pango-1.0.5.new/pango.defoma	Tue Nov 26 02:13:16 2002
@@ -0,0 +1,341 @@
+@ACCEPT_CATEGORIES = qw(xfont);
+
+package pango;
+
+use strict;
+use POSIX;
+use Debian::Defoma::Common;
+use Debian::Defoma::Font;
+use Debian::Defoma::Id;
+use vars qw($ROOTDIR %UNSUPPORTED_XLFD);
+
+import Debian::Defoma::Common;
+import Debian::Defoma::Font;
+import Debian::Defoma::Id;
+
+my @Families = qw(sans serif monospace);
+my @Encodings = qw(iso8859_1 iso10646 other);
+
+my %Ids;
+my $PkgDir = $ROOTDIR . '/pango.d';
+my $PangoAlias = $PkgDir . '/pangox.aliases';
+my $PangoAliases = '@PREFIX@/etc/pango/pangox.aliases';
+my $ConfFile = '@PREFIX@/etc/defoma/config/pango.conf';
+my $term = 0;
+my $init = 0;
+
+## This function generates each element of XLFD from hashed hints, and
+## returns in a hashed XLFD.
+
+sub get_xlfd_element {
+	my @xlfd = split (/-/, shift);
+	my $ret = {};
+
+	$ret->{Foundry} = $xlfd[1];
+	$ret->{Family} = $xlfd[2];
+	$ret->{Weight} = $xlfd[3];
+	$ret->{Slant} = $xlfd[4];
+	$ret->{SetWidth} = $xlfd[5];
+	$ret->{Style} = $xlfd[6];
+	$ret->{Pixel} = $xlfd[7];
+	$ret->{Point} = $xlfd[8];
+	$ret->{ResX} = $xlfd[9];
+	$ret->{ResY} = $xlfd[10];
+	$ret->{Spacing} = $xlfd[11];
+	$ret->{AvgWidth} = $xlfd[12];
+	$ret->{Encoding} = "$xlfd[13]-$xlfd[14]";
+
+	return $ret;
+}
+
+## Returns a string XLFD from hashed XLFD.
+sub generate_xlfd {
+	my $xe = shift;
+	my $enc = $xe->{Encoding};
+
+	$enc = '*-*' if ($xe->{Encoding} =~ /iso8859-1/);
+	return join ('-', '', $xe->{Foundry}, $xe->{Family}, $xe->{Weight},
+		     $xe->{Slant}, $xe->{SetWidth}, $xe->{Style}, '*', '*',
+		     '*', '*', '*', '*', $enc);
+}
+
+# store XLFD
+sub store_xlfd {
+	my $Id = shift;
+	my @cache = defoma_id_grep_cache ($Id, 'installed', sorttype => 'p');
+	my @nnnn_xlfd = ();
+	my @innn_xlfd = ();
+	my @nnbn_xlfd = ();
+	my @inbn_xlfd = ();
+	my $xe;
+	my $xlfd;
+
+	foreach my $i (@cache) {
+		my $font = $Id->{1}->[$i];
+		$font =~ s/_/ /g;
+		$xe = get_xlfd_element ($font);
+		$xlfd = generate_xlfd ($xe);
+
+		if ($xe->{Weight} =~ /bold/ && ($xe->{Slant} eq 'o' || $xe->{Slant} eq 'i')) {
+			push (@inbn_xlfd, $xlfd) if (!grep (/$xe->{Foundry}-$xe->{Family}-$xe->{Encoding}/, @inbn_xlfd));
+			next;
+		}
+		if ($xe->{Weight} !~ /bold/ && ($xe->{Slant} eq 'o' || $xe->{Slant} eq 'i')) {
+			push (@innn_xlfd, $xlfd) if (!grep (/$xe->{Foundry}-$xe->{Family}-$xe->{Encoding}/, @innn_xlfd));
+			next;
+		}
+		if ($xe->{Weight} =~ /bold/ && $xe->{Slant} =~ /r/) {
+			push (@nnbn_xlfd, $xlfd) if (!grep (/$xe->{Foundry}-$xe->{Family}-$xe->{Encoding}/, @nnbn_xlfd));
+			next;
+		}
+		push (@nnnn_xlfd, $xlfd) if (!grep (/$xe->{Foundry}-$xe->{Family}-$xe->{Encoding}/, @nnnn_xlfd));
+	}
+	return \(@nnnn_xlfd, @innn_xlfd, @nnbn_xlfd, @inbn_xlfd);
+}
+
+# write section
+sub write_section {
+	my $file = shift;
+	my $family = shift;
+
+	my @nnnn_iso8859_1 = ();
+	my @innn_iso8859_1 = ();
+	my @nnbn_iso8859_1 = ();
+	my @inbn_iso8859_1 = ();
+	my @nnnn_iso10646 = ();
+	my @innn_iso10646 = ();
+	my @nnbn_iso10646 = ();
+	my @inbn_iso10646 = ();
+	my @nnnn_other = ();
+	my @innn_other = ();
+	my @nnbn_other = ();
+	my @inbn_other = ();
+	my $id_iso8859_1 = $family . '_iso8859_1';
+	my $id_iso10646 = $family . '_iso10646';
+	my $id_other = $family . '_other';
+	my $hash;
+	my ($nnnn, $innn, $nnbn, $inbn);
+
+	open (F, ">> $file");
+	($nnnn, $innn, $nnbn, $inbn) = store_xlfd ($Ids{$id_other});
+	@nnnn_other = @{$nnnn};
+	@innn_other = @{$innn};
+	@nnbn_other = @{$nnbn};
+	@inbn_other = @{$inbn};
+	($nnnn, $innn, $nnbn, $inbn) = store_xlfd ($Ids{$id_iso10646});
+	@nnnn_iso10646 = @{$nnnn};
+	@innn_iso10646 = @{$innn};
+	@nnbn_iso10646 = @{$nnbn};
+	@inbn_iso10646 = @{$inbn};
+	($nnnn, $innn, $nnbn, $inbn) = store_xlfd ($Ids{$id_iso8859_1});
+	@nnnn_iso8859_1 = @{$nnnn};
+	@innn_iso8859_1 = @{$innn};
+	@nnbn_iso8859_1 = @{$nnbn};
+	@inbn_iso8859_1 = @{$inbn};
+
+	print F "$family normal normal normal normal \\\n\t\"";
+	if (scalar (@nnnn_other) > 0) {
+		print F join (",\\\n\t", @nnnn_other);
+		print F ",\\\n\t";
+	}
+	if (scalar (@nnnn_iso10646) > 0) {
+		print F join (",\\\n\t", @nnnn_iso10646);
+		print F ",\\\n\t";
+	}
+	if (exists ($UNSUPPORTED_XLFD {"$family-normal-normal-normal-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-normal-normal-normal-normal"};
+		print F ",\\\n\t";
+	}
+	if (scalar (@nnnn_iso8859_1) > 0) {
+		print F join (",\\\n\t", @nnnn_iso8859_1);
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-medium-r-normal--*-*-*-*-*-*-*-*\"\n\n";
+
+	print F "$family italic normal normal normal \\\n\t\"";
+	if (scalar (@innn_other) > 0) {
+		print F join (",\\\n\t", @innn_other);
+		print F ",\\\n\t";
+	}
+	if (scalar (@innn_iso10646) > 0) {
+		print F join (",\\\n\t", @innn_iso10646);
+		print F ",\\\n\t";
+	}
+	if (exists ($UNSUPPORTED_XLFD {"$family-italic-normal-normal-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-italic-normal-normal-normal"};
+		print F ",\\\n\t";
+	}
+	if (scalar (@innn_iso8859_1) > 0) {
+		print F join (",\\\n\t", @innn_iso8859_1);
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-medium-i-normal--*-*-*-*-*-*-*-*\"\n\n";
+
+	print F "$family normal normal bold normal \\\n\t\"";
+	if (scalar (@nnbn_other) > 0) {
+		print F join (",\\\n\t", @nnbn_other);
+		print F ",\\\n\t";
+	}
+	if (scalar (@nnbn_iso10646) > 0) {
+		print F join (",\\\n\t", @nnbn_iso10646);
+		print F ",\\\n\t";
+	}
+	if (exists ($UNSUPPORTED_XLFD {"$family-normal-normal-bold-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-normal-normal-bold-normal"};
+		print F ",\\\n\t";
+	}
+	if (scalar (@nnbn_iso8859_1) > 0) {
+		print F join (",\\\n\t", @nnbn_iso8859_1);
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-bold-r-normal--*-*-*-*-*-*-*-*\"\n\n";
+
+	print F "$family italic normal bold normal \\\n\t\"";
+	if (scalar (@inbn_other) > 0) {
+		print F join (",\\\n\t", @inbn_other);
+		print F ",\\\n\t";
+	}
+	if (scalar (@inbn_iso10646) > 0) {
+		print F join (",\\\n\t", @inbn_iso10646);
+		print F ",\\\n\t";
+	}
+	if (exists ($UNSUPPORTED_XLFD {"$family-italic-normal-bold-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-italic-normal-bold-normal"};
+		print F ",\\\n\t";
+	}
+	if (scalar (@inbn_iso8859_1) > 0) {
+		print F join (",\\\n\t", @inbn_iso8859_1);
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-bold-i-normal--*-*-*-*-*-*-*-*\"\n\n";
+	close F;
+}
+
+sub do_init {
+	return if ($init);
+
+	$init = 1;
+	foreach my $i (@Families) {
+		foreach my $j (@Encodings) {
+			my $id = $i . '_' . $j;
+			$Ids{$id} = defoma_id_open_cache ($id);
+		}
+	}
+	if ( -f $ConfFile ) {
+		do "$ConfFile" or fatal ("$@\n");
+	}
+	return 0;
+}
+
+sub do_term {
+	unless ($term) {
+		$term = 1;
+
+		my $xe;
+		my $xlfd;
+
+		open (F, "> $PangoAlias.bak") or die "$PangoAlias.bak: $!";
+		print F "## THIS FILE IS GENERATED BY DEFOMA, DO NOT EDIT\n\n";
+		close F;
+
+		## Sans
+		write_section ("$PangoAlias.bak", "sans");
+
+		## Serif
+		write_section ("$PangoAlias.bak", "serif");
+
+		## Monospace
+		write_section ("$PangoAlias.bak", "monospace");
+
+		rename ("$PangoAlias.bak", "$PangoAlias");
+		foreach my $i (@Families) {
+			foreach my $j (@Encodings) {
+				my $id = $i . '_' . $j;
+				defoma_id_close_cache ($Ids{$id});
+				$Ids{$id} = undef;
+			}
+		}
+	}
+	return 0;
+}
+
+sub actual_register {
+	my ($font, $h, $cache) = @_;
+	my $id_iso8859_1;
+	my $id_iso10646;
+	my $id_other;
+	my $xe;
+
+	$id_iso8859_1 = $cache . "_iso8859_1";
+	$id_iso10646 = $cache . "_iso10646";
+	$id_other = $cache . "_other";
+	$xe = get_xlfd_element ($font);
+	if ($xe->{Encoding} =~ /iso8859-1/) {
+		defoma_id_register ($Ids{$id_iso8859_1},
+				    type => 'real',
+				    font => $font,
+				    id => $font,
+				    priority => $h->{Priority});
+	} elsif ($xe->{Encoding} =~ /iso10646/) {
+		defoma_id_register ($Ids{$id_iso10646},
+				    type => 'real',
+				    font => $font,
+				    id => $font,
+				    priority => $h->{Priority});
+	} else {
+		defoma_id_register ($Ids{$id_other},
+				    type => 'real',
+				    font => $font,
+				    id => $font,
+				    priority => $h->{Priority});
+	}
+}
+
+sub do_register {
+	my $font = shift;
+	my @hints = defoma_font_get_hints ('xfont', $font);
+	my $h = parse_hints_start ('', @hints);
+	my $cache = "monospace";
+	my $registered = 0;
+
+	if (exists ($h->{'Shape'}) && $h->{'Shape'} =~ /\bNoSerif\b/) {
+		$cache = "sans";
+		actual_register ($font, $h, $cache);
+		$registered = 1;
+	}
+	if (exists ($h->{'Shape'}) && $h->{'Shape'} =~ /\bSerif\b/) {
+		$cache = "serif";
+		actual_register ($font, $h, $cache);
+		$registered = 1;
+	}
+	if ((exists ($h->{'Width'}) && $h->{'Width'} =~ /\bFixed\b/) || !$registered) {
+		$cache = "monospace";
+		actual_register ($font, $h, $cache);
+	}
+	
+	return 0;
+}
+
+sub do_unregister {
+	my $font = shift;
+
+	foreach my $i (@Families) {
+		foreach my $j (@Encodings) {
+			my $id = $i . '_' . $j;
+			defoma_id_unregister ($Ids{$id}, type => 'real', font => $font);
+		}
+	}
+}
+
+sub xfont {
+	my $arg = shift;
+
+	if ($arg eq 'init') { return do_init (); }
+	elsif ($arg eq 'term') { return do_term (); }
+	elsif ($arg eq 'register') { return do_register (@_); }
+	elsif ($arg eq 'unregister') { return do_unregister (@_); }
+	return 0;
+}
+
+1;
+
diff -Naur pango-1.0.5.old/update-pango-modules pango-1.0.5.new/update-pango-modules
--- pango-1.0.5.old/update-pango-modules	Thu Jan  1 09:00:00 1970
+++ pango-1.0.5.new/update-pango-modules	Tue Nov 26 02:13:26 2002
@@ -0,0 +1,20 @@
+#!/bin/sh -e
+#
+# update-pango-modules
+#
+#   Package which install pango module(s) should call update-pango-modules in
+#   it's PostInstScript/PostRmScript to update pango.module file.
+#
+
+CONFDIR=@PREFIX@/etc/pango
+CONFFILE=$CONFDIR/pango.modules
+
+mkdir -p $CONFDIR
+
+TMPFILE=`tempfile`
+pango-querymodules >$TMPFILE
+
+mv -f $TMPFILE $CONFFILE
+chmod 0644 $CONFFILE
+
+exit 0
diff -Naur pango-1.0.5.old/update-pangox-aliases pango-1.0.5.new/update-pangox-aliases
--- pango-1.0.5.old/update-pangox-aliases	Thu Jan  1 09:00:00 1970
+++ pango-1.0.5.new/update-pangox-aliases	Tue Nov 26 02:27:25 2002
@@ -0,0 +1,76 @@
+#! /usr/bin/perl
+
+use strict;
+use POSIX;
+use vars qw(%UNSUPPORTED_XLFD);
+
+my $PangoAlias = '@PREFIX@/var/lib/defoma/pango.d/pangox.aliases';
+my $PangoAliases = '@PREFIX@/etc/pango/pangox.aliases';
+my $ConfFile = '@PREFIX@/etc/defoma/config/pango.conf';
+my @clean = ("@PREFIX@/bin/defoma-app", "clean", "pango");
+my @update = ("@PREFIX@/bin/defoma-app", "update", "pango");
+
+# write section
+sub write_section {
+	my $file = shift;
+	my $family = shift;
+
+	open (F, ">> $file");
+	print F "$family normal normal normal normal \\\n\t\"";
+	if (exists ($UNSUPPORTED_XLFD {"$family-normal-normal-normal-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-normal-normal-normal-normal"};
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-medium-r-normal--*-*-*-*-*-*-*-*\"\n\n";
+
+	print F "$family italic normal normal normal \\\n\t\"";
+	if (exists ($UNSUPPORTED_XLFD {"$family-italic-normal-normal-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-italic-normal-normal-normal"};
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-medium-i-normal--*-*-*-*-*-*-*-*\"\n\n";
+
+	print F "$family normal normal bold normal \\\n\t\"";
+	if (exists ($UNSUPPORTED_XLFD {"$family-normal-normal-bold-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-normal-normal-bold-normal"};
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-bold-r-normal--*-*-*-*-*-*-*-*\"\n\n";
+
+	print F "$family italic normal bold normal \\\n\t\"";
+	if (exists ($UNSUPPORTED_XLFD {"$family-italic-normal-bold-normal"})) {
+		print F $UNSUPPORTED_XLFD {"$family-italic-normal-bold-normal"};
+		print F ",\\\n\t";
+	}
+	print F "-*-fixed-bold-i-normal--*-*-*-*-*-*-*-*\"\n\n";
+	close F;
+}
+
+system (@clean) == 0 or die "Failed to clean up for defoma: $?";
+system (@update) == 0 or die "Failed to update for defoma: $?";
+
+if ( ! -e $PangoAlias ) {
+	print "*** You don't have any defomized font packages.\n";
+	print "*** So we are trying to force to generate pangox.aliases...\n";
+
+	do "$ConfFile" or fatal ("$@\n");
+
+	open (F, "> $PangoAlias.bak") or die "Can't create $PangoAlias.bak: $?";
+	print F "## THIS FILE IS GENERATED BY UPDATE-PANGOX-ALIAS, DO NOT EDIT\n\n";
+	close F;
+
+	## Sans
+	write_section ("$PangoAlias.bak", "sans");
+
+	## Serif
+	write_section ("$PangoAlias.bak", "serif");
+
+	## Monospace
+	write_section ("$PangoAlias.bak", "monospace");
+
+	rename ("$PangoAlias.bak", "$PangoAlias");
+}
+
+symlink ("$PangoAlias", "PangoAliases");
+
+1;
