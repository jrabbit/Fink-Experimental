<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document SYSTEM "../finkdoc.dtd">

<document filename="index" lang="en" >
<title>Create a Fink Package - Quick Start</title>
<shorttitle>Packaging Quick Start</shorttitle>
<cvsid>$Id$</cvsid>

<preface>
<p>
This document is for people who want to create a package for <tt>Fink</tt>. It
complements the Packaging Manual, which is a more detailed and comprehensive
document.
</p>
<p>
We'll guide you through the process of making a Fink package.
First we explain the general procedure. Then we show the creation of two example Fink
packages. The first one will be <link url="http://maxwell.sourceforge.net">
maxwell</link> and the second <link url="http://www.gnu.org/software/stow/stow.html">GNU Stow</link>.
</p>

</preface>




<chapter filename="howtostart">
<title>How to Start</title>
<shorttitle>How to Start</shorttitle>

<section name="Learn"><title>Learn the Basics</title>
<p>
First you should learn a few basic concept about how to build Fink packages. 
We suggest you:
</p>

<ul>
<li>
Have a look at 
<link url="http://fink.sourceforge.net/doc/UsingFink.pdf">
Using Fink: A Developer's How To</link>
(2MB pdf file) - slides from a presentation at the 
<link url="http://conferences.oreillynet.com/macosx2002/">O'Reilly Mac OS X Conference</link>.
</li>
<li>
Read and try to understand the two examples 
(<link url="example1.php">Example 1</link>, <link url="example2.php">Example 2</link>)
provided here.
</li>
<li>
Look at other, similar packages in your '/sw/fink/dists/unstable/main/finkinfo/' 
directory or 
<link url="http://cvs.sourceforge.net/viewcvs.py/fink/dists/10.3/unstable/">
in the online CVS repository</link> and take one (or several) info file(s) as 
a starting point.
</li>
<li>
Search the 
<link url="http://sourceforge.net/tracker/?atid=414256&amp;group_id=17203">Package Submission Tracker</link>
if somebody else already tried to package the same and the 
<link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203">Package Request Tracker</link>
if there is a matching request. You might find valuable information there.
</li>
<li>
Maybe browse the 
<link url="http://fink.sourceforge.net/doc/packaging/">Packaging Manual</link>
if you think you need more detailed information.
</li>
</ul>

</section>


<section name="Make"><title>Make your Package</title>
<p>
Save your new info file (and patch file - if needed) into your 
'/sw/fink/dists/local/main/finkinfo/' directory. The file should be named
'packagename.info' (and 'packagename.patch') where 'packagename' is the name of your
package. If this directory doesn't exist you need to create it manually.
</p>

<p>
To make your new package known to fink you need to run:
</p>
<codeblock>
finkdev% fink index
</codeblock>
<p>
Check if fink found your package by typing:
</p>
<codeblock>
finkdev% fink list packagename
</codeblock>
<p>
If it doesn't show up in the list you might need to change your
<link url="http://fink.sourceforge.net/doc/users-guide/conf.php#optional">fink configuration file</link>
to include your local tree.
</p>
<p>
If you need more information read the 
<link url="http://fink.sourceforge.net/doc/packaging/">Packaging Manual</link>
or use one or more of different 
<link url="http://fink.sourceforge.net/help/">help sources</link>.
You should also subscribe to the 
<link url="http://fink.sourceforge.net/lists/">fink-devel</link>
mailling list.
</p>
</section>


<section name="Validate"><title>Validate your Package</title>
<p>
During validation of your package you should set the verbose level of fink
to the highest possible value. Check the section on the
<link url="http://fink.sourceforge.net/doc/users-guide/conf.php#optional">fink configuration file</link>
about how to change the verbose level.
</p>
<p>
Check if your package passes validation by running:
</p>
<codeblock>
finkdev% fink validate packagename.info
</codeblock>
<p>
If the validation passes try to build your package with:
</p>
<codeblock>
finkdev% fink build packagename
</codeblock>
<p>
If the build succeeds check the content of the binary package with:
</p>
<codeblock>
finkdev% dpkg -c /sw/fink/dists/local/main/binary-darwin-powerpc/packagename.deb
</codeblock>
<p>
Check if all files that you think should be in the package are actually
in the .deb file. Make sure that nothing is installed directly into /sw.
</p>
<p>
Now you can also validate the binary package by doing:
</p>
<codeblock>
finkdev% fink validate /sw/fink/dists/local/main/binary-darwin-powerpc/packagename.deb
</codeblock>
<p>
If all is well install the package with:
</p>
<codeblock>
finkdev% fink install packagename
</codeblock>
<p>
and test the functionality of your package.
</p>
<p>
If any of the above steps fail try to correct the errors and restart at the 
top with the 'fink index' step so that fink knows about your changes.
</p>
</section>


<section name="Submitt"><title>Submit your Package</title>
<p>
If your package passes all the checks above you now can submit the info 
(and patch if necessary) file to the 
<link url="http://sourceforge.net/tracker/?func=add&amp;group_id=17203&amp;atid=414256">
Package Submission Tracker</link>.
</p>
<p>
A package reviewer should now take a look at your package submission and
add it to the Fink unstable tree if the package seems ready. If not you
will be asked to bring the package into compliance with the policy.
</p>
<p>
<em>Please note:</em>
</p>
<ul>
<li>
If feasible add multiple items one at a time to the same tracker item 
(e.g. info and patch files).
</li>
<li>
Add a note whether your package is intended for the '10.2-gcc3.3' tree, 
'10.3' tree, or both,
</li>
<li>
which 'section' (graphics, sci, etc.) you feel it belongs in, and
</li>
<li>
that you have run the command 'fink validate' on your info and deb files.
</li>
<li>
Set the "Group" field of the tracker item to "Undergoing Validation"
when you create the new tracker. Also change it back to "Undergoing Validation"
whenever you fixed problems package reviewers found in your submission.
</li>
</ul>

</section>

</chapter>




<chapter filename="example1">
<title>Example 1 - the Maxwell Package</title>
<shorttitle>Example 1</shorttitle>


<section name="Basics"><title>Basics</title>
<p>
First Maxwell. Lets open our editor and get started. We know the package name,
its version and where to grab the source tar ball from. So we'll type this into
our editor window:
</p>
<codeblock>
Package: maxwell
Version: 0.5.1
Revision: 1
Source: mirror:sourceforge:%n/%n-%v.tar.gz
</codeblock>
<p>
So we have the name and version which are easy to understand, but what of these
other two fields? Revision is the &quot;version&quot; of the Fink package,
Version, on the other hand is the upstream source version. Since this is the
first time we have attempted to make a maxwell-0.5.1 package, it is revision 1.
</p>
<p>
The Source field is where fink will grab the source tarball from. Because 
<link url="http://sourceforge.net">Sourceforge</link> has a system where
packages are mirrored around the world, and since <tt>fink</tt> knows about it,
we use <tt>mirror:sourceforge:</tt>. <tt>%n</tt> expands to the package name,
maxwell, and <tt>%i</tt> expands to the package version, 0.5.1.
</p>
<p>
Now we can save this as <tt>maxwell.info</tt> in 
<tt>/sw/fink/dists/local/main/finkinfo/</tt>. That done, we can see how we
are doing by using <tt>fink validate</tt>.
</p>
<codeblock>
finkdev% fink validate maxwell.info 
Validating package file maxwell.info...
Error: Required field "Maintainer" missing. (maxwell.info)
</codeblock>
<p>
Oops, looks like we missed a couple of fields. Lets add some more:
</p>
<codeblock>
Maintainer: John Doe &lt;jdoe@example.com&gt;
HomePage: http://maxwell.sourceforge.net
License: MIT
</codeblock>
<p>
We add ourselves as the maintainer of the Fink maxwell package and add it's
homepage, looking at the sourceforge project page, we see that it is MIT
Licensed, so we add that too. Now lets try again:
</p>
<codeblock>
finkdev% fink validate maxwell.info
Validating package file maxwell.info...
Warning: Unknown license "MIT". (maxwell.info)
Error: No MD5 checksum specified for "source". (maxwell.info)
Error: No package description supplied. (maxwell.info)
</codeblock>
<p>
Aaargh! We seem to be getting worse, not better, never mind, head off over to
the packaging manual to see what is allowed for License, and we see that we
can just change MIT to OSI-Approved, as the MIT license is, indeed, approved
by the <link url="http://www.opensource.org/">OSI</link>. We can also grab a
one line description of the package from the homepage. So we change those:
</p>
<codeblock>
License: OSI-Approved
Description: Mac OS X S.M.A.R.T. Tool
</codeblock>
<p>
But what to do about that warning about MD5 checksums? Well, why don't we just
ask fink to fetch the source?
</p>
<codeblock>
finkdev% fink fetch maxwell
/usr/bin/sudo /sw/bin/fink  fetch maxwell
Reading package info...
Updating package index... done.
Information about 3377 packages read in 30 seconds.
WARNING: No MD5 specified for Source of package maxwell-0.5.1-1 Maintainer: John Doe &lt;jdoe@example.com&gt;
curl -f -L -O http://distfiles.opendarwin.org/maxwell-0.5.1.tar.gz
  % Total    % Received % Xferd  Average Speed          Time             Curr.
                                 Dload  Upload Total    Current  Left    Speed
  0     0    0     0    0     0      0      0 --:--:--  0:00:00 --:--:--     0
curl: (22) The requested URL returned error: 404
### execution of curl failed, exit code 22
Downloading the file "maxwell-0.5.1.tar.gz" failed.

(1)      Give up
(2)      Retry the same mirror
(3)      Retry another mirror from your continent
(4)      Retry another mirror
(5)      Retry using next mirror set "sourceforge"

How do you want to proceed? [3] 5
curl -f -L -O http://west.dl.sourceforge.net/sourceforge/maxwell/maxwell-0.5.1.tar.gz
  % Total    % Received % Xferd  Average Speed          Time             Curr.
                                 Dload  Upload Total    Current  Left    Speed
100  7856  100  7856    0     0  19838      0  0:00:00  0:00:00  0:00:00 6511k
</codeblock>
<p>
So we can now get the md5 by running <tt>md5 /sw/src/maxwell-0.5.1.tar.gz</tt>,
and add it to the .info file:
</p>
<codeblock>
Source-MD5: ce5c354b2fed4e237524ad0bc59997a3
</codeblock>
<p>
And now we find that <tt>fink validate</tt> passes, yippee!
</p>
</section>


<section name="build"><title>Build</title>
<p>
Now we can build the package, let's just try it:
</p>
<codeblock>
finkdev% fink build maxwell
/usr/bin/sudo /sw/bin/fink  build maxwell
Reading package info...
Updating package index... done.
Information about 3498 packages read in 32 seconds.
The following package will be built:
 maxwell
gzip -dc /sw/src/maxwell-0.5.1.tar.gz | /sw/bin/tar -xvf -  --no-same-owner --no-same-permissions 
maxwell-0.5.1/
maxwell-0.5.1/LICENSE
maxwell-0.5.1/Makefile
maxwell-0.5.1/maxwell.8
maxwell-0.5.1/maxwell.c
maxwell-0.5.1/README
./configure --prefix=/sw 
Can't exec "./configure": No such file or directory at /sw/lib/perl5/Fink/Services.pm line 403.
</codeblock>
<p>
Hmm, well that did not go all that well. Let's read the README and see what it says...
</p>
<codeblock>
To build type 'make'.

To install in /usr/local type 'sudo make install', to install elsewhere, type 
'sudo make install prefix=/elsewhere'
</codeblock>
<p>
Ah hah, so we can't use the default compilescript and installscript here, we need our own,
that's easily resolved:
</p>
<codeblock>
CompileScript: make
InstallScript: &lt;&lt;
#! /bin/sh -ev
make install prefix=%i
&lt;&lt;
</codeblock>

</section>
</chapter>




<chapter filename="example2">
<title>Example 2 - the Stow Package</title>
<shorttitle>Example 2</shorttitle>


<section name="Basics"><title>Basics</title>
<p>
bla bla
</p>
</section>


<section name="build"><title>Build</title>
<p>
Now we can build the package, let's just try it:
</p>
</section>
</chapter>


</document>
