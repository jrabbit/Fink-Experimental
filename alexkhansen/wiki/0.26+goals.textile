* InheritedBuildDepends

* [[XMLish Source and Patch|new Source blocks]]

* more indexing work
** refactor into ==Indexer.pm== and possibly other modules
** load-on-demand
** version the DB
** forget_packages should have better options

* dep-engine refactoring work?

* External API (so scripts can 'use Fink')

* optimizations
** auto-split \PkgVersion?

* bug fixing!

* dist-upgrade?

* automatically detect users' location, even for binary install

* "rethink passwd":http://sourceforge.net/tracker/index.php?func=detail&aid=642075&group_id=17203&atid=367203

* "Check version dependencies during package upgrade":https://sourceforge.net/tracker/?func=detail&aid=992093&group_id=17203&atid=117203 to avoid (or at least minimize) dep breakage. If foo-dev:depends:foo(=%v-%r), upgrading foo should (but does not currently) trigger an upgrade of foo-dev. 
** Could use 'apt-get check' after each phase_activate to trigger additional pkg installations? *Not really*, since the apt Packages files tend to be out of date in the middle of a fink run, which is likely to confuse apt.
** Does apt-get check use the Packages files? At least in principle, it could be done just with the dpkg status db--maybe there's a dpkg form of this?

* New license that permits source mirroring but not binary distribution. (see "openssl-linked packages: need new license type?":http://article.gmane.org/gmane.os.apple.fink.devel/10927 on fink-devel)

* launchd support. We may *have* to get this done before 10.5, since the old \StartupItems mechanism is deprecated.
** Modify daemonic so that it turns \DaemonicFile/Name into launchd plists on 10.4 and above. (make sure 'daemonic install' checks for and removes an existing \StartupItems if it installs a \LaunchAgents) 
** Add a new field for explicitly specifying launchd plist files to be placed in /Library/\LaunchAgents (or \LaunchDaemons? what's the difference?). This should also automate calling launchctl load and unload in \PostInst and \PreRm. (What about backwards compatibility, what would happen on 10.3?)
