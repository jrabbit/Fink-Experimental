<?
$title = "i18n - Files";
$cvs_author = 'Author: alexkhansen';
$cvs_date = 'Date: 2004/03/04 22:05:44';

$metatags = '<link rel="contents" href="index.php" title="i18n Contents"><link rel="next" href="procedure.php" title="Procedure for Updating Documents"><link rel="prev" href="intro.php" title="Introduction">';

include "header.inc";
?>

<h1>i18n - 2 The Documentation Files</h1>
    
    
    <h2><a name="file-standards">2.1 File Standards</a></h2>
      
      <p>There are two different file standards you will have to be concerned with as a translator:</p>
      <ol>
        <li>
          <b>Static (PHP only)</b>
          <p>These are documents whose organization (e.g. item numbering) isn't expected to change much on a day-to-day basis.  In this case the document just has a PHP file, which you will translate.</p>
        </li>
        <li>
          <b>Dynamic (XML generates PHP and HTML)</b>
          <p>These documents (e.g. the FAQ) are updated and restructured more often, so they need the facility to be reorganized dynamically.  Such documents use an XML file as the basis by which PHP and HTML files are generated, via a script.  As a translator, your responsibility is to translate the XML file.</p>
        </li>
      </ol>
    
    <h2><a name="acquiring">2.2 Acquiring Files to Work on.</a></h2>
      
      <p>
For now, you must check out the xml branch of the web site:</p>
      <ol>
        <li>
Open a terminal</li>
        <li>Create a directory somewhere to contain the Fink web branch:
<pre>mkdir -p <b>fullpathofthedirectory</b>
          </pre>
        </li>
        <li>
Move to that directory:
<pre>cd fullpathofthedirectory</pre>
        </li>
        <li>
Set the cvs environment variable.
For <code>bash</code> and <code>zsh</code>:
<pre>export CVS_RSH=ssh</pre>
For <code>tcsh</code>:
<pre>setenv CVS_RSH ssh</pre>
        </li>
        <li>Login to cvs.sourceforge.net.  If you aren't signed up for CVS access yet, then you can do this anonymously:
<ol>
            <li>
              <pre>cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/fink login</pre>
            </li>
            <li>
Push the enter key (no password, anonymous as default)
</li>
            <li>
Check out the xml module (for example):
<pre>cvs -z3 -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/fink co web/xml</pre>
            </li>
          </ol>If you do have commits access, you may prefer to check out using your username:<ol>
            <li>You don't have to do the login step above, but can go right to<pre>cvs -z3 -d:ext:yourusername@cvs.sourceforge.net:/cvsroot/fink co web/xml</pre>
    where <b>yourusername</b> is of course your SourceForge username.</li>
            <li>In this case you should enter your SourceForge passport at the prompt.</li>
          </ol>
        </li>
      </ol>
    
    <h2><a name="initial-translation">2.3 Initial Translation</a></h2>
      
      <p>The files to translate, in order of priority, are:
</p>
      <p>
        Title (English version file)</p>
      <ol>
        <li>Constants file (<code>web/xml/web/constants.*.inc</code>)(see below)</li>
        <li>Static PHP files (e.g. <code>web/xml/web/*.en.php</code>)
  </li>
        <li>User's Guide (<code>web/xml/uguide.xml</code>)</li>
        <li>FAQ (<code>web/xml/faq.xml</code>)</li>
        <li>Running X11 (<code>web/xml/x11/x11.xml</code>)</li>
        <li>Document Index (<code>web/xml/doc/doc.xml</code>, but the PHP files for this  cannot be generated by running <code>make</code> due to remaining xslt problems)</li>
        <li>Packaging (<code>web/xml/packaging/packaging.xml</code>)</li>
        <li>Porting (<code>web/xml/porting/porting.xml</code>)</li>
        <li>News (<code>web/xml/news/news.xml</code>)</li>
      </ol>
      <p>The <code>constants.*.inc</code> files are intended to deal with hard coded items in the PHP include files.  They are mostly menu items and such, located on top and left of the pages.  You should separate them from the scripts and create a file like the sample file (English) below:</p>
      <pre>
/* The Sections.  Used in Menu Navigation Bar */
define (FINK_SECTION_HOME, 'Home');
define (FINK_SECTION_DOWNLOAD, 'Download');
define (FINK_SECTION_PACKAGE, 'Packages');
define (FINK_SECTION_HELP, 'Help');
define (FINK_SECTION_FAQ, 'F.A.Q.');
define (FINK_SECTION_DOCUMENTATION, 'Documentation');
define (FINK_SECTION_MAILING_LISTS, 'Mailing Lists');

/* The Home Subsections.  Used in Menu Navigation Bar */
define (FINK_SECTION_HOME_INDEX, 'Index');
define (FINK_SECTION_HOME_NEWS, 'News');
define (FINK_SECTION_HOME_ABOUT, 'About');
define (FINK_SECTION_HOME_CONTRIBUTORS, 'Contributors');
define (FINK_SECTION_HOME_LINKS, 'Links');

/* The word 'Sections'.  Used in Menu Navigation Bar */
define (FINK_SECTIONS, 'Sections');

/* Contents as Table of Contents.  Used in FAQ/Documentation Sections */
define (FINK_CONTENTS, 'Contents');
</pre>
      <p>When you translate, you normally follow the steps as below (suppose you 
are translating the Running X11 document into French):</p>
      <ol>
        <li>Copy the xml file
<pre>cp x11.en.xml x11.fr.xml</pre>
        </li>
        <li>Edit the line to declare it is French and its encoding is UTF-8
      <pre>&lt;?xml version='1.0' encoding='utf-8' ?&gt;
...
&lt;document filename="index" lang="fr" &gt;
...</pre>
        </li>
        <li>Save as UTF-8
Be aware that the encoding must be utf-8 and take care not to change
anything but true text.</li>
        <li>Once you are done, or just to test it, edit the <code>Makefile</code> to include your 
language as:
<pre>LANGUAGES = en ja fr
include $(basedir)/Makefile.i18n.common</pre>
          <p>then type <code>make</code> in the directory.  This should generate your PHP (and 
possibly some other) files  as well as English and Japanese.</p>
        </li>
      </ol>
      <p>Note:
If you see some misspelling or errors in the English
file, don't change it, but instead report it instead to the fink-i18n list, so
that the master English file is changed.
</p>
    
    <h2><a name="committing">2.4 Committing the Changes</a></h2>
      
      <p>Now you need to send your changes to the main server.  To do this you need to make sure that you have commits access.  This process is a bit different between the static and dynamic documents:</p>
      <ul>
        <li>
          <b>Static:  </b>(PHP files only)To commit these documents do the following:<ol>
            <li>
Open a terminal</li>
            <li>
Set the cvs environment variable.
For <code>bash</code> and <code>zsh</code>:
<pre>export CVS_RSH=ssh</pre>
For <code>tcsh</code>:
<pre>setenv CVS_RSH ssh</pre>
              <p>If you don't know how to use the <code>vi</code> editor you will want to set the EDITOR 
environment variable to something more friendly, e.g. for bash and zsh:</p>
              <pre>export EDITOR=pico</pre>
              <p>and for tcsh:</p>
              <pre>setenv EDITOR pico</pre>
            </li>
            <li>Move to the directory that contains the file you want to check in, e.g:
<pre>cd ~/Documents/Fink-i18n/web/xml/web</pre>
              <p>if you created your <code>web</code> tree under <code>Documents/Fink-i18n/</code> in your home folder, and you want to commit a PHP file from the web/xml/web directory.</p>
            </li>
            <li>If the file is a new one that you've created, then you need to add it to the list of files, e,g.:<pre>cvs -z3 -d:ext:yourusername@cvs.sourceforge.net:/cvsroot/fink add download.ru.php</pre>Give your SourceForge password at the prompt.  You may get a message about the DSA key of the server being unknown.  Go ahead and answer yes.
    <p>If the file already exists, you can skip to the next step.</p>
            </li>
            <li>Commit the file, e.g. in the prior example:<pre>cvs -z3 -d:ext:yourusername@cvs.sourceforge.net:/cvsroot/fink ci download.ru.php</pre>Give your SourceForge password at the prompt.  You may get a message about the DSA key of the server being unknown.  Go ahead and answer yes.
    <p>Note:  you can commit multiple files at once, and use wildcards, too.</p>
            </li>
          </ol>
        </li>
        <li>
          <b>Dynamic:  </b>(XML and PHP).  After you've modified the XML file, do the following:<ol>
            <li>Open a terminal--this will be referred to as Terminal 1</li>
            <li>In Terminal 1, set the cvs environment variable.
For <code>bash</code> and <code>zsh</code>:
<pre>export CVS_RSH=ssh</pre>
For <code>tcsh</code>:
<pre>setenv CVS_RSH ssh</pre>
              <p>If you don't know how to use the <code>vi</code> editor you will want to set the EDITOR 
environment variable to something more friendly, e.g. for bash and zsh:</p>
              <pre>export EDITOR=pico</pre>
              <p>and for tcsh:</p>
              <pre>setenv EDITOR pico</pre>
            </li>
            <li>In Terminal 1 move to the directory that contains your copy of the Fink web tree, e.g:
<pre>cd ~/Documents/Fink-i18n</pre>
              <p>if you created your <code>web</code> tree under <code>Documents/Fink-i18n/</code> in your home folder.</p>
            </li>
            <li>Open another terminal--which will be referred to as Terminal 2.</li>
            <li>In Terminal 2 move to the directory that contains the file you've added or modified, e.g.<pre>cd ~/Documents/Fink-i18n/web/xml/faq</pre>if you've been working on the FAQ.</li>
            <li>Now in Terminal 2, run<pre>make</pre>
            </li>
            <li>In Terminal 2, if the .xml file is a new one that you've created, then you need to add it to the list of files, e,g.:<pre>cvs -z3 -d:ext:username@cvs.sourceforge.net:/cvsroot/fink add faq.ru.xml</pre>
    You'll need to give your SourceForge password.  You may get a message about the DSA key of the server.  Go ahead and anwer yes.
    <p>If the file already exists, you can skip to the next step.</p>
            </li>
            <li>In Terminal 1, commit the web tree:<pre>cvs -z3 -d:ext:username@cvs.sourceforge.net:/cvsroot/fink ci web</pre>
              <p>You may get a message about the DSA key of the server.  Go ahead and anwer yes.</p>
              <p>Note:  you can commit multiple files at once, and use wildcards, too.</p>
            </li>
            <li>Now in Terminal 2, run<pre>make &amp;&amp; make install</pre>
            </li>
            <li>If this was a new file, you'll need to do some more CVS adding.</li>
          </ol>
        </li>
      </ul>
    
  <p align="right">
Next: <a href="procedure.php">3 Procedure for Updating Documents</a></p>


<?
include "footer.inc";
?>

